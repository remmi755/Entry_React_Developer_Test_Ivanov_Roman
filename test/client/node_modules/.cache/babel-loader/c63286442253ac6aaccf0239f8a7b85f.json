{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Attributes.js\";\nimport React from \"react\";\nimport styles from \"./Attributes.module.css\";\nimport Attribute from \"./Attribute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Attributes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectAttribute = (el, index) => {\n      // console.log(el)\n      console.log(el.id); // console.log(el.items[0])\n      // console.log(el.items[index])\n\n      console.log(index); // console.log(el.items[0].id)\n      // if(el[index] === el ) {\n\n      this.setState({\n        activeAttributeInd: index,\n        activeAttribute: el.id\n      }); // }\n    };\n\n    this.onSelectAttributes = (index, id) => {\n      // alert(index)\n      // console.log(index)\n      // console.log(id)\n      this.setState({\n        activeAttributes: index,\n        activeAttributeId: id\n      });\n    };\n\n    this.state = {\n      activeAttributeInd: 0,\n      activeAttribute: 0\n    };\n  }\n\n  render() {\n    // console.log(this.state.activeAttributes)\n    // console.log(this.state.activeAttributeId)\n    // console.log(this.props)\n    // console.log(this.props.attributes[this.state.activeAttributes].items[1])\n    // let attributes = this.props.product.attributes[this.state.activeAttributes]\n    // let attributes = this.props.product.attributes[0].items\n    // console.log(attributes)\n    // let value ;\n    const {\n      activeAttribute,\n      activeAttributeInd\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: this.props.attributes && this.props.attributes.map((attribute, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.attributeName,\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: styles.h5,\n              children: attribute.name\n            }, `${attribute.id}_${attribute.name}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: styles.sizes,\n              onClick: () => this.onSelectAttribute(attribute, index),\n              children: attribute.items && attribute.items.map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                // onClick={() => this.onSelectAttribute(attribute, index)}\n                className: `${styles.sizeItem}\n                                         ${activeAttribute === attribute.id && activeAttributeInd === index ? styles.activeAttribute : ''}`,\n                style: {\n                  backgroundColor: el.value\n                },\n                children: [attribute.name === 'Color' ? '' : el.value, \" \", index, \" \", el.id]\n              }, el.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, attribute.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Attributes;","map":{"version":3,"names":["React","styles","Attribute","Attributes","Component","constructor","props","onSelectAttribute","el","index","console","log","id","setState","activeAttributeInd","activeAttribute","onSelectAttributes","activeAttributes","activeAttributeId","state","render","container","ul","attributes","map","attribute","attributeName","h5","name","sizes","items","sizeItem","backgroundColor","value"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Attributes.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Attributes.module.css\"\r\nimport Attribute from \"./Attribute\"\r\n\r\nclass Attributes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeAttributeInd: 0,\r\n            activeAttribute: 0,\r\n        }\r\n    }\r\n\r\n    onSelectAttribute = (el, index) => {\r\n        // console.log(el)\r\n        console.log(el.id)\r\n        // console.log(el.items[0])\r\n        // console.log(el.items[index])\r\n        console.log(index)\r\n\r\n        // console.log(el.items[0].id)\r\n        // if(el[index] === el ) {\r\n            this.setState({\r\n                activeAttributeInd: index,\r\n                activeAttribute: el.id,\r\n            })\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    onSelectAttributes = (index, id) => {\r\n        // alert(index)\r\n        // console.log(index)\r\n        // console.log(id)\r\n\r\n        this.setState({\r\n            activeAttributes: index,\r\n            activeAttributeId: id,\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.activeAttributes)\r\n        // console.log(this.state.activeAttributeId)\r\n        // console.log(this.props)\r\n        // console.log(this.props.attributes[this.state.activeAttributes].items[1])\r\n        // let attributes = this.props.product.attributes[this.state.activeAttributes]\r\n        // let attributes = this.props.product.attributes[0].items\r\n        // console.log(attributes)\r\n        // let value ;\r\nconst {activeAttribute, activeAttributeInd}= this.state\r\n        return (\r\n            <main className={styles.container}>\r\n                {/*{*/}\r\n                {/*    this.props.attributes &&*/}\r\n                {/*    this.props.attributes.map((attribute, index) => (*/}\r\n                {/*        < ul className={styles.ul} >*/}\r\n\r\n                {/*\r\n                {/*            <h5 className={styles.h5} key={`${attribute.id}_${attribute.name}`}>{attribute.name}</h5>*/}\r\n                {/*            <li*/}\r\n                {/*                // onClick={() => this.onSelectAttribute(attribute, index)}*/}\r\n                {/*                // className={`${styles.sizes}*/}\r\n                {/*                //          ${activeAttributes === index && activeAttributeId === attribute.id? styles.activeAttribute : ''}`}*/}\r\n                {/*                className={styles.sizes}*/}\r\n                {/*                key={attribute.name}>*/}\r\n                {/*                {*/}\r\n                {/*                    attribute.items &&*/}\r\n                {/*                    attribute.items.map((el, index) => (*/}\r\n                {/*                        <li key={el.id}*/}\r\n                {/*                            onClick={() => this.onSelectAttribute(attribute, index)}*/}\r\n                {/*                            className={`${styles.sizeItem}*/}\r\n                {/*                         ${activeAttribute === attribute.id && activeAttributeInd === index ? styles.activeAttribute : ''}`}*/}\r\n                {/*                            style={{backgroundColor: el.value}}*/}\r\n                {/*                        >{attribute.name === 'Color' ? '': el.value} {index} {el.id}*/}\r\n                {/*                        </li>*/}\r\n                {/*                    ))*/}\r\n                {/*                }*/}\r\n                {/*            </li>*/}\r\n                {/*        </ul>*/}\r\n                {/*    ))*/}\r\n                {/*}*/}\r\n\r\n\r\n\r\n                <ul className={styles.ul}>\r\n                    {\r\n                        this.props.attributes &&\r\n                        this.props.attributes.map((attribute, index) => (\r\n                            <>\r\n                                <li className={styles.attributeName}><h5 className={styles.h5}\r\n                                        key={`${attribute.id}_${attribute.name}`}>{attribute.name}</h5></li>\r\n                                <li  key={attribute.name}>\r\n                                    <ul className={styles.sizes}\r\n                                        onClick={() => this.onSelectAttribute(attribute, index)}\r\n                                    >\r\n                                        {\r\n                                            attribute.items &&\r\n                                            attribute.items.map((el, index) => (\r\n                                                <li key={el.id}\r\n                                                    // onClick={() => this.onSelectAttribute(attribute, index)}\r\n                                                    className={`${styles.sizeItem}\r\n                                         ${activeAttribute === attribute.id && activeAttributeInd === index ? styles.activeAttribute : ''}`}\r\n                                                    style={{backgroundColor: el.value}}\r\n                                                >{attribute.name === 'Color' ? '': el.value} {index} {el.id}\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </li>\r\n                            </>\r\n\r\n\r\n\r\n                        ))\r\n                    }\r\n                </ul>\r\n\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attributes;"],"mappings":"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"},"metadata":{},"sourceType":"module"}