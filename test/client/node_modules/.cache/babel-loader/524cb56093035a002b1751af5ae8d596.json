{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\test\\\\client\\\\src\\\\components\\\\Attributes.jsx\";\nimport React from \"react\";\nimport styles from \"./Attributes.module.css\";\nimport Attribute from \"./Attribute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Attributes extends React.Component {\n  constructor(props) {\n    super(props); // this.state={\n    //     attributes: this.props.attributes\n    // }\n  } // componentDidUpdate(prevProps, prevState) {\n  //     if(prevProps.cartItem !== this.props.cartItem)\n  //         console.log(\"changed attributes\")\n  // this.setState({\n  //     attributes: this.props.attributes\n  // })\n  // }\n  // componentDidUpdate(prevState, prevProps) {\n  //     if (prevProps.attributes !== this.props.attributes) {\n  //         console.log(prevProps.attributes)\n  //         console.log(this.props.attributes)\n  //         // console.log(this.state.product)\n  //         // console.log(this.state.attributes[0].items[0])\n  //         console.log('changed')\n  //         // this.renderPDP();\n  //         this.setState({\n  //            attributes: this.props.attributes,\n  //         })\n  //         // this.renderPDP()\n  //     }\n  // }\n\n\n  render() {\n    const {\n      attributeName,\n      attributeSize,\n      attributeColor,\n      attributes,\n      onSelectAttribute,\n      activeAttributeItem,\n      activeAttribute,\n      cartItem\n    } = this.props; // console.log(cartItem)\n    // const attributeItem =  attributes && attributes.map( function (attribute, id)  {\n    //         return (\n    //             <li key={id.toString()}>\n    //                 <p className={attributeName}>{attribute.name}</p>\n    //                 <Attribute\n    //                     cartItem={cartItem}\n    //                     onSelectAttribute={onSelectAttribute}\n    //                     attribute={attribute}\n    //                     attributeColor={attributeColor}\n    //                     attributeSize={attributeSize}\n    //                 />\n    //             </li>\n    //         )\n    // })\n\n    return (\n      /*#__PURE__*/\n      // <>\n      _jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: attributes && attributes.map(function (attribute, id) {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: attributeName,\n              children: attribute.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Attribute, {\n              cartItem: cartItem,\n              onSelectAttribute: onSelectAttribute,\n              attribute: attribute,\n              attributeColor: attributeColor,\n              attributeSize: attributeSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, id.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this);\n        } //     <>\n        //\n        //     </>\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) // </>\n\n    );\n  }\n\n}\n\nexport default Attributes;\n{\n  /*<li className={attributeName} key={`${id}_${attribute.name}`}>*/\n}\n{\n  /*    {attribute.name}*/\n}\n{\n  /*</li>*/\n}\n{\n  /*<li key={attribute.toString()}>*/\n}\n{\n  /*    <Attribute*/\n}\n{\n  /*        cartItem={cartItem}*/\n}\n{\n  /*        onSelectAttribute={onSelectAttribute}*/\n}\n{\n  /*        attribute={attribute}*/\n}\n{\n  /*        attributeColor={attributeColor}*/\n}\n{\n  /*        attributeSize={attributeSize}*/\n}\n{\n  /*    />*/\n}\n{\n  /*</li>*/\n}","map":{"version":3,"names":["React","styles","Attribute","Attributes","Component","constructor","props","render","attributeName","attributeSize","attributeColor","attributes","onSelectAttribute","activeAttributeItem","activeAttribute","cartItem","ul","map","attribute","id","name","toString"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/test/client/src/components/Attributes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Attributes.module.css\"\r\nimport Attribute from \"./Attribute\"\r\n\r\nclass Attributes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state={\r\n        //     attributes: this.props.attributes\r\n        // }\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if(prevProps.cartItem !== this.props.cartItem)\r\n    //         console.log(\"changed attributes\")\r\n            // this.setState({\r\n            //     attributes: this.props.attributes\r\n            // })\r\n    // }\r\n\r\n    // componentDidUpdate(prevState, prevProps) {\r\n    //     if (prevProps.attributes !== this.props.attributes) {\r\n    //         console.log(prevProps.attributes)\r\n    //         console.log(this.props.attributes)\r\n    //         // console.log(this.state.product)\r\n    //         // console.log(this.state.attributes[0].items[0])\r\n    //         console.log('changed')\r\n    //         // this.renderPDP();\r\n    //         this.setState({\r\n    //            attributes: this.props.attributes,\r\n    //         })\r\n    //         // this.renderPDP()\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const {\r\n            attributeName,\r\n            attributeSize,\r\n            attributeColor,\r\n            attributes,\r\n            onSelectAttribute,\r\n            activeAttributeItem,\r\n            activeAttribute,\r\n            cartItem\r\n        } = this.props\r\n\r\n        // console.log(cartItem)\r\n\r\n        // const attributeItem =  attributes && attributes.map( function (attribute, id)  {\r\n        //         return (\r\n        //             <li key={id.toString()}>\r\n        //                 <p className={attributeName}>{attribute.name}</p>\r\n        //                 <Attribute\r\n        //                     cartItem={cartItem}\r\n        //                     onSelectAttribute={onSelectAttribute}\r\n        //                     attribute={attribute}\r\n        //                     attributeColor={attributeColor}\r\n        //                     attributeSize={attributeSize}\r\n        //                 />\r\n        //             </li>\r\n        //         )\r\n        // })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            // <>\r\n            <ul className={styles.ul}>\r\n                {\r\n                    attributes &&\r\n                    attributes.map(function (attribute, id)  {\r\n                        <li key={id.toString()}>\r\n                            <p className={attributeName}>{attribute.name}</p>\r\n                            <Attribute\r\n                                cartItem={cartItem}\r\n                                onSelectAttribute={onSelectAttribute}\r\n                                attribute={attribute}\r\n                                attributeColor={attributeColor}\r\n                                attributeSize={attributeSize}\r\n                            />\r\n                        </li>\r\n                    }\r\n                    //     <>\r\n                    //\r\n                    //     </>\r\n                    )\r\n                }\r\n            </ul>\r\n            // </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attributes;\r\n\r\n\r\n{/*<li className={attributeName} key={`${id}_${attribute.name}`}>*/}\r\n{/*    {attribute.name}*/}\r\n{/*</li>*/}\r\n{/*<li key={attribute.toString()}>*/}\r\n{/*    <Attribute*/}\r\n{/*        cartItem={cartItem}*/}\r\n{/*        onSelectAttribute={onSelectAttribute}*/}\r\n{/*        attribute={attribute}*/}\r\n{/*        attributeColor={attributeColor}*/}\r\n{/*        attributeSize={attributeSize}*/}\r\n{/*    />*/}\r\n{/*</li>*/}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACrCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN,EADe,CAEf;IACA;IACA;EACH,CANoC,CAQrC;EACA;EACA;EACQ;EACA;EACA;EACR;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,MAAM,GAAG;IACL,MAAM;MACFC,aADE;MAEFC,aAFE;MAGFC,cAHE;MAIFC,UAJE;MAKFC,iBALE;MAMFC,mBANE;MAOFC,eAPE;MAQFC;IARE,IASF,KAAKT,KATT,CADK,CAYL;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAMA;MAAA;MACI;MACA;QAAI,SAAS,EAAEL,MAAM,CAACe,EAAtB;QAAA,UAEQL,UAAU,IACVA,UAAU,CAACM,GAAX,CAAe,UAAUC,SAAV,EAAqBC,EAArB,EAA0B;UACrC;UAAA;YAAA,wBACI;cAAG,SAAS,EAAEX,aAAd;cAAA,UAA8BU,SAAS,CAACE;YAAxC;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,SAAD;cACI,QAAQ,EAAEL,QADd;cAEI,iBAAiB,EAAEH,iBAFvB;cAGI,SAAS,EAAEM,SAHf;cAII,cAAc,EAAER,cAJpB;cAKI,aAAa,EAAED;YALnB;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA,GAASU,EAAE,CAACE,QAAH,EAAT;YAAA;YAAA;YAAA;UAAA;QAUH,CAXD,CAYA;QACA;QACA;QAdA;MAHR;QAAA;QAAA;QAAA;MAAA,QAFJ,CAuBI;;IAvBJ;EAyBH;;AAzFoC;;AA4FzC,eAAelB,UAAf;AAGA;EAAC;AAAmE;AACpE;EAAC;AAAyB;AAC1B;EAAC;AAAU;AACX;EAAC;AAAoC;AACrC;EAAC;AAAmB;AACpB;EAAC;AAAgC;AACjC;EAAC;AAAkD;AACnD;EAAC;AAAkC;AACnC;EAAC;AAA4C;AAC7C;EAAC;AAA0C;AAC3C;EAAC;AAAW;AACZ;EAAC;AAAU"},"metadata":{},"sourceType":"module"}