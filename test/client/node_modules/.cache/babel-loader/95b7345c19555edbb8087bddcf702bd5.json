{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Attributes.jsx\";\nimport React from \"react\";\nimport styles from \"./Attributes.module.css\";\nimport { AppContext } from \"./AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Attributes extends React.Component {\n  render() {\n    const {\n      attributeName,\n      attributeSize,\n      attributeColor,\n      attributes,\n      onSelectAttribute\n    } = this.props;\n    const {\n      activeAttribute,\n      activeAttributeInd\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: attributes && attributes.map(attribute => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: attributeName,\n            children: attribute.name\n          }, `${attribute.id}_${attribute.name}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: styles.attributeGroup // onClick={(e) => onSelectAttribute(attribute, attribute.id, e)}\n              ,\n              children: attribute.items && attribute.items.map((el, id, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                // onClick={() => onSelectAttribute(attribute, attribute.id, index)}\n                onClick: e => onSelectAttribute(attribute, attribute.id, el, id, index, e),\n                className: `${styles.attribute} ${attribute.name === 'Color' ? attributeColor : attributeSize}\n                                           ${activeAttributeInd === index && activeAttribute.id === el ? styles.activeAttribute : ''}\n                                      \n                                         `,\n                style: {\n                  backgroundColor: el.value\n                },\n                children: attribute.name === 'Color' ? '' : el.value\n              }, el.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 49\n              }, this))\n            }, attribute.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 37\n            }, this)\n          }, attribute.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nAttributes.contextType = AppContext;\nexport default Attributes;","map":{"version":3,"names":["React","styles","AppContext","Attributes","Component","render","attributeName","attributeSize","attributeColor","attributes","onSelectAttribute","props","activeAttribute","activeAttributeInd","context","ul","map","attribute","name","id","attributeGroup","items","el","index","e","backgroundColor","value","contextType"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Attributes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Attributes.module.css\"\r\nimport {AppContext} from \"./AppContext\"\r\n\r\nclass Attributes extends React.Component {\r\n    render() {\r\n        const {attributeName, attributeSize, attributeColor, attributes, onSelectAttribute} = this.props\r\n        const {  activeAttribute, activeAttributeInd} = this.context\r\n\r\n        return (\r\n            <>\r\n                <ul className={styles.ul}>\r\n                    {\r\n                        attributes &&\r\n                        attributes.map((attribute) => (\r\n                            <>\r\n                                <li className={attributeName}  key={`${attribute.id}_${attribute.name}`}>\r\n                                    {attribute.name}</li>\r\n                                <li  key={attribute.id}  >\r\n                                    <ul key={attribute.name} className={styles.attributeGroup}\r\n                                        // onClick={(e) => onSelectAttribute(attribute, attribute.id, e)}\r\n                                    >\r\n\r\n                                        {\r\n                                            attribute.items &&\r\n                                            attribute.items.map((el, id, index) => (\r\n                                                <li key={el.id}\r\n                                                    // onClick={() => onSelectAttribute(attribute, attribute.id, index)}\r\n                                                    onClick={(e) => onSelectAttribute(attribute, attribute.id, el, id, index, e)}\r\n                                                    className={`${styles.attribute} ${attribute.name === 'Color' ? attributeColor : attributeSize}\r\n                                           ${ activeAttributeInd === index && activeAttribute.id === el ? styles.activeAttribute : ''}\r\n                                      \r\n                                         `}\r\n                                                    style={{backgroundColor: el.value}}\r\n                                                >{attribute.name === 'Color' ? '': el.value}\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </li>\r\n                            </>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAttributes.contextType = AppContext;\r\n\r\nexport default Attributes;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACrCC,MAAM,GAAG;IACL,MAAM;MAACC,aAAD;MAAgBC,aAAhB;MAA+BC,cAA/B;MAA+CC,UAA/C;MAA2DC;IAA3D,IAAgF,KAAKC,KAA3F;IACA,MAAM;MAAGC,eAAH;MAAoBC;IAApB,IAA0C,KAAKC,OAArD;IAEA,oBACI;MAAA,uBACI;QAAI,SAAS,EAAEb,MAAM,CAACc,EAAtB;QAAA,UAEQN,UAAU,IACVA,UAAU,CAACO,GAAX,CAAgBC,SAAD,iBACX;UAAA,wBACI;YAAI,SAAS,EAAEX,aAAf;YAAA,UACKW,SAAS,CAACC;UADf,GAAqC,GAAED,SAAS,CAACE,EAAG,IAAGF,SAAS,CAACC,IAAK,EAAtE;YAAA;YAAA;YAAA;UAAA,QADJ,eAGI;YAAA,uBACI;cAAyB,SAAS,EAAEjB,MAAM,CAACmB,cAA3C,CACI;cADJ;cAAA,UAKQH,SAAS,CAACI,KAAV,IACAJ,SAAS,CAACI,KAAV,CAAgBL,GAAhB,CAAoB,CAACM,EAAD,EAAKH,EAAL,EAASI,KAAT,kBAChB;gBACI;gBACA,OAAO,EAAGC,CAAD,IAAOd,iBAAiB,CAACO,SAAD,EAAYA,SAAS,CAACE,EAAtB,EAA0BG,EAA1B,EAA8BH,EAA9B,EAAkCI,KAAlC,EAAyCC,CAAzC,CAFrC;gBAGI,SAAS,EAAG,GAAEvB,MAAM,CAACgB,SAAU,IAAGA,SAAS,CAACC,IAAV,KAAmB,OAAnB,GAA6BV,cAA7B,GAA8CD,aAAc;AAClJ,6CAA8CM,kBAAkB,KAAKU,KAAvB,IAAgCX,eAAe,CAACO,EAAhB,KAAuBG,EAAvD,GAA4DrB,MAAM,CAACW,eAAnE,GAAqF,EAAG;AACtI;AACA,0CANgD;gBAOI,KAAK,EAAE;kBAACa,eAAe,EAAEH,EAAE,CAACI;gBAArB,CAPX;gBAAA,UAQET,SAAS,CAACC,IAAV,KAAmB,OAAnB,GAA6B,EAA7B,GAAiCI,EAAE,CAACI;cARtC,GAASJ,EAAE,CAACH,EAAZ;gBAAA;gBAAA;gBAAA;cAAA,QADJ;YANR,GAASF,SAAS,CAACC,IAAnB;cAAA;cAAA;cAAA;YAAA;UADJ,GAAUD,SAAS,CAACE,EAApB;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA,gBADJ;MAHR;QAAA;QAAA;QAAA;MAAA;IADJ,iBADJ;EAqCH;;AA1CoC;;AA6CzChB,UAAU,CAACwB,WAAX,GAAyBzB,UAAzB;AAEA,eAAeC,UAAf"},"metadata":{},"sourceType":"module"}