{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\items.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { Layout, QueryResult } from '../components';\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TRACKS = gql`\n    query GetTracks {\n        tracksForHome {\n            id\n            title\n            thumbnail\n            length\n            modulesCount\n            author {\n                name\n                photo\n            }\n        }\n    }\n`;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n\nconst Tracks = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TRACKS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    grid: true,\n    children: JSON.stringify(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useQuery","gql","TrackCard","Layout","QueryResult","TRACKS","Tracks","loading","error","data","message","JSON","stringify"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/items.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport TrackCard from '../containers/track-card';\r\nimport { Layout, QueryResult } from '../components';\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\nconst TRACKS = gql`\r\n    query GetTracks {\r\n        tracksForHome {\r\n            id\r\n            title\r\n            thumbnail\r\n            length\r\n            modulesCount\r\n            author {\r\n                name\r\n                photo\r\n            }\r\n        }\r\n    }\r\n`;\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\nconst Tracks = () => {\r\n    const { loading, error, data } = useQuery(TRACKS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    return (\r\n        <Layout grid>\r\n            {JSON.stringify(data)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,eAApC;AAEA;;AACA;;;AACA,MAAMC,MAAM,GAAGJ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAeA;AACA;AACA;AACA;;AACA,MAAMK,MAAM,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BT,QAAQ,CAACK,MAAD,CAAzC;EACA,IAAIE,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;EAEX,oBACI,QAAC,MAAD;IAAQ,IAAI,MAAZ;IAAA,UACKC,IAAI,CAACC,SAAL,CAAeH,IAAf;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAVD;;GAAMH,M;UAC+BN,Q;;;KAD/BM,M;AAYN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}