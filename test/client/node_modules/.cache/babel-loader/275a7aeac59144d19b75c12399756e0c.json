{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\test\\\\client\\\\src\\\\components\\\\Attributes.jsx\";\nimport React from \"react\";\nimport styles from \"./Attributes.module.css\";\nimport Attribute from \"./Attribute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Attributes extends React.Component {\n  constructor(props) {\n    super(props); // this.state={\n    //     attributes: this.props.attributes\n    // }\n  } // componentDidUpdate(prevProps, prevState) {\n  //     if(prevProps.attributes !== this.state.attributes)\n  //         console.log(\"changed attributes\")\n  //         this.setState({\n  //             attributes: this.props.attributes\n  //         })\n  // }\n  // componentDidUpdate(prevState, prevProps) {\n  //     if (prevProps.attributes !== this.props.attributes) {\n  //         console.log(prevProps.attributes)\n  //         console.log(this.props.attributes)\n  //         // console.log(this.state.product)\n  //         // console.log(this.state.attributes[0].items[0])\n  //         console.log('changed')\n  //         // this.renderPDP();\n  //         this.setState({\n  //            attributes: this.props.attributes,\n  //         })\n  //         // this.renderPDP()\n  //     }\n  // }\n\n\n  render() {\n    const {\n      attributeName,\n      attributeSize,\n      attributeColor,\n      attributes,\n      onSelectAttribute,\n      activeAttributeItem,\n      activeAttribute,\n      cartItem\n    } = this.props;\n    console.log(cartItem);\n    return (\n      /*#__PURE__*/\n      // <>\n      _jsxDEV(\"ul\", {\n        className: styles.ul,\n        children: attributes && attributes.map((attribute, id) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: attributeName,\n            children: attribute.name\n          }, `${id}_${attribute.name}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Attribute // key={`${attribute.id}_${attribute.type}`}\n          // key={id.toString()}\n          , {\n            cartItem: cartItem // id={cartItem.id}\n            ,\n            activeAttributeItem: activeAttributeItem,\n            activeAttribute: activeAttribute,\n            onSelectAttribute: onSelectAttribute,\n            attribute: attribute,\n            attributeColor: attributeColor,\n            attributeSize: attributeSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this) // </>\n\n    );\n  }\n\n}\n\nexport default Attributes;","map":{"version":3,"names":["React","styles","Attribute","Attributes","Component","constructor","props","render","attributeName","attributeSize","attributeColor","attributes","onSelectAttribute","activeAttributeItem","activeAttribute","cartItem","console","log","ul","map","attribute","id","name"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/test/client/src/components/Attributes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Attributes.module.css\"\r\nimport Attribute from \"./Attribute\"\r\n\r\nclass Attributes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state={\r\n        //     attributes: this.props.attributes\r\n        // }\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if(prevProps.attributes !== this.state.attributes)\r\n    //         console.log(\"changed attributes\")\r\n    //         this.setState({\r\n    //             attributes: this.props.attributes\r\n    //         })\r\n    // }\r\n\r\n    // componentDidUpdate(prevState, prevProps) {\r\n    //     if (prevProps.attributes !== this.props.attributes) {\r\n    //         console.log(prevProps.attributes)\r\n    //         console.log(this.props.attributes)\r\n    //         // console.log(this.state.product)\r\n    //         // console.log(this.state.attributes[0].items[0])\r\n    //         console.log('changed')\r\n    //         // this.renderPDP();\r\n    //         this.setState({\r\n    //            attributes: this.props.attributes,\r\n    //         })\r\n    //         // this.renderPDP()\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const {\r\n            attributeName,\r\n            attributeSize,\r\n            attributeColor,\r\n            attributes,\r\n            onSelectAttribute,\r\n            activeAttributeItem,\r\n            activeAttribute,\r\n            cartItem\r\n        } = this.props\r\n\r\n        console.log(cartItem)\r\n\r\n        return (\r\n            // <>\r\n                <ul className={styles.ul}>\r\n                    {\r\n                        attributes &&\r\n                        attributes.map((attribute, id) => (\r\n                            <>\r\n                                <li className={attributeName} key={`${id}_${attribute.name}`}  >\r\n                                    {attribute.name}</li>\r\n                                {/*<li key={`${attribute.id}_${id}`}>*/}\r\n                                {/*<li key={attribute.toString()}>*/}\r\n                                    <Attribute\r\n                                        // key={`${attribute.id}_${attribute.type}`}\r\n                                        // key={id.toString()}\r\n                                        cartItem={cartItem}\r\n                                        // id={cartItem.id}\r\n                                        activeAttributeItem={activeAttributeItem}\r\n                                        activeAttribute={activeAttribute}\r\n                                        onSelectAttribute={onSelectAttribute}\r\n                                        attribute={attribute}\r\n                                        attributeColor={attributeColor}\r\n                                        attributeSize={attributeSize}\r\n                                    />\r\n                                {/*</li>*/}\r\n                            </>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            // </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attributes;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACrCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN,EADe,CAEf;IACA;IACA;EACH,CANoC,CAQrC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,MAAM,GAAG;IACL,MAAM;MACFC,aADE;MAEFC,aAFE;MAGFC,cAHE;MAIFC,UAJE;MAKFC,iBALE;MAMFC,mBANE;MAOFC,eAPE;MAQFC;IARE,IASF,KAAKT,KATT;IAWAU,OAAO,CAACC,GAAR,CAAYF,QAAZ;IAEA;MAAA;MACI;MACI;QAAI,SAAS,EAAEd,MAAM,CAACiB,EAAtB;QAAA,UAEQP,UAAU,IACVA,UAAU,CAACQ,GAAX,CAAe,CAACC,SAAD,EAAYC,EAAZ,kBACX;UAAA,wBACI;YAAI,SAAS,EAAEb,aAAf;YAAA,UACKY,SAAS,CAACE;UADf,GAAoC,GAAED,EAAG,IAAGD,SAAS,CAACE,IAAK,EAA3D;YAAA;YAAA;YAAA;UAAA,QADJ,eAKQ,QAAC,SAAD,CACI;UACA;UAFJ;YAGI,QAAQ,EAAEP,QAHd,CAII;YAJJ;YAKI,mBAAmB,EAAEF,mBALzB;YAMI,eAAe,EAAEC,eANrB;YAOI,iBAAiB,EAAEF,iBAPvB;YAQI,SAAS,EAAEQ,SARf;YASI,cAAc,EAAEV,cATpB;YAUI,aAAa,EAAED;UAVnB;YAAA;YAAA;YAAA;UAAA,QALR;QAAA,gBADJ;MAHR;QAAA;QAAA;QAAA;MAAA,QAFR,CA4BI;;IA5BJ;EA8BH;;AA3EoC;;AA8EzC,eAAeN,UAAf"},"metadata":{},"sourceType":"module"}