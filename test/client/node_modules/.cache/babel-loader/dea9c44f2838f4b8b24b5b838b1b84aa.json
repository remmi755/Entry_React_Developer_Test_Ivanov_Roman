{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Category, Header } from \"./components\";\nimport Cart from \"./components/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        }); // const press = result.data.categories[0].products[0].prices[1].amount\n\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories,\n          categories: 0 // press: press\n\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    this.clickOnButton = () => {\n      alert(123);\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeItem: index // categories: index\n        // categories: this.state.categories[index].products\n        // productCards: this.state.productCards[index]\n\n      });\n    };\n\n    this.state = {\n      productCards: [this.renderCards],\n      activeItem: 0,\n      categories: [this.renderCards] // press: [this.renderCards],\n      // // prices: [this.renderPrices]\n      // prices: this.renderPrices\n\n    };\n  }\n\n  // renderPrices = async () => {\n  //     try {\n  //         const result = await apolloClient\n  //         .query({\n  //             query: gql`\n  //                 query Product {\n  //                     category {\n  //                         name\n  //                         products {\n  //                             id\n  //                             name\n  //                             prices {\n  //                                 amount\n  //                                 currency {\n  //                                     label\n  //                                     symbol\n  //                                 }\n  //                             }\n  //                         }\n  //                     }\n  //                 }\n  //             `\n  //         });\n  //\n  //         const prices = result.data.category.products[0].prices[0].amount;\n  //\n  //         this.setState({\n  //             prices: prices\n  //\n  //         });\n  //\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  //     ;\n  // }\n  componentDidMount() {\n    this.renderCards(); // this.renderPrices()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.productCards !== this.state.productCards) {\n      console.log(this.state); // this.setState({\n      //     productCards: this.categories[2]\n      // });\n      // this.renderCards2()\n      // this.onSelectCategories()\n    }\n  }\n\n  render() {\n    console.log(this.state.productCards[0].products);\n    console.log(this.state.productCards);\n    console.log(this.state.categories); // console.log(this.state.prices)\n    // console.log(this.state.press)\n    // console.log(this.state.activeItem)\n    // console.log(this.state.categories[0].products)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My first Apollo app \\uD83D\\uDE80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        onClick: this.onSelectCategories,\n        productCards: this.state.productCards,\n        categories: this.state.categories,\n        activeItem: this.state.activeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Category, {\n            productCards: this.state.productCards,\n            activeItem: this.state.activeItem,\n            categories: this.state.categories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            onClick: this.clickOnButton,\n            productCards: this.state.productCards,\n            activeItem: this.state.activeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","apolloClient","gql","App","Component","constructor","props","renderCards","result","query","categories","data","setState","productCards","err","console","log","clickOnButton","alert","onSelectCategories","index","activeItem","state","componentDidMount","componentDidUpdate","prevProps","prevState","render","products"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Category, Header} from \"./components\"\nimport Cart from \"./components/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productCards: [this.renderCards],\n            activeItem: 0,\n            categories: [this.renderCards]\n            // press: [this.renderCards],\n            // // prices: [this.renderPrices]\n            // prices: this.renderPrices\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            // const press = result.data.categories[0].products[0].prices[1].amount\n            const categories = result.data.categories;\n\n            this.setState({\n                productCards: categories,\n                categories: 0\n                // press: press\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n        ;\n    }\n\n    // renderPrices = async () => {\n    //     try {\n    //         const result = await apolloClient\n    //         .query({\n    //             query: gql`\n    //                 query Product {\n    //                     category {\n    //                         name\n    //                         products {\n    //                             id\n    //                             name\n    //                             prices {\n    //                                 amount\n    //                                 currency {\n    //                                     label\n    //                                     symbol\n    //                                 }\n    //                             }\n    //                         }\n    //                     }\n    //                 }\n    //             `\n    //         });\n    //\n    //         const prices = result.data.category.products[0].prices[0].amount;\n    //\n    //         this.setState({\n    //             prices: prices\n    //\n    //         });\n    //\n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    //     ;\n    // }\n\n    componentDidMount() {\n        this.renderCards();\n        // this.renderPrices()\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.productCards !== this.state.productCards) {\n            console.log(this.state)\n            // this.setState({\n            //     productCards: this.categories[2]\n            // });\n            // this.renderCards2()\n            // this.onSelectCategories()\n        }\n    }\n\n    clickOnButton = () => {\n        alert(123)\n    }\n\n    onSelectCategories = index => {\n        this.setState({\n            activeItem: index,\n            // categories: index\n            // categories: this.state.categories[index].products\n            // productCards: this.state.productCards[index]\n        })\n    }\n\n    render() {\n        console.log(this.state.productCards[0].products)\n        console.log(this.state.productCards)\n        console.log(this.state.categories)\n        // console.log(this.state.prices)\n        // console.log(this.state.press)\n        // console.log(this.state.activeItem)\n        // console.log(this.state.categories[0].products)\n        return (\n            <div>\n                <h2>My first Apollo app 🚀</h2>\n                <Header onClick={this.onSelectCategories}\n                        productCards={this.state.productCards}\n                        categories={this.state.categories}\n                        activeItem={this.state.activeItem}\n                />\n                <Routes>\n                    <Route path=\"/\" element={<Category\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}\n                        categories={this.state.categories}/>}\n                    />\n                    <Route path=\"cart\" element={<Cart\n                        onClick={this.clickOnButton}\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}/>}\n                    />\n                </Routes>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,cAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,YAAR,QAA2B,SAA3B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;EAC9BC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAYnBC,WAZmB,GAYL,YAAY;MACtB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMP,YAAY,CAChCQ,KADoB,CACd;UACHA,KAAK,EAAEP,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAhCmB,CADc,CAArB,CADA,CAoCA;;QACA,MAAMQ,UAAU,GAAGF,MAAM,CAACG,IAAP,CAAYD,UAA/B;QAEA,KAAKE,QAAL,CAAc;UACVC,YAAY,EAAEH,UADJ;UAEVA,UAAU,EAAE,CAFF,CAGV;;QAHU,CAAd;MAMH,CA7CD,CA6CE,OAAOI,GAAP,EAAY;QACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH;;MACD;IACH,CA9DkB;;IAAA,KAsHnBG,aAtHmB,GAsHH,MAAM;MAClBC,KAAK,CAAC,GAAD,CAAL;IACH,CAxHkB;;IAAA,KA0HnBC,kBA1HmB,GA0HEC,KAAK,IAAI;MAC1B,KAAKR,QAAL,CAAc;QACVS,UAAU,EAAED,KADF,CAEV;QACA;QACA;;MAJU,CAAd;IAMH,CAjIkB;;IAEf,KAAKE,KAAL,GAAa;MACTT,YAAY,EAAE,CAAC,KAAKN,WAAN,CADL;MAETc,UAAU,EAAE,CAFH;MAGTX,UAAU,EAAE,CAAC,KAAKH,WAAN,CAHH,CAIT;MACA;MACA;;IANS,CAAb;EAQH;;EAsDD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAgB,iBAAiB,GAAG;IAChB,KAAKhB,WAAL,GADgB,CAEhB;EACH;;EAGDiB,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;IACrC,IAAIA,SAAS,CAACb,YAAV,KAA2B,KAAKS,KAAL,CAAWT,YAA1C,EAAwD;MACpDE,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAjB,EADoD,CAEpD;MACA;MACA;MACA;MACA;IACH;EACJ;;EAeDK,MAAM,GAAG;IACLZ,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWT,YAAX,CAAwB,CAAxB,EAA2Be,QAAvC;IACAb,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWT,YAAvB;IACAE,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWZ,UAAvB,EAHK,CAIL;IACA;IACA;IACA;;IACA,oBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,OAAO,EAAE,KAAKS,kBAAtB;QACQ,YAAY,EAAE,KAAKG,KAAL,CAAWT,YADjC;QAEQ,UAAU,EAAE,KAAKS,KAAL,CAAWZ,UAF/B;QAGQ,UAAU,EAAE,KAAKY,KAAL,CAAWD;MAH/B;QAAA;QAAA;QAAA;MAAA,QAFJ,eAOI,QAAC,MAAD;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,QAAD;YACrB,YAAY,EAAE,KAAKC,KAAL,CAAWT,YADJ;YAErB,UAAU,EAAE,KAAKS,KAAL,CAAWD,UAFF;YAGrB,UAAU,EAAE,KAAKC,KAAL,CAAWZ;UAHF;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI,QAAC,KAAD;UAAO,IAAI,EAAC,MAAZ;UAAmB,OAAO,eAAE,QAAC,IAAD;YACxB,OAAO,EAAE,KAAKO,aADU;YAExB,YAAY,EAAE,KAAKK,KAAL,CAAWT,YAFD;YAGxB,UAAU,EAAE,KAAKS,KAAL,CAAWD;UAHC;YAAA;YAAA;YAAA;UAAA;QAA5B;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAsBH;;AAlK6B;;AAqKlC,eAAelB,GAAf"},"metadata":{},"sourceType":"module"}