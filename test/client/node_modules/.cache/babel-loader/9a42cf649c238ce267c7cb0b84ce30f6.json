{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        const currenciesList = result.data.categories[this.state.activeItem].products[0].prices;\n        this.setState({\n          productCards: categories,\n          currencies: currenciesList\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getCartFromLS = () => {\n      const data = localStorage.getItem('cart');\n      return data ? JSON.parse(data) : [];\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeItem: index\n      });\n    };\n\n    this.onSelectCurrencies = index => {\n      const {\n        currencies\n      } = this.state;\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onSelectAttribute = (attribute, index) => {\n      this.setState({\n        activeAttributeIndex: index,\n        activeAttribute: attribute\n      }); // console.log(attribute)\n      // console.log(id)\n      // console.log(el)\n\n      console.log(index); // console.log(attribute.items[index])\n      // this.setState({\n      //     activeAttributeItem: attribute.items[index],\n      //     activeAttribute: attribute,\n      //     activeAttributeIndex: index\n      // })\n      // if(attribute.id === id && attribute.items[index] === el) {\n      //     this.setState({\n      //         activeAttributeItem: attribute.items[index],\n      //         activeAttribute: attribute\n      //     })\n      // }\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        activeAttribute,\n        activeAttributeItem,\n        activeAttributeIndex\n      } = this.state;\n      let newProduct;\n      console.log(activeAttribute);\n      console.log(activeAttributeItem);\n\n      if (product.inStock && !product.isInCart) {\n        newProduct = {\n          // attribute: activeAttribute,\n          attributes: product.attributes,\n          activeAttribute: activeAttribute,\n          activeAttributeItem: activeAttributeItem,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1,\n          isInCart: false\n        };\n      } else if (product.isInCart) {\n        newProduct = { ...newProduct\n        };\n      } // console.log(newProduct.activeAttribute.items[activeAttributeIndex])\n\n\n      cartList.forEach(el => {\n        // if (el.id === newProduct.id ) {\n        if (el.id === newProduct.id && el.activeAttributeItem === newProduct.activeAttributeItem) {\n          newProduct.isInCart = true;\n          this.setState({\n            count: ++el.count\n          });\n        }\n      });\n\n      if (newProduct.isInCart && newProduct.inStock) {\n        this.setState({\n          count: ++this.state.count\n        });\n        let newProductChanged = { ...newProduct,\n          count: this.state.count\n        };\n        cartList.forEach(el => {\n          if (el.id === newProduct.id) {\n            newProduct = newProductChanged;\n          }\n        });\n        localStorage.setItem('cart', JSON.stringify(cartList));\n      } else if (!newProduct.isInCart && newProduct.inStock) {\n        newProduct.isInCart = true;\n        localStorage.setItem('cart', JSON.stringify([...cartList, newProduct]));\n        this.setState({\n          cartList: JSON.parse(localStorage.getItem('cart'))\n        });\n      }\n    };\n\n    this.deleteCartItem = id => {\n      const {\n        cartList\n      } = this.state;\n      const index = cartList.findIndex(x => x.id === id);\n      cartList.splice(index, 1);\n      localStorage.setItem('cart', JSON.stringify(cartList));\n    };\n\n    this.countIncrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: ++this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify(cartList));\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id)\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: --this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify(cartList));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      isInCart: false,\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderCards],\n      activeItem: 0,\n      products: [this.renderCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: '$',\n      cartList: this.getCartFromLS(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: '',\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count) {// console.log('Ok')\n    }\n  }\n\n  render() {\n    let totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    let totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n    console.log(this.state.cartList); // console.log(this.state.activeAttribute)\n\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeItem,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex\n    } = this.state;\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this; // console.log(activeAttribute)\n    // console.log(activeAttributeItem)\n\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        modalShow,\n        totalPrice,\n        productCards,\n        activeCurrency,\n        currencies,\n        openPopup,\n        activeAttributeIndex,\n        cartList,\n        count,\n        activeItem,\n        selectedCurrency,\n        total,\n        activeAttributeItem,\n        activeAttribute,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        getCartFromLS,\n        onSelectCategories,\n        onOpenPopup,\n        onSelectCurrencies,\n        toggleModal,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: this.onOpenPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              activeCurrency: this.state.activeCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","apolloClient","gql","PDP","AppContext","Modal","CartOverlay","App","Component","constructor","props","renderCards","result","query","categories","data","currenciesList","state","activeItem","products","prices","setState","productCards","currencies","err","console","log","getCartFromLS","localStorage","getItem","JSON","parse","onSelectCategories","index","onSelectCurrencies","activeCurrency","selectedCurrency","currency","symbol","openPopup","onOpenPopup","onSelectAttribute","attribute","activeAttributeIndex","activeAttribute","onAddToCart","product","cartList","activeAttributeItem","newProduct","inStock","isInCart","attributes","brand","gallery","id","name","count","forEach","el","newProductChanged","setItem","stringify","deleteCartItem","findIndex","x","splice","countIncrease","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","total","totalPrice","totalCount","componentDidMount","componentDidUpdate","prevProps","prevState","render","reduce","prev","curr","amount","toFixed"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes} from \"react-router-dom\";\nimport Category from \"./pages/Category\"\nimport Header from \"./pages/Header\"\nimport Cart from \"./pages/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport {AppContext} from \"./components/AppContext\"\nimport Modal from \"./components/Modal\"\nimport CartOverlay from \"./components/CartOverlay\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInCart: false,\n            modalShow: false,\n            count: 1,\n            productCards: [this.renderCards],\n            activeItem: 0,\n            products: [this.renderCards],\n            openPopup: false,\n            activeCurrency: 0,\n            selectedCurrency: '$',\n            cartList: this.getCartFromLS(),\n            activeAttributeItem: 0,\n            activeAttributeIndex: 0,\n            activeAttribute: '',\n            total: {\n                totalPrice: 0,\n                totalCount: 0\n            }\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            const categories = result.data.categories;\n            const currenciesList = result.data.categories[this.state.activeItem].products[0].prices\n\n            this.setState({\n                productCards: categories,\n                currencies: currenciesList\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentDidMount() {\n        this.renderCards();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.count !== this.state.count) {\n            // console.log('Ok')\n        }\n    }\n\n    getCartFromLS = () => {\n        const data = localStorage.getItem('cart')\n        return data ? JSON.parse(data) : [];\n    }\n\n    onSelectCategories = index => {\n        this.setState({\n            activeItem: index,\n        })\n    }\n\n    onSelectCurrencies = (index) => {\n        const {currencies} = this.state\n        this.setState({\n            activeCurrency: index,\n            selectedCurrency: currencies[index].currency.symbol,\n            openPopup: false,\n        })\n    }\n\n    onOpenPopup = () => {\n        this.setState({openPopup: !this.state.openPopup})\n    }\n\n    // onSelectAttribute = ( attribute, id, el, index) => {\n    onSelectAttribute = (attribute, index) => {\n        this.setState({\n            activeAttributeIndex: index,\n            activeAttribute: attribute,\n        })\n        // console.log(attribute)\n        // console.log(id)\n        // console.log(el)\n        console.log(index)\n        // console.log(attribute.items[index])\n\n// this.setState({\n//     activeAttributeItem: attribute.items[index],\n//     activeAttribute: attribute,\n//     activeAttributeIndex: index\n// })\n\n        // if(attribute.id === id && attribute.items[index] === el) {\n        //     this.setState({\n        //         activeAttributeItem: attribute.items[index],\n        //         activeAttribute: attribute\n        //     })\n        // }\n    }\n\n    onAddToCart = (product) => {\n        const {cartList, activeAttribute, activeAttributeItem, activeAttributeIndex} = this.state;\n\n        let newProduct;\n\n        console.log(activeAttribute)\n        console.log(activeAttributeItem)\n\n        if (product.inStock && !product.isInCart) {\n            newProduct = {\n                // attribute: activeAttribute,\n                attributes: product.attributes,\n                activeAttribute: activeAttribute,\n                activeAttributeItem: activeAttributeItem,\n                brand: product.brand,\n                prices: product.prices,\n                gallery: product.gallery,\n                id: product.id,\n                inStock: product.inStock,\n                name: product.name,\n                count: 1,\n                isInCart: false\n            }\n        } else if(product.isInCart) {\n            newProduct = {...newProduct}\n        }\n\n        // console.log(newProduct.activeAttribute.items[activeAttributeIndex])\n\n        cartList.forEach((el) => {\n            // if (el.id === newProduct.id ) {\n            if (el.id === newProduct.id && el.activeAttributeItem === newProduct.activeAttributeItem) {\n                newProduct.isInCart = true\n                this.setState({\n                    count: ++el.count,\n                })\n            }\n        })\n\n        if (newProduct.isInCart && newProduct.inStock) {\n            this.setState({\n                count: ++this.state.count,\n            })\n\n            let newProductChanged = {...newProduct, count: this.state.count}\n\n            cartList.forEach((el) => {\n                if (el.id === newProduct.id) {\n                    newProduct = newProductChanged\n                }\n            })\n\n            localStorage.setItem('cart', JSON.stringify(cartList))\n        } else if (!newProduct.isInCart && newProduct.inStock) {\n            newProduct.isInCart = true\n            localStorage.setItem('cart', JSON.stringify([...cartList, newProduct]))\n            this.setState({\n                cartList: JSON.parse(localStorage.getItem('cart')),\n            })\n        }\n    }\n\n    deleteCartItem = (id) => {\n        const {cartList} = this.state\n        const index = cartList.findIndex(x => x.id === id);\n        cartList.splice(index,1)\n        localStorage.setItem('cart',JSON.stringify(cartList))\n    }\n\n    countIncrease = (product, id) => {\n        const {cartList} = this.state\n\n        if (product.id === id) {\n            this.setState({\n                count: ++product.count,\n            })\n        }\n\n        let newProductChanged = {...product, count: ++this.state.count}\n\n        cartList.forEach((el) => {\n            if (el.id === product.id) {\n                product = newProductChanged\n            }\n        })\n        localStorage.setItem('cart', JSON.stringify(cartList))\n    }\n\n    countDecrease = (product, id) => {\n        const {cartList} = this.state\n\n        if (product.id === id) {\n            this.setState({\n                count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id),\n            })\n        }\n\n        let newProductChanged = {...product, count: --this.state.count}\n\n        cartList.forEach((el) => {\n            if (el.id === product.id) {\n                product = newProductChanged\n            }\n        })\n        localStorage.setItem('cart', JSON.stringify(cartList))\n    }\n\n    toggleModal = () => {\n        this.setState({\n            modalShow: !this.state.modalShow\n        })\n    }\n\n    onHidePopup = () => {\n        document.body.style.overflow = \"\";\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    render() {\n        let totalPrice = (this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        }, 0)).toFixed(2)\n\n        let totalCount = this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.count\n        }, 0)\n\n        console.log(this.state.cartList)\n        // console.log(this.state.activeAttribute)\n\n        const {\n            productCards,\n            activeCurrency,\n            cartList,\n            count,\n            currencies,\n            activeItem,\n            selectedCurrency,\n            total,\n            openPopup,\n            modalShow,\n            activeAttributeItem,\n            activeAttribute,\n            activeAttributeIndex\n        } = this.state\n        const {deleteCartItem, countIncrease, countDecrease, onHidePopup, onSelectAttribute, getCartFromLS,\n            onSelectCategories, onOpenPopup, onSelectCurrencies, toggleModal, onAddToCart} = this;\n\n        // console.log(activeAttribute)\n        // console.log(activeAttributeItem)\n\n        return (\n            <AppContext.Provider\n                value={{\n                    totalCount, modalShow,\n                    totalPrice, productCards, activeCurrency, currencies, openPopup, activeAttributeIndex,\n                    cartList, count, activeItem, selectedCurrency, total, activeAttributeItem,  activeAttribute,\n                    deleteCartItem, countIncrease, countDecrease, onHidePopup, onSelectAttribute, getCartFromLS,\n                    onSelectCategories, onOpenPopup, onSelectCurrencies, toggleModal, onAddToCart\n                }}\n            >\n                <div>\n                    <Header onOpenPopup={this.onOpenPopup}/>\n                    <Routes>\n                        <Route path=\"/\" element={<Category/>}/>\n                        <Route path=\"/cart\" element={<Cart\n                            activeCurrency={this.state.activeCurrency}\n                            cartList={this.state.cartList}\n                        />}\n                        />\n                        <Route path=\"/:cardId\" element={<PDP\n                            activeCurrency={this.state.activeCurrency}\n                        />}\n                        />\n                    </Routes>\n                    <Modal\n                        className={modalShow ? document.body.style.overflow = \"hidden\" :\n                            document.body.style.overflow = \"\"}\n                        close={toggleModal}\n                        shown={modalShow}\n                    >\n                        <CartOverlay/>\n                    </Modal>\n                </div>\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}