{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\test\\\\client\\\\src\\\\components\\\\Attributes.jsx\";\nimport React from \"react\";\nimport styles from \"./Attributes.module.css\";\nimport Attribute from \"./Attribute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Attributes extends React.Component {\n  constructor(props) {\n    super(props); // this.state={\n    //     attributes: this.props.attributes\n    // }\n  } // componentDidUpdate(prevProps, prevState) {\n  //     if(prevProps.cartItem !== this.props.cartItem)\n  //         console.log(\"changed attributes\")\n  // this.setState({\n  //     attributes: this.props.attributes\n  // })\n  // }\n  // componentDidUpdate(prevState, prevProps) {\n  //     if (prevProps.attributes !== this.props.attributes) {\n  //         console.log(prevProps.attributes)\n  //         console.log(this.props.attributes)\n  //         // console.log(this.state.product)\n  //         // console.log(this.state.attributes[0].items[0])\n  //         console.log('changed')\n  //         // this.renderPDP();\n  //         this.setState({\n  //            attributes: this.props.attributes,\n  //         })\n  //         // this.renderPDP()\n  //     }\n  // }\n\n\n  render() {\n    const {\n      attributeName,\n      attributeSize,\n      attributeColor,\n      attributes,\n      onSelectAttribute,\n      activeAttributeItem,\n      activeAttribute,\n      cartItem\n    } = this.props;\n    console.log(cartItem); // const attributeItem =  attributes && attributes.map( function (attribute, id)  {\n    //         return (\n    //             <li key={id.toString()}>\n    //                 <p className={attributeName}>{attribute.name}</p>\n    //                 <Attribute\n    //                     cartItem={cartItem}\n    //                     onSelectAttribute={onSelectAttribute}\n    //                     attribute={attribute}\n    //                     attributeColor={attributeColor}\n    //                     attributeSize={attributeSize}\n    //                 />\n    //             </li>\n    //         )\n    // })\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.ul,\n      children: attributes && attributes.map((attribute, id) =>\n      /*#__PURE__*/\n      // <>\n      _jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: attributeName,\n          children: attribute.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Attribute, {\n          cartItem: cartItem,\n          onSelectAttribute: onSelectAttribute,\n          attribute: attribute,\n          attributeColor: attributeColor,\n          attributeSize: attributeSize\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)]\n      }, attribute.items, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this) // </>\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Attributes;\n{\n  /*<li className={attributeName} key={`${id}_${attribute.name}`}>*/\n}\n{\n  /*    {attribute.name}*/\n}\n{\n  /*</li>*/\n}\n{\n  /*<li key={attribute.toString()}>*/\n}\n{\n  /*    <Attribute*/\n}\n{\n  /*        cartItem={cartItem}*/\n}\n{\n  /*        onSelectAttribute={onSelectAttribute}*/\n}\n{\n  /*        attribute={attribute}*/\n}\n{\n  /*        attributeColor={attributeColor}*/\n}\n{\n  /*        attributeSize={attributeSize}*/\n}\n{\n  /*    />*/\n}\n{\n  /*</li>*/\n}","map":{"version":3,"names":["React","styles","Attribute","Attributes","Component","constructor","props","render","attributeName","attributeSize","attributeColor","attributes","onSelectAttribute","activeAttributeItem","activeAttribute","cartItem","console","log","ul","map","attribute","id","name","items"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/test/client/src/components/Attributes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Attributes.module.css\"\r\nimport Attribute from \"./Attribute\"\r\n\r\nclass Attributes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.state={\r\n        //     attributes: this.props.attributes\r\n        // }\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if(prevProps.cartItem !== this.props.cartItem)\r\n    //         console.log(\"changed attributes\")\r\n            // this.setState({\r\n            //     attributes: this.props.attributes\r\n            // })\r\n    // }\r\n\r\n    // componentDidUpdate(prevState, prevProps) {\r\n    //     if (prevProps.attributes !== this.props.attributes) {\r\n    //         console.log(prevProps.attributes)\r\n    //         console.log(this.props.attributes)\r\n    //         // console.log(this.state.product)\r\n    //         // console.log(this.state.attributes[0].items[0])\r\n    //         console.log('changed')\r\n    //         // this.renderPDP();\r\n    //         this.setState({\r\n    //            attributes: this.props.attributes,\r\n    //         })\r\n    //         // this.renderPDP()\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const {\r\n            attributeName,\r\n            attributeSize,\r\n            attributeColor,\r\n            attributes,\r\n            onSelectAttribute,\r\n            activeAttributeItem,\r\n            activeAttribute,\r\n            cartItem\r\n        } = this.props\r\n\r\n        console.log(cartItem)\r\n\r\n        // const attributeItem =  attributes && attributes.map( function (attribute, id)  {\r\n        //         return (\r\n        //             <li key={id.toString()}>\r\n        //                 <p className={attributeName}>{attribute.name}</p>\r\n        //                 <Attribute\r\n        //                     cartItem={cartItem}\r\n        //                     onSelectAttribute={onSelectAttribute}\r\n        //                     attribute={attribute}\r\n        //                     attributeColor={attributeColor}\r\n        //                     attributeSize={attributeSize}\r\n        //                 />\r\n        //             </li>\r\n        //         )\r\n        // })\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <ul className={styles.ul}>\r\n                {\r\n                    attributes &&\r\n                    attributes.map((attribute, id) => (\r\n                        // <>\r\n                            <li key={attribute.items}>\r\n                                <p className={attributeName}>{attribute.name}</p>\r\n                                <Attribute key={id}\r\n                                    cartItem={cartItem}\r\n                                    onSelectAttribute={onSelectAttribute}\r\n                                    attribute={attribute}\r\n                                    attributeColor={attributeColor}\r\n                                    attributeSize={attributeSize}\r\n                                />\r\n                            </li>\r\n                        // </>\r\n                    ))\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attributes;\r\n\r\n\r\n{/*<li className={attributeName} key={`${id}_${attribute.name}`}>*/}\r\n{/*    {attribute.name}*/}\r\n{/*</li>*/}\r\n{/*<li key={attribute.toString()}>*/}\r\n{/*    <Attribute*/}\r\n{/*        cartItem={cartItem}*/}\r\n{/*        onSelectAttribute={onSelectAttribute}*/}\r\n{/*        attribute={attribute}*/}\r\n{/*        attributeColor={attributeColor}*/}\r\n{/*        attributeSize={attributeSize}*/}\r\n{/*    />*/}\r\n{/*</li>*/}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;EACrCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN,EADe,CAEf;IACA;IACA;EACH,CANoC,CAQrC;EACA;EACA;EACQ;EACA;EACA;EACR;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,MAAM,GAAG;IACL,MAAM;MACFC,aADE;MAEFC,aAFE;MAGFC,cAHE;MAIFC,UAJE;MAKFC,iBALE;MAMFC,mBANE;MAOFC,eAPE;MAQFC;IARE,IASF,KAAKT,KATT;IAWAU,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAZK,CAcL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAMA,oBACI;MAAI,SAAS,EAAEd,MAAM,CAACiB,EAAtB;MAAA,UAEQP,UAAU,IACVA,UAAU,CAACQ,GAAX,CAAe,CAACC,SAAD,EAAYC,EAAZ;MAAA;MACX;MACI;QAAA,wBACI;UAAG,SAAS,EAAEb,aAAd;UAAA,UAA8BY,SAAS,CAACE;QAAxC;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,SAAD;UACI,QAAQ,EAAEP,QADd;UAEI,iBAAiB,EAAEH,iBAFvB;UAGI,SAAS,EAAEQ,SAHf;UAII,cAAc,EAAEV,cAJpB;UAKI,aAAa,EAAED;QALnB,GAAgBY,EAAhB;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,GAASD,SAAS,CAACG,KAAnB;QAAA;QAAA;QAAA;MAAA,QAFO,CAYX;MAZJ;IAHR;MAAA;MAAA;MAAA;IAAA,QADJ;EAqBH;;AArFoC;;AAwFzC,eAAepB,UAAf;AAGA;EAAC;AAAmE;AACpE;EAAC;AAAyB;AAC1B;EAAC;AAAU;AACX;EAAC;AAAoC;AACrC;EAAC;AAAmB;AACpB;EAAC;AAAgC;AACjC;EAAC;AAAkD;AACnD;EAAC;AAAkC;AACnC;EAAC;AAA4C;AAC7C;EAAC;AAA0C;AAC3C;EAAC;AAAW;AACZ;EAAC;AAAU"},"metadata":{},"sourceType":"module"}