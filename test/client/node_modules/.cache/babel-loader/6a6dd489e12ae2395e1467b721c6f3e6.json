{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Attribute.jsx\";\nimport React from \"react\";\nimport styles from \"./Attribute.module.css\";\nimport { AppContext } from \"./AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Attribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n  } // handleClick = (el, index) => {\n  //     const {attribute} = this.props\n  //\n  //     if (attribute.items[index] === el) {\n  //         this.setState({\n  //             activeAttribute: attribute.items[index]\n  //         })\n  //     }\n  // }\n\n\n  render() {\n    const {\n      onSelectAttribute,\n      activeAttribute,\n      activeAttributeInd\n    } = this.context;\n    const {\n      attribute,\n      attributeColor,\n      attributeSize,\n      index,\n      handleClick\n    } = this.props;\n    console.log(this.state.activeAttributeInd);\n    let name = attribute.name;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: attribute.items && attribute.items.map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onSelectAttribute(attribute, el, index) // onClick={(e) => onSelectAttribute(attribute, attribute.id, el, index, e)}\n        ,\n        className: `${styles.attribute} ${attribute.name === 'Color' ? attributeColor : attributeSize}\n                                           \n                                            ${activeAttribute === el ? `${name === \"Color\" ? styles.activeAttributeColor : styles.activeAttribute}` : ''}\n                                   \n                                         `,\n        style: {\n          backgroundColor: el.value\n        },\n        children: attribute.name === 'Color' ? '' : el.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nAttribute.contextType = AppContext;\nexport default Attribute;","map":{"version":3,"names":["React","styles","AppContext","Attribute","Component","constructor","props","state","value","render","onSelectAttribute","activeAttribute","activeAttributeInd","context","attribute","attributeColor","attributeSize","index","handleClick","console","log","name","items","map","el","activeAttributeColor","backgroundColor","contextType"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Attribute.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styles from \"./Attribute.module.css\"\r\nimport {AppContext} from \"./AppContext\"\r\n\r\nclass Attribute extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            value: null\r\n        }\r\n    }\r\n\r\n    // handleClick = (el, index) => {\r\n    //     const {attribute} = this.props\r\n    //\r\n    //     if (attribute.items[index] === el) {\r\n    //         this.setState({\r\n    //             activeAttribute: attribute.items[index]\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const {onSelectAttribute, activeAttribute, activeAttributeInd} = this.context\r\n        const {attribute, attributeColor, attributeSize,  index, handleClick} = this.props\r\n        console.log(this.state.activeAttributeInd)\r\n       let name = attribute.name\r\n        return (\r\n            <>\r\n                {\r\n                    attribute.items &&\r\n                    attribute.items.map((el, index) => (\r\n                        <li\r\n                            onClick={() => onSelectAttribute(attribute, el, index)}\r\n                            // onClick={(e) => onSelectAttribute(attribute, attribute.id, el, index, e)}\r\n                            className={`${styles.attribute} ${attribute.name === 'Color' ? attributeColor : attributeSize}\r\n                                           \r\n                                            ${activeAttribute === el ? `${name === \"Color\" ? styles.activeAttributeColor : styles.activeAttribute}` : ''}\r\n                                   \r\n                                         `}\r\n                            style={{backgroundColor: el.value}}\r\n                        >{attribute.name === 'Color' ? '' : el.value}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAttribute.contextType = AppContext;\r\n\r\nexport default Attribute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;EACpCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAW;MACPC,KAAK,EAAE;IADA,CAAX;EAGH,CANmC,CAQpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,MAAM,GAAG;IACL,MAAM;MAACC,iBAAD;MAAoBC,eAApB;MAAqCC;IAArC,IAA2D,KAAKC,OAAtE;IACA,MAAM;MAACC,SAAD;MAAYC,cAAZ;MAA4BC,aAA5B;MAA4CC,KAA5C;MAAmDC;IAAnD,IAAkE,KAAKZ,KAA7E;IACAa,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWK,kBAAvB;IACD,IAAIS,IAAI,GAAGP,SAAS,CAACO,IAArB;IACC,oBACI;MAAA,UAEQP,SAAS,CAACQ,KAAV,IACAR,SAAS,CAACQ,KAAV,CAAgBC,GAAhB,CAAoB,CAACC,EAAD,EAAKP,KAAL,kBAChB;QACI,OAAO,EAAE,MAAMP,iBAAiB,CAACI,SAAD,EAAYU,EAAZ,EAAgBP,KAAhB,CADpC,CAEI;QAFJ;QAGI,SAAS,EAAG,GAAEhB,MAAM,CAACa,SAAU,IAAGA,SAAS,CAACO,IAAV,KAAmB,OAAnB,GAA6BN,cAA7B,GAA8CC,aAAc;AAC1H;AACA,8CAA8CL,eAAe,KAAKa,EAApB,GAA0B,GAAEH,IAAI,KAAK,OAAT,GAAmBpB,MAAM,CAACwB,oBAA1B,GAAiDxB,MAAM,CAACU,eAAgB,EAApG,GAAwG,EAAG;AACzJ;AACA,0CAPwB;QAQI,KAAK,EAAE;UAACe,eAAe,EAAEF,EAAE,CAAChB;QAArB,CARX;QAAA,UASEM,SAAS,CAACO,IAAV,KAAmB,OAAnB,GAA6B,EAA7B,GAAkCG,EAAE,CAAChB;MATvC;QAAA;QAAA;QAAA;MAAA,QADJ;IAHR,iBADJ;EAoBH;;AA3CmC;;AA8CxCL,SAAS,CAACwB,WAAV,GAAwBzB,UAAxB;AAEA,eAAeC,SAAf"},"metadata":{},"sourceType":"module"}