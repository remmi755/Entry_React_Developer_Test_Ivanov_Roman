{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\items.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Header from \"../components/header\";\nimport Headers from \"../components/navigator\";\nimport ProductCard from \"../components/productCard\";\nimport PDP from \"../components/pdp\";\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n// const TRACKS = gql`\n//     query GetTracks {\n//         tracksForHome {\n//             id\n//             title\n//             thumbnail\n//             length\n//             modulesCount\n//             author {\n//                 name\n//                 photo\n//             }\n//         }\n//     }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THINGS = gql`\n    query GetCurrencies {\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\nconst PRODUCT = gql`\n   \n        query Categories($productId: String!) {\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n                id\n                name\n                type\n                items {\n                    displayValue\n                    value\n                    id\n                }\n            }\n            prices {\n                currency {\n                    symbol\n                    label\n                }\n            }\n            brand\n        }\n    }\n    \n    `;\nconst QUERYALL = gql`\n    query Categories($productId: String!) {\n        categories {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n                prices {\n                    currency {\n                        symbol\n                        label\n                    }\n                }\n                attributes {\n                    id\n                    name\n                    type\n                    items {\n                        displayValue\n                        value\n                        id\n                    }\n                }\n            }\n        }\n        category {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                    id\n                    name\n                    type\n                    items {\n                        displayValue\n                        value\n                        id\n                    }\n                }\n            }\n        }\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n                id\n                name\n                type\n                items {\n                    displayValue\n                    value\n                    id\n                }\n            }\n            prices {\n                currency {\n                    symbol\n                    label\n                }\n            }\n            brand\n        }\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\nconst PRICES = gql`\n    query GetPrices {\n        category {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                attributes {\n                    id\n                    name\n                    type\n                    items {\n                        displayValue\n                        value\n                        id\n                    }\n                }\n            }\n        }\n    }\n   \n`;\nconst QUERYALL2 = gql`\n    query Query($productId: String!) {\n        categories {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n            }\n        }\n        category {\n            name\n        }\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n                id\n                name\n                type\n                items {\n                    displayValue\n                    value\n                    id\n                }\n            }\n            prices {\n                currency {\n                    label\n                    symbol\n                }\n                amount\n            }\n            brand\n        }\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n// const productId = \"2\"\n\nconst productId = \"jacket-canada-goosee\";\n\nconst Tracks = () => {\n  _s();\n\n  // const { loading, error, data } = useQuery(THINGS);\n  // const { loading, error, data } = useQuery(PRICES);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERYALL2, {\n    variables: {\n      productId\n    }\n  }); // const { loading, error, data } = useQuery(QUERYALL, {variables: {productId}});\n  // const { loading, error, data } = useQuery(PRODUCT);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // return <div>{JSON.stringify(data)}</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PDP, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useQuery","gql","Header","Headers","ProductCard","PDP","THINGS","PRODUCT","QUERYALL","PRICES","QUERYALL2","productId","Tracks","loading","error","data","variables","message"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/items.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Header from \"../components/header\";\r\nimport Headers from \"../components/navigator\";\r\nimport ProductCard from \"../components/productCard\";\r\nimport PDP from \"../components/pdp\";\r\n\r\n\r\n\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\n// const TRACKS = gql`\r\n//     query GetTracks {\r\n//         tracksForHome {\r\n//             id\r\n//             title\r\n//             thumbnail\r\n//             length\r\n//             modulesCount\r\n//             author {\r\n//                 name\r\n//                 photo\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\nconst THINGS = gql`\r\n    query GetCurrencies {\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`\r\nconst PRODUCT = gql`\r\n   \r\n        query Categories($productId: String!) {\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    displayValue\r\n                    value\r\n                    id\r\n                }\r\n            }\r\n            prices {\r\n                currency {\r\n                    symbol\r\n                    label\r\n                }\r\n            }\r\n            brand\r\n        }\r\n    }\r\n    \r\n    `;\r\nconst QUERYALL = gql`\r\n    query Categories($productId: String!) {\r\n        categories {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                brand\r\n                prices {\r\n                    currency {\r\n                        symbol\r\n                        label\r\n                    }\r\n                }\r\n                attributes {\r\n                    id\r\n                    name\r\n                    type\r\n                    items {\r\n                        displayValue\r\n                        value\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        category {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                attributes {\r\n                    id\r\n                    name\r\n                    type\r\n                    items {\r\n                        displayValue\r\n                        value\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    displayValue\r\n                    value\r\n                    id\r\n                }\r\n            }\r\n            prices {\r\n                currency {\r\n                    symbol\r\n                    label\r\n                }\r\n            }\r\n            brand\r\n        }\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`;\r\n\r\nconst PRICES = gql`\r\n    query GetPrices {\r\n        category {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                attributes {\r\n                    id\r\n                    name\r\n                    type\r\n                    items {\r\n                        displayValue\r\n                        value\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n   \r\n`;\r\n\r\nconst QUERYALL2 = gql`\r\n    query Query($productId: String!) {\r\n        categories {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                brand\r\n            }\r\n        }\r\n        category {\r\n            name\r\n        }\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    displayValue\r\n                    value\r\n                    id\r\n                }\r\n            }\r\n            prices {\r\n                currency {\r\n                    label\r\n                    symbol\r\n                }\r\n                amount\r\n            }\r\n            brand\r\n        }\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`;\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\n // const productId = \"2\"\r\n const productId = \"jacket-canada-goosee\"\r\nconst Tracks = () => {\r\n    // const { loading, error, data } = useQuery(THINGS);\r\n    // const { loading, error, data } = useQuery(PRICES);\r\n    const { loading, error, data } = useQuery(QUERYALL2, {variables: {productId}});\r\n\r\n    // const { loading, error, data } = useQuery(QUERYALL, {variables: {productId}});\r\n\r\n    // const { loading, error, data } = useQuery(PRODUCT);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    // return <div>{JSON.stringify(data)}</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*{data?.currencies?.map((thin, index) => (*/}\r\n            {/*    <div> label={thin.label} symbol={thin.symbol}</div>*/}\r\n            {/*    // <Header label={thin.label} symbol={thin.symbol} />*/}\r\n            {/*))}*/}\r\n            {/*<Header product={data?.product}  />*/}\r\n            {/*<ProductCard />*/}\r\n            <PDP />\r\n            {/*<Headers name={this.name} category={this.category}/>*/}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAGL,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAMM,OAAO,GAAGN,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9BA;AA+BA,MAAMO,QAAQ,GAAGP,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjFA;AAmFA,MAAMQ,MAAM,GAAGR,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;AA2BA,MAAMS,SAAS,GAAGT,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhDA;AAiDA;AACA;AACA;AACA;AACC;;AACA,MAAMU,SAAS,GAAG,sBAAlB;;AACD,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB;EACA;EACA,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2Bf,QAAQ,CAACU,SAAD,EAAY;IAACM,SAAS,EAAE;MAACL;IAAD;EAAZ,CAAZ,CAAzC,CAHiB,CAKjB;EAEA;;EACA,IAAIE,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B,CATM,CAWjB;;EAGA,oBACI;IAAA,uBAOI,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EAPJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA3BD;;GAAML,M;UAG+BZ,Q;;;KAH/BY,M;AA6BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}