{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\ProductCard.js\";\nimport React from \"react\";\nimport { useQuery, gql, useApolloClient, ApolloClient, InMemoryCache } from '@apollo/client';\nimport styles from \"./ProductCard.module.css\";\nimport { client } from \"./../index\"; // const CARDS = gql`\n//     query GetCards($productId: String!) {\n//         categories {\n//             name\n//             products {\n//                 id\n//                 name\n//                 inStock\n//                 gallery\n//                 description\n//                 category\n//                 brand\n//             }\n//         }\n//         category {\n//             name\n//         }\n//         product(id: $productId) {\n//             id\n//             name\n//             inStock\n//             gallery\n//             description\n//             category\n//             attributes {\n//                 id\n//                 name\n//                 type\n//                 items {\n//                     displayValue\n//                     value\n//                     id\n//                 }\n//             }\n//             prices {\n//                 currency {\n//                     label\n//                     symbol\n//                 }\n//                 amount\n//             }\n//             brand\n//         }\n//         currencies {\n//             label\n//             symbol\n//         }\n//     }\n// `;\n// const client = new ApolloClient({\n//     uri: 'http://localhost:4000',\n//     cache: new InMemoryCache(),\n// });\n// client.query({variables:{input:{title: \"ALL\"}},query:CARDS})\n//     .then((res) => console.log(res))\n// ApolloClient\n//     .query({ variables: {input: {name: \"ALL\"}}, query:CARDS})\n//     .then((res) => console.log(res))\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: props.product,\n      categories: props.categories\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n                query Categories {\n                    categories {\n                        name\n                        products {\n                            name\n                            inStock\n                            gallery\n                            description\n                            category\n                            brand\n                        }\n                    }\n                }\n            `\n    }).then(result => console.log(result));\n  }\n\n  render() {\n    // ApolloClient\n    //     .query({ variables: {input: {title: \"ALL\"}}, query:CARDS})\n    //     .then((res) => console.log(res))\n    //\n    //         const { products} = this.props.categories;\n    // console.log(products)\n    const {\n      name,\n      category,\n      gallery\n    } = this.props.product; // console.log(this.name)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.blockImg,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.img,\n          src: gallery[0],\n          alt: \"Photo product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: [\"Title:\", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.price,\n          children: [\"Price: \", category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n; // class ProductCard extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state= {\n//             product: props.product,\n//\n//         }\n//     }\n//\n//     render() {\n//         const { name, category, gallery, prices} = this.props.product;\n//         console.log(this.name)\n//         return(\n//             <div className={styles.container}>\n//                 <div className={styles.blockImg}>\n//                     <img className={styles.img} src={gallery[0]} alt=\"Photo product\"/>\n//                 </div>\n//                 <div className={styles.content}>\n//                     <div className={styles.title}>Title:{name}</div>\n//                     <div className={styles.price}>Price: {category}</div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// };\n\nexport default ProductCard;","map":{"version":3,"names":["React","useQuery","gql","useApolloClient","ApolloClient","InMemoryCache","styles","client","ProductCard","Component","constructor","props","state","product","categories","componentDidMount","query","then","result","console","log","render","name","category","gallery","container","blockImg","img","content","title","price"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/ProductCard.js"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery, gql, useApolloClient, ApolloClient, InMemoryCache} from '@apollo/client';\r\nimport styles from \"./ProductCard.module.css\"\r\nimport {client} from \"./../index\"\r\n\r\n\r\n\r\n// const CARDS = gql`\r\n//     query GetCards($productId: String!) {\r\n//         categories {\r\n//             name\r\n//             products {\r\n//                 id\r\n//                 name\r\n//                 inStock\r\n//                 gallery\r\n//                 description\r\n//                 category\r\n//                 brand\r\n//             }\r\n//         }\r\n//         category {\r\n//             name\r\n//         }\r\n//         product(id: $productId) {\r\n//             id\r\n//             name\r\n//             inStock\r\n//             gallery\r\n//             description\r\n//             category\r\n//             attributes {\r\n//                 id\r\n//                 name\r\n//                 type\r\n//                 items {\r\n//                     displayValue\r\n//                     value\r\n//                     id\r\n//                 }\r\n//             }\r\n//             prices {\r\n//                 currency {\r\n//                     label\r\n//                     symbol\r\n//                 }\r\n//                 amount\r\n//             }\r\n//             brand\r\n//         }\r\n//         currencies {\r\n//             label\r\n//             symbol\r\n//         }\r\n//     }\r\n// `;\r\n\r\n\r\n// const client = new ApolloClient({\r\n//     uri: 'http://localhost:4000',\r\n//     cache: new InMemoryCache(),\r\n// });\r\n// client.query({variables:{input:{title: \"ALL\"}},query:CARDS})\r\n//     .then((res) => console.log(res))\r\n// ApolloClient\r\n//     .query({ variables: {input: {name: \"ALL\"}}, query:CARDS})\r\n//     .then((res) => console.log(res))\r\n\r\nclass ProductCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            product: props.product,\r\n            categories: props.categories\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        client\r\n        .query({\r\n            query: gql`\r\n                query Categories {\r\n                    categories {\r\n                        name\r\n                        products {\r\n                            name\r\n                            inStock\r\n                            gallery\r\n                            description\r\n                            category\r\n                            brand\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        })\r\n        .then((result) => console.log(result))\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n       // ApolloClient\r\n       //     .query({ variables: {input: {title: \"ALL\"}}, query:CARDS})\r\n       //     .then((res) => console.log(res))\r\n//\r\n//         const { products} = this.props.categories;\r\n// console.log(products)\r\n        const { name, category, gallery} = this.props.product;\r\n        // console.log(this.name)\r\n        return(\r\n            <div className={styles.container}>\r\n                <div className={styles.blockImg}>\r\n                    <img className={styles.img}  src={gallery[0]} alt=\"Photo product\"/>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <div className={styles.title}>Title:{name}</div>\r\n                    <div className={styles.price}>Price: {category}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n// class ProductCard extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state= {\r\n//             product: props.product,\r\n//\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         const { name, category, gallery, prices} = this.props.product;\r\n//         console.log(this.name)\r\n//         return(\r\n//             <div className={styles.container}>\r\n//                 <div className={styles.blockImg}>\r\n//                     <img className={styles.img} src={gallery[0]} alt=\"Photo product\"/>\r\n//                 </div>\r\n//                 <div className={styles.content}>\r\n//                     <div className={styles.title}>Title:{name}</div>\r\n//                     <div className={styles.price}>Price: {category}</div>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// };\r\n\r\nexport default ProductCard"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,eAAvB,EAAwCC,YAAxC,EAAsDC,aAAtD,QAA0E,gBAA1E;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,MAAR,QAAqB,YAArB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;EACtCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAY;MACRC,OAAO,EAAEF,KAAK,CAACE,OADP;MAERC,UAAU,EAAEH,KAAK,CAACG;IAFV,CAAZ;EAKH;;EAEDC,iBAAiB,GAAG;IAChBR,MAAM,CACLS,KADD,CACO;MACHA,KAAK,EAAEd,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAfe,CADP,EAkBCe,IAlBD,CAkBOC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAlBlB;EAmBH;;EAEDG,MAAM,GAAG;IAGN;IACA;IACA;IACP;IACA;IACA;IACQ,MAAM;MAAEC,IAAF;MAAQC,QAAR;MAAkBC;IAAlB,IAA6B,KAAKb,KAAL,CAAWE,OAA9C,CATK,CAUL;;IACA,oBACI;MAAK,SAAS,EAAEP,MAAM,CAACmB,SAAvB;MAAA,wBACI;QAAK,SAAS,EAAEnB,MAAM,CAACoB,QAAvB;QAAA,uBACI;UAAK,SAAS,EAAEpB,MAAM,CAACqB,GAAvB;UAA6B,GAAG,EAAEH,OAAO,CAAC,CAAD,CAAzC;UAA8C,GAAG,EAAC;QAAlD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,SAAS,EAAElB,MAAM,CAACsB,OAAvB;QAAA,wBACI;UAAK,SAAS,EAAEtB,MAAM,CAACuB,KAAvB;UAAA,qBAAqCP,IAArC;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAEhB,MAAM,CAACwB,KAAvB;UAAA,sBAAsCP,QAAtC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AAtDqC;;AAuDzC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAef,WAAf"},"metadata":{},"sourceType":"module"}