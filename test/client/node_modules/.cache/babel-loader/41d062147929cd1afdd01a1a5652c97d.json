{"ast":null,"code":"import React from \"react\";\nimport { gql } from '@apollo/client';\nimport styles from \"./CategoryAll.module.css\";\nimport ProductCard from \"../components/ProductCard\";\nimport { apolloClient } from \"./../index\";\nimport Header from \"../components/Header\";\n\nclass CategoryAll extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                inStock\n                                gallery\n                                description\n                                category\n                                brand\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories[0]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n  }\n\n} // class CategoryAll extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productCards: this.renderCards,\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.renderCards();\n//\n//     }\n//\n//\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevState.productCards !== this.state.productCards) {\n//             console.log('pokemons state has changed.')\n//            // this.handleClick()\n//         }\n//     }\n//\n//     renderCards = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const categories = result.data.categories;\n//\n//\n//             this.setState({\n//                 productCards: categories[0]\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     renderCards2 = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const categories = result.data.categories;\n//\n//             this.setState({\n//                 productCards: categories[2]\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     handleClick = () => {\n//         this.setState({productCards: this.renderCards2 });\n//         // console.log(this.categories[2])\n//         console.log('target')\n//     }\n//     press = () => {\n//         let productCard2 = this.state.productCards[1];\n//         this.setState({productCards: productCard2});\n//     }\n//\n//     render() {\n//         console.log(this.state.productCards.name)\n// const res = this.state.productCards[0]\n//         console.log(res)\n//\n//         // const {name} = productCards[0]\n//         // console.log(name)\n//         // console.log(productCards[0])\n//         // console.log(cards1)\n//\n//         const cards = this.state.productCards.products?.map(product => (\n//             <ProductCard key={product.id} product={product}/>\n//         ))\n//\n//         return (\n//             <main className={styles.container}>\n//                 <Header productCard={this.state.productCards} func={this.handleClick}/>\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\n//                 <section className={styles.productCards}>\n//                     <div className={styles.grid}>\n//                         {cards}\n//                     </div>\n//                 </section>\n//             </main>\n//         )\n//     }\n// }\n\n\nexport default CategoryAll; // class CategoryAll extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productCards: [],\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.renderCards()\n//     }\n//\n//     renderCards = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const cards = result.data.categories[0];\n//\n//             this.setState({\n//                 productCards: cards\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     render() {\n//         const cards = this.state.productCards.products?.map(product => (\n//             <ProductCard key={product.id} product={product}/>\n//         ))\n//\n//         return (\n//             <main className={styles.container}>\n//                 <Header />\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\n//                 <section className={styles.productCards}>\n//                     <div className={styles.grid}>\n//                         {cards}\n//                     </div>\n//                 </section>\n//             </main>\n//         )\n//     }\n// }","map":{"version":3,"names":["React","gql","styles","ProductCard","apolloClient","Header","CategoryAll","Component","constructor","props","state","error","isLoaded","items","componentDidMount","renderCards","result","query","categories","data","setState","productCards","err","console","log"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/CategoryAll.js"],"sourcesContent":["import React from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport styles from \"./CategoryAll.module.css\"\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport {apolloClient} from \"./../index\"\r\nimport Header from \"../components/Header\";\r\n\r\nclass CategoryAll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       const renderCards = async () => {\r\n        try {\r\n            const result = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Query {\r\n                        categories {\r\n                            name\r\n                            products {\r\n                                id\r\n                                name\r\n                                inStock\r\n                                gallery\r\n                                description\r\n                                category\r\n                                brand\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            });\r\n\r\n            const categories = result.data.categories;\r\n\r\n\r\n            this.setState({\r\n\r\n                productCards: categories[0]\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        ;\r\n    }\r\n    }\r\n}\r\n// class CategoryAll extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productCards: this.renderCards,\r\n//         }\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.renderCards();\r\n//\r\n//     }\r\n//\r\n//\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevState.productCards !== this.state.productCards) {\r\n//             console.log('pokemons state has changed.')\r\n//            // this.handleClick()\r\n//         }\r\n//     }\r\n//\r\n//     renderCards = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const categories = result.data.categories;\r\n//\r\n//\r\n//             this.setState({\r\n//                 productCards: categories[0]\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     renderCards2 = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const categories = result.data.categories;\r\n//\r\n//             this.setState({\r\n//                 productCards: categories[2]\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     handleClick = () => {\r\n//         this.setState({productCards: this.renderCards2 });\r\n//         // console.log(this.categories[2])\r\n//         console.log('target')\r\n//     }\r\n//     press = () => {\r\n//         let productCard2 = this.state.productCards[1];\r\n//         this.setState({productCards: productCard2});\r\n//     }\r\n//\r\n//     render() {\r\n//         console.log(this.state.productCards.name)\r\n// const res = this.state.productCards[0]\r\n//         console.log(res)\r\n//\r\n//         // const {name} = productCards[0]\r\n//         // console.log(name)\r\n//         // console.log(productCards[0])\r\n//         // console.log(cards1)\r\n//\r\n//         const cards = this.state.productCards.products?.map(product => (\r\n//             <ProductCard key={product.id} product={product}/>\r\n//         ))\r\n//\r\n//         return (\r\n//             <main className={styles.container}>\r\n//                 <Header productCard={this.state.productCards} func={this.handleClick}/>\r\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <div className={styles.grid}>\r\n//                         {cards}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default CategoryAll;\r\n\r\n// class CategoryAll extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productCards: [],\r\n//         }\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.renderCards()\r\n//     }\r\n//\r\n//     renderCards = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const cards = result.data.categories[0];\r\n//\r\n//             this.setState({\r\n//                 productCards: cards\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     render() {\r\n//         const cards = this.state.productCards.products?.map(product => (\r\n//             <ProductCard key={product.id} product={product}/>\r\n//         ))\r\n//\r\n//         return (\r\n//             <main className={styles.container}>\r\n//                 <Header />\r\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <div className={styles.grid}>\r\n//                         {cards}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;EACtCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE,IADE;MAETC,QAAQ,EAAE,KAFD;MAGTC,KAAK,EAAE;IAHE,CAAb;EAKH;;EAEDC,iBAAiB,GAAG;IACjB,MAAMC,WAAW,GAAG,YAAY;MAC/B,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMZ,YAAY,CAChCa,KADoB,CACd;UACHA,KAAK,EAAEhB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAhBmB,CADc,CAArB;QAoBA,MAAMiB,UAAU,GAAGF,MAAM,CAACG,IAAP,CAAYD,UAA/B;QAGA,KAAKE,QAAL,CAAc;UAEVC,YAAY,EAAEH,UAAU,CAAC,CAAD;QAFd,CAAd;MAKH,CA7BD,CA6BE,OAAOI,GAAP,EAAY;QACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH;;MACD;IACH,CAlCE;EAmCF;;AA9CqC,C,CAgeAAehB,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}