{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Category, Header } from \"./components\";\nimport Cart from \"./components/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./components/Pdp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories; // const prices = result.data.product.prices[0].amount\n\n        this.setState({\n          productCards: categories // prices: prices\n\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.clickOnButton = () => {\n      alert(123);\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeItem: index\n      });\n    };\n\n    this.state = {\n      productCards: [this.renderCards],\n      activeItem: 0,\n      products: [this.renderCards]\n    };\n  }\n\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.productCards !== this.state.productCards) {// console.log(this.state)\n      // this.setState({\n      //     productCards: this.categories[2]\n      // });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onClick: this.onSelectCategories,\n        clickOnButton: this.clickOnButton,\n        productCards: this.state.productCards,\n        activeItem: this.state.activeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Category, {\n            productCards: this.state.productCards,\n            activeItem: this.state.activeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            onClick: this.clickOnButton,\n            productCards: this.state.productCards,\n            activeItem: this.state.activeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:cardId\",\n          element: /*#__PURE__*/_jsxDEV(PDP, {\n            productCards: this.state.productCards,\n            activeItem: this.state.activeItem // prices={this.state.prices}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","apolloClient","gql","PDP","App","Component","constructor","props","renderCards","result","query","categories","data","setState","productCards","err","console","log","clickOnButton","alert","onSelectCategories","index","activeItem","state","products","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {Category, Header} from \"./components\"\nimport Cart from \"./components/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\nimport PDP from \"./components/Pdp\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productCards: [this.renderCards],\n            activeItem: 0,\n            products: [this.renderCards],\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            const categories = result.data.categories;\n            // const prices = result.data.product.prices[0].amount\n\n            this.setState({\n                productCards: categories,\n                // prices: prices\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentDidMount() {\n        this.renderCards();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.productCards !== this.state.productCards) {\n            // console.log(this.state)\n            // this.setState({\n            //     productCards: this.categories[2]\n            // });\n        }\n    }\n\n    clickOnButton = () => {\n        alert(123)\n    }\n\n    onSelectCategories = index => {\n        this.setState({\n            activeItem: index,\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div>\n                {/*<h2>My first Apollo app ðŸš€</h2>*/}\n                <Header onClick={this.onSelectCategories}\n                        clickOnButton={this.clickOnButton}\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}\n                />\n                <Routes>\n                    <Route path=\"/\" element={<Category\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}/>}\n                    />\n                    <Route path=\"/cart\" element={<Cart\n                        onClick={this.clickOnButton}\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}/>}\n                    />\n                    <Route path=\"/:cardId\" element={<PDP\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}\n                        // prices={this.state.prices}\n                    />}\n                    />\n                </Routes>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}