{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// Import everything needed to use the `useQuery` hook\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_LOCATIONS = gql`\n  query locations {\n    category{\n      name\n      products {\n        id\n        name\n        brand\n        gallery\n        prices {\n          amount\n          currency{\n            label\n            symbol\n\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DisplayLocations() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LOCATIONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  return data.locations.map(_ref => {\n    let {\n      id,\n      name,\n      brand,\n      gallery\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: gallery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"About this location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n}\n\n_s(DisplayLocations, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = DisplayLocations;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DisplayLocations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayLocations\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useQuery","gql","GET_LOCATIONS","DisplayLocations","loading","error","data","locations","map","id","name","brand","gallery","App"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["// Import everything needed to use the `useQuery` hook\nimport { useQuery, gql } from '@apollo/client';\n\nconst GET_LOCATIONS = gql`\n  query locations {\n    category{\n      name\n      products {\n        id\n        name\n        brand\n        gallery\n        prices {\n          amount\n          currency{\n            label\n            symbol\n\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DisplayLocations() {\n  const { loading, error, data } = useQuery(GET_LOCATIONS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.locations.map(({ id, name, brand, gallery }) => (\n      <div key={id}>\n        <h3>{name}</h3>\n        <h3>{gallery}</h3>\n        {/*<img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />*/}\n        <br />\n        <b>About this location:</b>\n        <p>{brand}</p>\n        <br />\n      </div>\n  ));\n}\n\nexport default function App() {\n  return (\n      <div>\n        <h2>My first Apollo app ðŸš€</h2>\n        <DisplayLocations />\n      </div>\n  );\n}\n"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;;AAsBA,SAASE,gBAAT,GAA4B;EAAA;;EAC1B,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BN,QAAQ,CAACE,aAAD,CAAzC;EAEA,IAAIE,OAAJ,EAAa,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACb,IAAIC,KAAJ,EAAW,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAEX,OAAOC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB;IAAA,IAAC;MAAEC,EAAF;MAAMC,IAAN;MAAYC,KAAZ;MAAmBC;IAAnB,CAAD;IAAA,oBACtB;MAAA,wBACE;QAAA,UAAKF;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAKE;MAAL;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA,GAAUF,EAAV;MAAA;MAAA;MAAA;IAAA,QADsB;EAAA,CAAnB,CAAP;AAWD;;GAjBQN,gB;UAC0BH,Q;;;KAD1BG,gB;AAmBT,eAAe,SAASU,GAAT,GAAe;EAC5B,oBACI;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMD;MAPuBA,G"},"metadata":{},"sourceType":"module"}