{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Category.js\";\nimport React from \"react\";\nimport { gql } from '@apollo/client';\nimport styles from \"./Category.module.css\";\nimport ProductCard from \"./ProductCard\";\nimport Cards from \"../pages/Cards\";\nimport { apolloClient } from \"./../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Category extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderCards = async () => {\n      try {\n        const res = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                inStock\n                                gallery\n                                description\n                                category\n                                brand\n                            }\n                        }\n                    }\n                `\n        });\n        const cards = res.data;\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n  }\n\n  // constructor(props) {\n  //     super(props);\n  //     // this.state= {\n  //     //     name:  this.props.category,\n  //     //     categories: this.props.categories\n  //     // }\n  // }\n  //     componentDidMount() {\n  // //         client\n  // // .query({\n  // //     query: gql`\n  // //         query Categories {\n  // //             categories {\n  // //                 name\n  // //                 products {\n  // //                     name\n  // //                     inStock\n  // //                     gallery\n  // //                     description\n  // //                     category\n  // //                     brand\n  // //                 }\n  // //             }\n  // //         }\n  // //     `\n  // // })\n  // // .then((result) => console.log(result))\n  //     }\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  render() {\n    const someRes = apolloClient.query({\n      query: gql`\n                query Query {\n                    categories {\n                        name\n                        products {\n                            id\n                            name\n                            inStock\n                            gallery\n                            description\n                            category\n                            brand\n                        }\n                    }\n                }\n            `\n    }).then(res => {\n      promiseWorked(res);\n    });\n\n    function promiseWorked(res) {\n      var _res$data;\n\n      console.log(res.data.categories[0]);\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: [\"Category name:\", res.data.categories[0].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.productCards,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.grid,\n            children: (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.categories[0].products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n              product: res.data.categories[0].products\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    } //      // .then((result) => console.log(result.data.categories[0].products))\n    //      .then(function (result) {\n    //          console.log(result)\n    //    let data = result.data\n    //     console.log(data.categories[0].products)\n    //     return (\n    //         <main className={styles.container}>\n    //             <h1 className={styles.title}>Category name:{data.categories[0].name}</h1>\n    //             <section className={styles.productCards}>\n    //                 <div className={styles.grid}>\n    //                     {data?.categories[0].products.map(product => (\n    //                         <ProductCard key={product.id} product={data.categories[0].products} />\n    //                     ))}\n    //                 </div>\n    //             </section>\n    //         </main>\n    //     )\n    // })\n    // const { name }  = this.props.category;\n    // // const { names }  = this.props.categories[0];\n    // console.log(name)\n    // console.log(this.props.categories)\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: someRes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this) // <main className={styles.container}>\n    //     <h1 className={styles.title}>Category name:{name}</h1>\n    //     {/*<section className={styles.productCards}>*/}\n    //     {/*    <div className={styles.grid}>*/}\n    //     {/*        // {data?.categories[0].products?.map(product => (*/}\n    //     {/*        <ProductCard key={product.id} product={product} />*/}\n    //     {/*    ))}*/}\n    //     {/*    </div>*/}\n    //     {/*</section>*/}\n    // </main>\n    ;\n  }\n\n}\n\nexport default Category; // class Category extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state= {\n//             name:  this.props.category,\n//             categories: this.props.categories\n//         }\n//     }\n//     render() {\n//\n//         const { name }  = this.props.category;\n//         // const { names }  = this.props.categories[0];\n//         console.log(name)\n//         console.log(this.props.categories)\n//         return(\n//             <main className={styles.container}>\n//                 <h1 className={styles.title}>Category name:{name}</h1>\n//                 <section className={styles.productCards}>\n//                     <Cards />\n//                 </section>\n//             </main>\n//         )\n//     }\n// }","map":{"version":3,"names":["React","gql","styles","ProductCard","Cards","apolloClient","Category","Component","renderCards","res","query","cards","data","err","console","log","componentDidMount","render","someRes","then","promiseWorked","categories","container","title","name","productCards","grid","products","map","product","id"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Category.js"],"sourcesContent":["import React from \"react\";\r\nimport { gql } from '@apollo/client';\r\nimport styles from \"./Category.module.css\"\r\nimport ProductCard from \"./ProductCard\";\r\nimport Cards from \"../pages/Cards\";\r\nimport {apolloClient} from \"./../index\"\r\n\r\nclass Category extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     // this.state= {\r\n    //     //     name:  this.props.category,\r\n    //     //     categories: this.props.categories\r\n    //     // }\r\n    // }\r\n\r\n//     componentDidMount() {\r\n// //         client\r\n// // .query({\r\n// //     query: gql`\r\n// //         query Categories {\r\n// //             categories {\r\n// //                 name\r\n// //                 products {\r\n// //                     name\r\n// //                     inStock\r\n// //                     gallery\r\n// //                     description\r\n// //                     category\r\n// //                     brand\r\n// //                 }\r\n// //             }\r\n// //         }\r\n// //     `\r\n// // })\r\n// // .then((result) => console.log(result))\r\n//     }\r\n\r\n    componentDidMount() {\r\n        this.renderCards();\r\n    }\r\n\r\n    renderCards = async() => {\r\n        try {\r\n            const res = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Query {\r\n                        categories {\r\n                            name\r\n                            products {\r\n                                id\r\n                                name\r\n                                inStock\r\n                                gallery\r\n                                description\r\n                                category\r\n                                brand\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            });\r\n            const cards = res.data;\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        };\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n   const someRes = apolloClient\r\n        .query({\r\n            query: gql`\r\n                query Query {\r\n                    categories {\r\n                        name\r\n                        products {\r\n                            id\r\n                            name\r\n                            inStock\r\n                            gallery\r\n                            description\r\n                            category\r\n                            brand\r\n                        }\r\n                    }\r\n                }\r\n            `\r\n        }).then(res => {\r\n            promiseWorked(res);\r\n        });\r\n        function promiseWorked(res) {\r\n\r\n            console.log(res.data.categories[0]);\r\n\r\n                return (\r\n                    <main className={styles.container}>\r\n                        <h1 className={styles.title}>Category name:{res.data.categories[0].name}</h1>\r\n                        <section className={styles.productCards}>\r\n                            <div className={styles.grid}>\r\n                                {res.data?.categories[0].products.map(product => (\r\n                                    <ProductCard key={product.id} product={res.data.categories[0].products} />\r\n                                ))}\r\n                            </div>\r\n                        </section>\r\n                    </main>\r\n                )\r\n        }\r\n\r\n   //      // .then((result) => console.log(result.data.categories[0].products))\r\n   //      .then(function (result) {\r\n   //          console.log(result)\r\n   //    let data = result.data\r\n   //     console.log(data.categories[0].products)\r\n   //     return (\r\n   //         <main className={styles.container}>\r\n   //             <h1 className={styles.title}>Category name:{data.categories[0].name}</h1>\r\n   //             <section className={styles.productCards}>\r\n   //                 <div className={styles.grid}>\r\n   //                     {data?.categories[0].products.map(product => (\r\n   //                         <ProductCard key={product.id} product={data.categories[0].products} />\r\n   //                     ))}\r\n   //                 </div>\r\n   //             </section>\r\n   //         </main>\r\n   //     )\r\n   // })\r\n\r\n\r\n\r\n        // const { name }  = this.props.category;\r\n        // // const { names }  = this.props.categories[0];\r\n        // console.log(name)\r\n        // console.log(this.props.categories)\r\n        return(\r\n            <div>\r\n                {someRes}\r\n            </div>\r\n\r\n\r\n            // <main className={styles.container}>\r\n            //     <h1 className={styles.title}>Category name:{name}</h1>\r\n            //     {/*<section className={styles.productCards}>*/}\r\n            //     {/*    <div className={styles.grid}>*/}\r\n            //     {/*        // {data?.categories[0].products?.map(product => (*/}\r\n            //     {/*        <ProductCard key={product.id} product={product} />*/}\r\n            //     {/*    ))}*/}\r\n            //     {/*    </div>*/}\r\n            //     {/*</section>*/}\r\n            // </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;\r\n\r\n// class Category extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state= {\r\n//             name:  this.props.category,\r\n//             categories: this.props.categories\r\n//         }\r\n//     }\r\n//     render() {\r\n//\r\n//         const { name }  = this.props.category;\r\n//         // const { names }  = this.props.categories[0];\r\n//         console.log(name)\r\n//         console.log(this.props.categories)\r\n//         return(\r\n//             <main className={styles.container}>\r\n//                 <h1 className={styles.title}>Category name:{name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <Cards />\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,YAAR,QAA2B,YAA3B;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;EAAA;IAAA;;IAAA,KAmCnCC,WAnCmC,GAmCrB,YAAW;MACrB,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMJ,YAAY,CAC7BK,KADiB,CACX;UACHA,KAAK,EAAET,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAhBmB,CADW,CAAlB;QAmBA,MAAMU,KAAK,GAAGF,GAAG,CAACG,IAAlB;MAEH,CAtBD,CAsBE,OAAOC,GAAP,EAAY;QACVC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH;;MAAA;IAGJ,CA/DkC;EAAA;;EACnC;EACA;EACA;EACA;EACA;EACA;EACA;EAEJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEIG,iBAAiB,GAAG;IAChB,KAAKR,WAAL;EACH;;EAgCDS,MAAM,GAAG;IAIV,MAAMC,OAAO,GAAGb,YAAY,CACtBK,KADU,CACJ;MACHA,KAAK,EAAET,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAhBe,CADI,EAkBRkB,IAlBQ,CAkBHV,GAAG,IAAI;MACXW,aAAa,CAACX,GAAD,CAAb;IACH,CApBU,CAAhB;;IAqBK,SAASW,aAAT,CAAuBX,GAAvB,EAA4B;MAAA;;MAExBK,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,IAAJ,CAASS,UAAT,CAAoB,CAApB,CAAZ;MAEI,oBACI;QAAM,SAAS,EAAEnB,MAAM,CAACoB,SAAxB;QAAA,wBACI;UAAI,SAAS,EAAEpB,MAAM,CAACqB,KAAtB;UAAA,6BAA4Cd,GAAG,CAACG,IAAJ,CAASS,UAAT,CAAoB,CAApB,EAAuBG,IAAnE;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAS,SAAS,EAAEtB,MAAM,CAACuB,YAA3B;UAAA,uBACI;YAAK,SAAS,EAAEvB,MAAM,CAACwB,IAAvB;YAAA,uBACKjB,GAAG,CAACG,IADT,8CACK,UAAUS,UAAV,CAAqB,CAArB,EAAwBM,QAAxB,CAAiCC,GAAjC,CAAqCC,OAAO,iBACzC,QAAC,WAAD;cAA8B,OAAO,EAAEpB,GAAG,CAACG,IAAJ,CAASS,UAAT,CAAoB,CAApB,EAAuBM;YAA9D,GAAkBE,OAAO,CAACC,EAA1B;cAAA;cAAA;cAAA;YAAA,QADH;UADL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAYP,CAzCI,CA2CV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAIK;IACA;IACA;IACA;;;IACA,oBACI;MAAA,UACKZ;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,CAMI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAfJ;EAiBH;;AAtJkC;;AAyJvC,eAAeZ,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}