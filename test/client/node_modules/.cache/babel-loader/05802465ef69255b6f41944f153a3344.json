{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\items.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Header from \"../components/header\";\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n// const TRACKS = gql`\n//     query GetTracks {\n//         tracksForHome {\n//             id\n//             title\n//             thumbnail\n//             length\n//             modulesCount\n//             author {\n//                 name\n//                 photo\n//             }\n//         }\n//     }\n// `;\n// const THINGS = gql`\n//     query GetCurrencies {\n//         currencies {\n//             label\n//             symbol\n//         }\n//     }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT = gql`\n    query GetProduct($id: String!) {\n        product(id: $id) {\n            id\n            name\n            inStock\n            description\n            category\n        }\n    }\n    `;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n\nconst Tracks = () => {\n  _s();\n\n  // const { loading, error, data } = useQuery(THINGS);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCT(huarache - x - stussy - le));\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: JSON.stringify(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this); // return (\n  //     <div>\n  //         {data?.currencies?.map((thin, index) => (\n  //             <div> label={thin.label} symbol={thin.symbol}</div>\n  //             // <Header label={thin.label} symbol={thin.symbol} />\n  //         ))}\n  //     </div>\n  // )\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useQuery","gql","Header","PRODUCT","Tracks","loading","error","data","huarache","x","stussy","le","message","JSON","stringify"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/items.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Header from \"../components/header\";\r\n\r\n\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\n// const TRACKS = gql`\r\n//     query GetTracks {\r\n//         tracksForHome {\r\n//             id\r\n//             title\r\n//             thumbnail\r\n//             length\r\n//             modulesCount\r\n//             author {\r\n//                 name\r\n//                 photo\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// const THINGS = gql`\r\n//     query GetCurrencies {\r\n//         currencies {\r\n//             label\r\n//             symbol\r\n//         }\r\n//     }\r\n// `\r\nconst PRODUCT = gql`\r\n    query GetProduct($id: String!) {\r\n        product(id: $id) {\r\n            id\r\n            name\r\n            inStock\r\n            description\r\n            category\r\n        }\r\n    }\r\n    `\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\nconst Tracks = () => {\r\n    // const { loading, error, data } = useQuery(THINGS);\r\n    const { loading, error, data } = useQuery(PRODUCT(huarache-x-stussy-le));\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    return <div>{JSON.stringify(data)}</div>\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {data?.currencies?.map((thin, index) => (\r\n    //             <div> label={thin.label} symbol={thin.symbol}</div>\r\n    //             // <Header label={thin.label} symbol={thin.symbol} />\r\n    //         ))}\r\n    //     </div>\r\n    // )\r\n\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,OAAO,GAAGF,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVA;AAWA;AACA;AACA;AACA;;AACA,MAAMG,MAAM,GAAG,MAAM;EAAA;;EACjB;EACA,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BP,QAAQ,CAACG,OAAO,CAACK,QAAQ,GAACC,CAAT,GAAWC,MAAX,GAAkBC,EAAnB,CAAR,CAAzC;EACA,IAAIN,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACM,OAAQ,EAA/B;EAEX,oBAAO;IAAA,UAAMC,IAAI,CAACC,SAAL,CAAeP,IAAf;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP,CANiB,CAQjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,CAjBD;;GAAMH,M;UAE+BJ,Q;;;KAF/BI,M;AAmBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}