{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { fetchCurrencies } from \"./redux/fetchCurrencies\";\nimport { connect } from \"react-redux\";\nimport { setCurrencies } from \"./redux/currencies/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderProductCards = async () => {\n      try {\n        const result = await fetchCategories();\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getCartFromLSn = () => {\n      const data = localStorage.getItem(\"cart\");\n      return data ? JSON.parse(data) : [];\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeCategory: index\n      });\n    };\n\n    this.getCurrencies = async () => {\n      try {\n        const result = await fetchCurrencies();\n        console.log(result);\n        const currenciesList = result.data.currencies[0].symbol;\n        console.log(currenciesList);\n        this.props.setCurrencies(currenciesList);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onSelectCurrencies = index => {\n      const {\n        currencies\n      } = this.props;\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onSelectAttribute = (attribute, el, index) => {\n      this.setState({\n        activeAttributeIndex: index,\n        activeAttribute: attribute,\n        activeAttributeItem: attribute.items[index]\n      });\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        activeAttribute,\n        activeAttributeItem,\n        activeAttributeIndex\n      } = this.state;\n      let newProduct;\n\n      if (!product.isInCart && product.inStock) {\n        newProduct = {\n          attributes: product.attributes,\n          activeAttribute: activeAttribute,\n          activeAttributeItem: activeAttributeItem,\n          activeAttributeIndex: activeAttributeIndex,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1,\n          isInCart: false\n        };\n      }\n\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          newProduct.isInCart = true;\n        }\n      });\n\n      if (!newProduct.isInCart && newProduct.inStock) {\n        newProduct.isInCart = true;\n        localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n        this.setState({\n          cartList: JSON.parse(localStorage.getItem(\"cart\"))\n        });\n      } else if (newProduct.isInCart) {\n        cartList.forEach((el, index, arr) => {\n          if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n            localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n          } else if (el.activeAttributeItem.id === newProduct.activeAttributeItem.id) {\n            this.setState({\n              count: ++newProduct.count\n            });\n            newProduct = { ...newProduct,\n              count: ++el.count\n            };\n            localStorage.setItem(\"cart\", JSON.stringify(cartList));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n            arr.length = index + 1;\n          }\n        });\n      }\n    };\n\n    this.deleteCartItem = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n      const index = cartList.findIndex(x => x.id === id && x.activeAttributeItem.id === product.activeAttributeItem.id);\n      cartList.splice(index, 1);\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countIncrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: ++this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(product, id)\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: --this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderProductCards],\n      activeCategory: 0,\n      products: [this.renderProductCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies();\n  }\n\n  render() {\n    const totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex\n    } = this.state;\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        modalShow,\n        totalPrice,\n        productCards,\n        activeCurrency,\n        currencies,\n        openPopup,\n        activeAttributeIndex,\n        cartList,\n        count,\n        activeCategory,\n        selectedCurrency,\n        total,\n        activeAttributeItem,\n        activeAttribute,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        getCartFromLS,\n        onSelectCategories,\n        onOpenPopup,\n        onSelectCurrencies,\n        toggleModal,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: this.onOpenPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              activeCurrency: this.state.activeCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default App;\n\n\nconst mapStateToProps = state => ({\n  currencies: state.currencies.currencies // activeCurrency: state.currencies.activeCurrency,\n  // selectedCurrency: state.currencies.selectedCurrency,\n  // openPopup: state.currencies.openPopup,\n\n});\n\nconst mapDispatchToProps = {\n  fetchCategories,\n  setCurrencies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","PDP","AppContext","Modal","CartOverlay","fetchCategories","fetchCurrencies","connect","setCurrencies","App","Component","constructor","props","renderProductCards","result","categories","data","setState","productCards","err","console","log","getCartFromLSn","localStorage","getItem","JSON","parse","onSelectCategories","index","activeCategory","getCurrencies","currenciesList","currencies","symbol","onSelectCurrencies","activeCurrency","selectedCurrency","currency","openPopup","onOpenPopup","state","onSelectAttribute","attribute","el","activeAttributeIndex","activeAttribute","activeAttributeItem","items","onAddToCart","product","cartList","newProduct","isInCart","inStock","attributes","brand","prices","gallery","id","name","count","forEach","setItem","stringify","arr","length","deleteCartItem","findIndex","x","splice","countIncrease","newProductChanged","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","products","total","totalPrice","totalCount","componentDidMount","render","reduce","prev","curr","amount","toFixed","getCartFromLS","mapStateToProps","mapDispatchToProps"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\n\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\n\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { fetchCurrencies } from \"./redux/fetchCurrencies\";\nimport { connect } from \"react-redux\";\n\nimport { setCurrencies } from \"./redux/currencies/slice\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderProductCards],\n      activeCategory: 0,\n      products: [this.renderProductCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0,\n      },\n    };\n  }\n\n  renderProductCards = async () => {\n    try {\n      const result = await fetchCategories();\n      const categories = result.data.categories;\n      this.setState({\n        productCards: categories,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies()\n  }\n\n  getCartFromLSn = () => {\n    const data = localStorage.getItem(\"cart\");\n    return data ? JSON.parse(data) : [];\n  };\n\n  onSelectCategories = (index) => {\n    this.setState({\n      activeCategory: index,\n    });\n  };\n  //\n  // getCurrencies = async () => {\n  //   try {\n  //     const result = await fetchCategories();\n  //     const currenciesList =\n  //       result.data.categories[this.state.activeCategory].products[0].prices;\n  //     this.props.setCurrencies(currenciesList);\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n\n  getCurrencies = async () => {\n    try {\n      const result = await fetchCurrencies();\n      console.log(result)\n      const currenciesList =\n        result.data.currencies[0].symbol;\n      console.log(currenciesList)\n      this.props.setCurrencies(currenciesList);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSelectCurrencies = (index) => {\n    const { currencies } = this.props;\n    this.setState({\n      activeCurrency: index,\n      selectedCurrency: currencies[index].currency.symbol,\n      openPopup: false,\n    });\n  };\n\n  onOpenPopup = () => {\n    this.setState({ openPopup: !this.state.openPopup });\n  };\n\n  onSelectAttribute = (attribute, el, index) => {\n    this.setState({\n      activeAttributeIndex: index,\n      activeAttribute: attribute,\n      activeAttributeItem: attribute.items[index],\n    });\n  };\n\n  onAddToCart = (product) => {\n    const {\n      cartList,\n      activeAttribute,\n      activeAttributeItem,\n      activeAttributeIndex,\n    } = this.state;\n    let newProduct;\n\n    if (!product.isInCart && product.inStock) {\n      newProduct = {\n        attributes: product.attributes,\n        activeAttribute: activeAttribute,\n        activeAttributeItem: activeAttributeItem,\n        activeAttributeIndex: activeAttributeIndex,\n        brand: product.brand,\n        prices: product.prices,\n        gallery: product.gallery,\n        id: product.id,\n        inStock: product.inStock,\n        name: product.name,\n        count: 1,\n        isInCart: false,\n      };\n    }\n\n    cartList.forEach((el) => {\n      if (el.id === newProduct.id) {\n        newProduct.isInCart = true;\n      }\n    });\n\n    if (!newProduct.isInCart && newProduct.inStock) {\n      newProduct.isInCart = true;\n      localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n      this.setState({\n        cartList: JSON.parse(localStorage.getItem(\"cart\")),\n      });\n    } else if (newProduct.isInCart) {\n      cartList.forEach((el, index, arr) => {\n        if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n          localStorage.setItem(\n            \"cart\",\n            JSON.stringify([...cartList, newProduct])\n          );\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          });\n        } else if (\n          el.activeAttributeItem.id === newProduct.activeAttributeItem.id\n        ) {\n          this.setState({\n            count: ++newProduct.count,\n          });\n          newProduct = { ...newProduct, count: ++el.count };\n          localStorage.setItem(\"cart\", JSON.stringify(cartList));\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          });\n          arr.length = index + 1;\n        }\n      });\n    }\n  };\n\n  deleteCartItem = (product, id) => {\n    const { cartList } = this.state;\n    const index = cartList.findIndex(\n      (x) =>\n        x.id === id &&\n        x.activeAttributeItem.id === product.activeAttributeItem.id\n    );\n    cartList.splice(index, 1);\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countIncrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count: ++product.count,\n      });\n    }\n\n    let newProductChanged = { ...product, count: ++this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countDecrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count:\n          product.count - 1 > 0\n            ? --product.count\n            : this.deleteCartItem(product, id),\n      });\n    }\n\n    let newProductChanged = { ...product, count: --this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  toggleModal = () => {\n    this.setState({\n      modalShow: !this.state.modalShow,\n    });\n  };\n\n  onHidePopup = () => {\n    document.body.style.overflow = \"\";\n    this.setState({\n      modalShow: false,\n    });\n  };\n\n  render() {\n    const totalPrice = this.state.cartList\n      .reduce((prev, curr) => {\n        return (\n          prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        );\n      }, 0)\n      .toFixed(2);\n\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex,\n    } = this.state;\n\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart,\n    } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          totalCount,\n          modalShow,\n          totalPrice,\n          productCards,\n          activeCurrency,\n          currencies,\n          openPopup,\n          activeAttributeIndex,\n          cartList,\n          count,\n          activeCategory,\n          selectedCurrency,\n          total,\n          activeAttributeItem,\n          activeAttribute,\n          deleteCartItem,\n          countIncrease,\n          countDecrease,\n          onHidePopup,\n          onSelectAttribute,\n          getCartFromLS,\n          onSelectCategories,\n          onOpenPopup,\n          onSelectCurrencies,\n          toggleModal,\n          onAddToCart,\n        }}\n      >\n        <div>\n          <Header onOpenPopup={this.onOpenPopup} />\n          <Routes>\n            <Route path=\"/\" element={<Category />} />\n            <Route\n              path=\"/cart\"\n              element={\n                <Cart\n                  activeCurrency={this.state.activeCurrency}\n                  cartList={this.state.cartList}\n                />\n              }\n            />\n            <Route\n              path=\"/:cardId\"\n              element={<PDP activeCurrency={this.state.activeCurrency} />}\n            />\n          </Routes>\n          <Modal\n            className={\n              modalShow\n                ? (document.body.style.overflow = \"hidden\")\n                : (document.body.style.overflow = \"\")\n            }\n            close={toggleModal}\n            shown={modalShow}\n          >\n            <CartOverlay />\n          </Modal>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\n// export default App;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies.currencies,\n  // activeCurrency: state.currencies.activeCurrency,\n  // selectedCurrency: state.currencies.selectedCurrency,\n  // openPopup: state.currencies.openPopup,\n});\n\nconst mapDispatchToProps = { fetchCategories, setCurrencies };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}