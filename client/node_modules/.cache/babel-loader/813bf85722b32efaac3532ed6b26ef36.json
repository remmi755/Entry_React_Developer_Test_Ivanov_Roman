{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\items.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Header from \"../components/header\";\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n// const TRACKS = gql`\n//     query GetTracks {\n//         tracksForHome {\n//             id\n//             title\n//             thumbnail\n//             length\n//             modulesCount\n//             author {\n//                 name\n//                 photo\n//             }\n//         }\n//     }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THINGS = gql`\n    query GetCurrencies {\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n\nconst Tracks = () => {\n  _s();\n\n  var _data$currencies;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(THINGS);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`; // return <div>{JSON.stringify(data)}</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data === null || data === void 0 ? void 0 : (_data$currencies = data.currencies) === null || _data$currencies === void 0 ? void 0 : _data$currencies.map(thin => /*#__PURE__*/_jsxDEV(Header, {\n      label: label,\n      thin: thin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tracks;\nexport default Tracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useQuery","gql","Header","THINGS","Tracks","loading","error","data","message","currencies","map","thin","label"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/items.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Header from \"../components/header\";\r\n\r\n\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\n// const TRACKS = gql`\r\n//     query GetTracks {\r\n//         tracksForHome {\r\n//             id\r\n//             title\r\n//             thumbnail\r\n//             length\r\n//             modulesCount\r\n//             author {\r\n//                 name\r\n//                 photo\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\nconst THINGS = gql`\r\n    query GetCurrencies {\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\nconst Tracks = () => {\r\n    const { loading, error, data } = useQuery(THINGS);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    // return <div>{JSON.stringify(data)}</div>\r\n\r\n    return (\r\n        <div>\r\n            {data?.currencies?.map(thin => (\r\n                <Header label={label} thin={thin} />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAGF,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA;AACA;AACA;AACA;;AACA,MAAMG,MAAM,GAAG,MAAM;EAAA;;EAAA;;EACjB,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BP,QAAQ,CAACG,MAAD,CAAzC;EACA,IAAIE,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B,CAHM,CAKjB;;EAEA,oBACI;IAAA,UACKD,IADL,aACKA,IADL,2CACKA,IAAI,CAAEE,UADX,qDACK,iBAAkBC,GAAlB,CAAsBC,IAAI,iBACvB,QAAC,MAAD;MAAQ,KAAK,EAAEC,KAAf;MAAsB,IAAI,EAAED;IAA5B;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAfD;;GAAMP,M;UAC+BJ,Q;;;KAD/BI,M;AAiBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}