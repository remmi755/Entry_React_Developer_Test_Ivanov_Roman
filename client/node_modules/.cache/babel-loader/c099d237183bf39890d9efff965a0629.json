{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\client\\\\src\\\\components\\\\CartOverlay\\\\index.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./CartOverlay.module.css\";\nimport CartOverlayItem from \"../CartOverlayItem\";\nimport Title from \"../Title\";\nimport Button from \"../Button\";\nimport { AppContext } from \"../AppContext\";\nimport { connect } from \"react-redux\";\nimport { onClosePopup, onOpenPopup } from \"../../redux/currencies/slice\";\nimport { setModalShow, toggleModal } from \"../../redux/modal/slice\";\nimport { actionsRef, separatorRef } from '../Actions';\nimport { currenciesRef } from '../Currencies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartOverlay extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = _ref => {\n      let {\n        target\n      } = _ref;\n\n      // console.log(this.props.modalShow)\n      // console.log(this.modalRef.current)\n      // console.log(this.modalRef.current.contains(target))\n      // console.log(actionsRef.current.contains(target))\n      // console.log(currenciesRef.current.contains(target))\n      if (currenciesRef.current && currenciesRef.current.contains(target) && this.props.modalShow) {\n        console.log('modalShow2', this.props.modalShow);\n        this.props.setModalShow(true);\n        this.props.toggleModal();\n      } else if (this.modalRef.current && !this.modalRef.current.contains(target) && actionsRef.current && !actionsRef.current.contains(target) && separatorRef.current && !separatorRef.current.contains(target) // (currenciesRef.current && !currenciesRef.current.contains(target))\n      ) {\n        this.props.setModalShow(false);\n        console.log('modalShow1', this.props.modalShow); // this.props.toggleModal();\n        // console.log('clickCur')\n      }\n    };\n\n    this.modalRef = /*#__PURE__*/React.createRef();\n  } // handleClickOutside = ({ target }) => {\n  //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //     if ( actionsRef.current && !actionsRef.current.contains(target)) {\n  //         // this.props.setModalShow(false)\n  //         // this.props.toggleModal();\n  //         console.log('click555')\n  //     }\n  // };\n\n\n  // handleClickOutside = ({ target }) => {\n  //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //     if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //         this.props.setModalShow(false)\n  //         this.props.toggleModal();\n  //         console.log('click555')\n  //     }\n  // };\n  // handleClickOutside = ({ target }) => {\n  //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //     if (actionsRef.current && !actionsRef.current.contains(target)) {\n  //         this.props.setModalShow(false)\n  //         console.log('click555')\n  //     } else if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //         this.props.toggleModal();\n  //         // this.props.setModalShow(true)\n  //         // this.props.onClosePopup(true);\n  //         console.log('click333')\n  //     }\n  // };\n  // handleClickOutside = ({ target }) => {\n  //\n  //\n  //     if(this.modalRef.current && !this.modalRef.current.contains(target) && this.props.modalShow) {\n  //         console.log(this.props.modalShow)\n  //         this.props.toggleModal();\n  //         this.props.onClosePopup(true);\n  //         console.log('click555')\n  //     } else if (this.modalRef.current && !this.modalRef.current.contains(target)) {\n  //         this.props.toggleModal();\n  //         // this.props.onOpenPopup();\n  //         // this.props.onClosePopup(true);\n  //         console.log('click333')\n  //     }\n  // };\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  render() {\n    var _cartList$;\n\n    // console.log(this.modalRef)\n    // console.log(actionsRef)\n    // console.log(currenciesRef)\n    const {\n      totalCount,\n      totalPrice,\n      onHidePopup\n    } = this.context;\n    const {\n      activeCurrency,\n      cartList\n    } = this.props;\n    const symbol = (_cartList$ = cartList[0]) === null || _cartList$ === void 0 ? void 0 : _cartList$.prices[activeCurrency].currency.symbol;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.modalRef,\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: styles.header,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            className: styles.title,\n            children: \"My Bag,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.totalCount,\n            children: [totalCount, \" items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: cartList && cartList.map((cartItem, id) => /*#__PURE__*/_jsxDEV(CartOverlayItem, {\n            cartItem: cartItem,\n            id: id\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.total,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.totalName,\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.totalPrice,\n            children: [symbol, totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.groupButton,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/cart\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.buttonViewBag,\n              onClick: onHidePopup,\n              children: \"VIEW BAG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.buttonCheckOut,\n            children: \"CHECK OUT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCartOverlay.contextType = AppContext; // export default CartOverlay\n\nconst mapStateToProps = state => ({\n  activeCurrency: state.currencies.activeCurrency,\n  cartList: state.cartList.cartList,\n  modalShow: state.modal.modalShow\n});\n\nconst mapDispatchToProps = {\n  onOpenPopup,\n  onClosePopup,\n  toggleModal,\n  setModalShow\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlay);","map":{"version":3,"names":["React","Link","styles","CartOverlayItem","Title","Button","AppContext","connect","onClosePopup","onOpenPopup","setModalShow","toggleModal","actionsRef","separatorRef","currenciesRef","CartOverlay","PureComponent","constructor","props","handleClickOutside","target","current","contains","modalShow","console","log","modalRef","createRef","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","totalCount","totalPrice","onHidePopup","context","activeCurrency","cartList","symbol","prices","currency","container","header","title","content","map","cartItem","id","total","totalName","groupButton","buttonViewBag","buttonCheckOut","contextType","mapStateToProps","state","currencies","modal","mapDispatchToProps"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/components/CartOverlay/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from \"./CartOverlay.module.css\"\r\nimport CartOverlayItem from \"../CartOverlayItem\";\r\nimport Title from \"../Title\"\r\nimport Button from \"../Button\"\r\nimport {AppContext} from \"../AppContext\"\r\n\r\nimport {connect} from \"react-redux\";\r\nimport { onClosePopup, onOpenPopup } from \"../../redux/currencies/slice\";\r\nimport { setModalShow, toggleModal } from \"../../redux/modal/slice\";\r\nimport {actionsRef, separatorRef} from '../Actions'\r\nimport {currenciesRef} from '../Currencies'\r\n\r\n\r\nclass CartOverlay extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modalRef = React.createRef();\r\n    }\r\n\r\n    // handleClickOutside = ({ target }) => {\r\n    //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //     if ( actionsRef.current && !actionsRef.current.contains(target)) {\r\n    //         // this.props.setModalShow(false)\r\n    //         // this.props.toggleModal();\r\n    //         console.log('click555')\r\n    //     }\r\n    // };\r\n\r\n    handleClickOutside = ({ target }) => {\r\n        // console.log(this.props.modalShow)\r\n        // console.log(this.modalRef.current)\r\n        // console.log(this.modalRef.current.contains(target))\r\n        // console.log(actionsRef.current.contains(target))\r\n        // console.log(currenciesRef.current.contains(target))\r\n    if ((currenciesRef.current && currenciesRef.current.contains(target)) && this.props.modalShow) {\r\n            console.log('modalShow2',this.props.modalShow)\r\n            this.props.setModalShow(true)\r\n        this.props.toggleModal();\r\n        }\r\n    else if (\r\n          (this.modalRef.current && !this.modalRef.current.contains(target))\r\n          && (actionsRef.current && !actionsRef.current.contains(target))\r\n          && (separatorRef.current && !separatorRef.current.contains(target))\r\n           // (currenciesRef.current && !currenciesRef.current.contains(target))\r\n        )\r\n        {\r\n            this.props.setModalShow(false)\r\n            console.log('modalShow1',this.props.modalShow)\r\n            // this.props.toggleModal();\r\n            // console.log('clickCur')\r\n        }\r\n    };\r\n\r\n    // handleClickOutside = ({ target }) => {\r\n    //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //     if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //         this.props.setModalShow(false)\r\n    //         this.props.toggleModal();\r\n    //         console.log('click555')\r\n    //     }\r\n    // };\r\n\r\n    // handleClickOutside = ({ target }) => {\r\n    //     // if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //     if (actionsRef.current && !actionsRef.current.contains(target)) {\r\n    //         this.props.setModalShow(false)\r\n    //         console.log('click555')\r\n    //     } else if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //         this.props.toggleModal();\r\n    //         // this.props.setModalShow(true)\r\n    //         // this.props.onClosePopup(true);\r\n    //         console.log('click333')\r\n    //     }\r\n    // };\r\n\r\n    // handleClickOutside = ({ target }) => {\r\n    //\r\n    //\r\n    //     if(this.modalRef.current && !this.modalRef.current.contains(target) && this.props.modalShow) {\r\n    //         console.log(this.props.modalShow)\r\n    //         this.props.toggleModal();\r\n    //         this.props.onClosePopup(true);\r\n    //         console.log('click555')\r\n    //     } else if (this.modalRef.current && !this.modalRef.current.contains(target)) {\r\n    //         this.props.toggleModal();\r\n    //         // this.props.onOpenPopup();\r\n    //         // this.props.onClosePopup(true);\r\n    //         console.log('click333')\r\n    //     }\r\n    // };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this.modalRef)\r\n        // console.log(actionsRef)\r\n        // console.log(currenciesRef)\r\n        const {totalCount, totalPrice, onHidePopup} = this.context\r\n        const { activeCurrency, cartList} = this.props\r\n        const symbol = cartList[0]?.prices[activeCurrency].currency.symbol;\r\n        return(\r\n            <div ref={this.modalRef}>\r\n                <main className={styles.container}>\r\n                    <header className={styles.header}>\r\n                        <Title className={styles.title}>My Bag,</Title>\r\n                        <span className={styles.totalCount}>{totalCount} items</span>\r\n                    </header>\r\n                    <div className={styles.content}>\r\n                        {\r\n                            cartList &&\r\n                            cartList.map((cartItem, id) => (\r\n                                <CartOverlayItem\r\n                                    cartItem={cartItem} key={id} id={id}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className={styles.total}>\r\n                        <span className={styles.totalName}>Total</span>\r\n                        <span className={styles.totalPrice}>{symbol}{totalPrice}</span>\r\n                    </div>\r\n                    <div className={styles.groupButton}>\r\n                        <Link to=\"/cart\">\r\n                            <Button className={styles.buttonViewBag} onClick={onHidePopup} >VIEW BAG</Button>\r\n                        </Link>\r\n                        <Button className={styles.buttonCheckOut}>CHECK OUT</Button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCartOverlay.contextType = AppContext;\r\n\r\n// export default CartOverlay\r\n\r\nconst mapStateToProps = (state) => ({\r\n    activeCurrency: state.currencies.activeCurrency,\r\n    cartList:state.cartList.cartList,\r\n    modalShow: state.modal.modalShow,\r\n});\r\n\r\nconst mapDispatchToProps = { onOpenPopup, onClosePopup, toggleModal, setModalShow };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlay);"],"mappings":"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"},"metadata":{},"sourceType":"module"}