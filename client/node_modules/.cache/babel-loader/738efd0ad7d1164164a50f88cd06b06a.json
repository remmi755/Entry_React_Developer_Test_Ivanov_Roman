{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\";\n// Import everything needed to use the `useQuery` hook\nimport { useQuery, gql } from '@apollo/client'; // import Header from \"./components/header\";\n\nimport Tracks from \"./pages/items\"; // function DisplayLocations() {\n//   const { loading, error, data } = useQuery(GET_LOCATIONS);\n//\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//\n//   return data.locations.map(({ id, name, brand, gallery }) => (\n//       <div key={id}>\n//         <h3>{name}</h3>\n//         <h3>{gallery}</h3>\n//         {/*<img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />*/}\n//         <br />\n//         <b>About this location:</b>\n//         <p>{brand}</p>\n//         <br />\n//       </div>\n//   ));\n// }\n// function Show() {\n//     const { loading, error, data } = useQuery(GET_LOCATIONS)\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n//\n//     return data.locations.map(({ id, name, brand, gallery }) => (\n//         <div key={id}>\n//             <h3>{name}</h3>\n//             <h3>{gallery}</h3>\n//             <p>{brand}</p>\n//         </div>\n//     ));\n//\n//\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tracks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useQuery","gql","Tracks","App"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["// Import everything needed to use the `useQuery` hook\nimport { useQuery, gql } from '@apollo/client';\n// import Header from \"./components/header\";\nimport Tracks from \"./pages/items\";\n\n\n\n// function DisplayLocations() {\n//   const { loading, error, data } = useQuery(GET_LOCATIONS);\n//\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//\n//   return data.locations.map(({ id, name, brand, gallery }) => (\n//       <div key={id}>\n//         <h3>{name}</h3>\n//         <h3>{gallery}</h3>\n//         {/*<img width=\"400\" height=\"250\" alt=\"location-reference\" src={`${photo}`} />*/}\n//         <br />\n//         <b>About this location:</b>\n//         <p>{brand}</p>\n//         <br />\n//       </div>\n//   ));\n// }\n\n// function Show() {\n//     const { loading, error, data } = useQuery(GET_LOCATIONS)\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>Error :(</p>;\n//\n//     return data.locations.map(({ id, name, brand, gallery }) => (\n//         <div key={id}>\n//             <h3>{name}</h3>\n//             <h3>{gallery}</h3>\n//             <p>{brand}</p>\n//         </div>\n//     ));\n//\n//\n// }\n\nexport default function App() {\n  return (\n      <div>\n        <h2>My first Apollo app ðŸš€</h2>\n        {/*<DisplayLocations />*/}\n        <Header />\n        {/*<Show />*/}\n          <Tracks />\n      </div>\n  );\n}\n"],"mappings":";AAAA;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,oBACI;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAKI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASD;KAVuBA,G"},"metadata":{},"sourceType":"module"}