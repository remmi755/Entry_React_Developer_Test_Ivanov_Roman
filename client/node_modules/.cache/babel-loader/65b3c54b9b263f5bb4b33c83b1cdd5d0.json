{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Pdp.js\";\nimport React from \"react\";\nimport styles from \"./Pdp.module.css\";\nimport GroupTitle from \"./GroupTitle\";\nimport ChoiceSize from \"./ChoiseSize\";\nimport ChoiceColor from \"./ChoiceColor\";\nimport { apolloClient } from \"../index\";\nimport { gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CARD = gql`\n    query Product($productId: String!) {\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            prices {\n                amount\n                currency {\n                    symbol\n                    label\n                }\n            }\n            brand\n            attributes {\n                id\n                name\n                type\n                items {\n                    id\n                    value\n                    displayValue\n                }\n            }\n        }\n    }\n`;\n\nclass PDP extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPDP = async id => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Product($productId: String!) {\n                        product(id: $productId) {\n                            id\n                            name\n                            inStock\n                            gallery\n                            description\n                            category\n                            prices {\n                                amount\n                                currency {\n                                    symbol\n                                    label\n                                }\n                            }\n                            brand\n                            attributes {\n                                id\n                                name\n                                type\n                                items {\n                                    id\n                                    value\n                                    displayValue\n                                }\n                            }\n                        }\n                    }\n                `\n        }, {\n          variables: {\n            productId: id\n          }\n        });\n        const product = result.data;\n        this.setState({\n          product: product // cardId: this.state.cardId\n\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    this.state = {\n      product: [this.renderPDP] // productId: ''\n\n    };\n  }\n\n  // handleLogin = async () => {\n  //\n  //     const response = await apolloClient.query({\n  //         query: GET_CARD,\n  //         variables: {\n  //             // productId,\n  //         },\n  //     })\n  // }\n  componentDidMount() {\n    this.renderPDP(); // this.handleLogin()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.productCards !== this.state.productCards) {\n      console.log(this.state);\n      this.renderPDP();\n    }\n  }\n\n  render() {\n    const card = apolloClient.query({\n      query: GET_CARD,\n      variables: {\n        productId: \"xbox-series-s\"\n      }\n    }).then(res => {\n      console.log(res.data.product.description); // return (\n      //     <main className={styles.container}>\n      //         <section className={styles.blockImg}>\n      //             <img className={styles.blockImgItem} src=\"\" alt=\"img1\"/>\n      //             <img className={styles.blockImgItem} src=\"\" alt=\"img2\"/>\n      //             <img className={styles.blockImgItem} src=\"\" alt=\"img3\"/>\n      //         </section>\n      //         <section className={styles.blockGroup}>\n      //             <img className={styles.groupImg} src=\"\" alt=\"img main\"/>\n      //             <div className={styles.groupChoice}>\n      //                 <div><GroupTitle/></div>\n      //                 <div className={styles.choiceSize}><ChoiceSize/></div>\n      //                 <div className={styles.choiceColor}><ChoiceColor/></div>\n      //                 <div className={styles.groupChoicePrice}>\n      //                     <h5 className={styles.h5}>PRICE:</h5>\n      //                     <div className={styles.price}>$50.00</div>\n      //                 </div>\n      //                 <button className={styles.button}>ADD TO CART</button>\n      //                 <p className={styles.description}>Description</p>\n      //             </div>\n      //         </section>\n      //     </main>\n      // )\n    }); // const handleLogin = async () => {\n    //\n    //     const response = await apolloClient.query({\n    //         query: GET_CARD,\n    //         variables: {\n    //             cardId,\n    //         },\n    //     })\n    // }\n    // console.log(this.props)\n\n    console.log(this.state);\n    return (\n      /*#__PURE__*/\n      // <>\n      //     {card}\n      // </>\n      _jsxDEV(\"main\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.blockImg,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.blockImgItem,\n            src: \"\",\n            alt: \"img1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.blockImgItem,\n            src: \"\",\n            alt: \"img2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.blockImgItem,\n            src: \"\",\n            alt: \"img3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.blockGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.groupImg,\n            src: \"\",\n            alt: \"img main\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.groupChoice,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(GroupTitle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.choiceSize,\n              children: /*#__PURE__*/_jsxDEV(ChoiceSize, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.choiceColor,\n              children: /*#__PURE__*/_jsxDEV(ChoiceColor, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.groupChoicePrice,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: styles.h5,\n                children: \"PRICE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.price,\n                children: \"$50.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.button,\n              children: \"ADD TO CART\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.description,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default PDP;","map":{"version":3,"names":["React","styles","GroupTitle","ChoiceSize","ChoiceColor","apolloClient","gql","GET_CARD","PDP","Component","constructor","props","renderPDP","id","result","query","variables","productId","product","data","setState","err","console","log","state","componentDidMount","componentDidUpdate","prevProps","prevState","productCards","render","card","then","res","description","container","blockImg","blockImgItem","blockGroup","groupImg","groupChoice","choiceSize","choiceColor","groupChoicePrice","h5","price","button"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Pdp.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Pdp.module.css\"\r\nimport GroupTitle from \"./GroupTitle\";\r\nimport ChoiceSize from \"./ChoiseSize\";\r\nimport ChoiceColor from \"./ChoiceColor\";\r\nimport {apolloClient} from \"../index\";\r\nimport {gql} from \"@apollo/client\";\r\n\r\nconst GET_CARD = gql`\r\n    query Product($productId: String!) {\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            prices {\r\n                amount\r\n                currency {\r\n                    symbol\r\n                    label\r\n                }\r\n            }\r\n            brand\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    id\r\n                    value\r\n                    displayValue\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass PDP extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: [this.renderPDP],\r\n            // productId: ''\r\n\r\n        }\r\n    }\r\n\r\n    renderPDP = async (id) => {\r\n        try {\r\n            const result = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Product($productId: String!) {\r\n                        product(id: $productId) {\r\n                            id\r\n                            name\r\n                            inStock\r\n                            gallery\r\n                            description\r\n                            category\r\n                            prices {\r\n                                amount\r\n                                currency {\r\n                                    symbol\r\n                                    label\r\n                                }\r\n                            }\r\n                            brand\r\n                            attributes {\r\n                                id\r\n                                name\r\n                                type\r\n                                items {\r\n                                    id\r\n                                    value\r\n                                    displayValue\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            }, {variables: {productId: id}});\r\n            const product = result.data;\r\n\r\n            this.setState({\r\n                product: product,\r\n                // cardId: this.state.cardId\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        ;\r\n    }\r\n\r\n    // handleLogin = async () => {\r\n    //\r\n    //     const response = await apolloClient.query({\r\n    //         query: GET_CARD,\r\n    //         variables: {\r\n    //             // productId,\r\n    //         },\r\n    //     })\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.renderPDP();\r\n        // this.handleLogin()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.productCards !== this.state.productCards) {\r\n            console.log(this.state)\r\n            this.renderPDP()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const card = apolloClient\r\n            .query({query: GET_CARD, variables: {productId: \"xbox-series-s\"}})\r\n            .then((res) => {\r\n                console.log(res.data.product.description)\r\n                // return (\r\n                //     <main className={styles.container}>\r\n                //         <section className={styles.blockImg}>\r\n                //             <img className={styles.blockImgItem} src=\"\" alt=\"img1\"/>\r\n                //             <img className={styles.blockImgItem} src=\"\" alt=\"img2\"/>\r\n                //             <img className={styles.blockImgItem} src=\"\" alt=\"img3\"/>\r\n                //         </section>\r\n                //         <section className={styles.blockGroup}>\r\n                //             <img className={styles.groupImg} src=\"\" alt=\"img main\"/>\r\n                //             <div className={styles.groupChoice}>\r\n                //                 <div><GroupTitle/></div>\r\n                //                 <div className={styles.choiceSize}><ChoiceSize/></div>\r\n                //                 <div className={styles.choiceColor}><ChoiceColor/></div>\r\n                //                 <div className={styles.groupChoicePrice}>\r\n                //                     <h5 className={styles.h5}>PRICE:</h5>\r\n                //                     <div className={styles.price}>$50.00</div>\r\n                //                 </div>\r\n                //                 <button className={styles.button}>ADD TO CART</button>\r\n                //                 <p className={styles.description}>Description</p>\r\n                //             </div>\r\n                //         </section>\r\n                //     </main>\r\n                // )\r\n\r\n            })\r\n\r\n        // const handleLogin = async () => {\r\n        //\r\n        //     const response = await apolloClient.query({\r\n        //         query: GET_CARD,\r\n        //         variables: {\r\n        //             cardId,\r\n        //         },\r\n        //     })\r\n        // }\r\n        // console.log(this.props)\r\n        console.log(this.state)\r\n\r\n        return (\r\n            // <>\r\n            //     {card}\r\n            // </>\r\n            <main className={styles.container}>\r\n                <section className={styles.blockImg}>\r\n                    <img className={styles.blockImgItem} src=\"\" alt=\"img1\"/>\r\n                    <img className={styles.blockImgItem} src=\"\" alt=\"img2\"/>\r\n                    <img className={styles.blockImgItem} src=\"\" alt=\"img3\"/>\r\n                </section>\r\n                <section className={styles.blockGroup}>\r\n                    <img className={styles.groupImg} src=\"\" alt=\"img main\"/>\r\n                    <div className={styles.groupChoice}>\r\n                        <div><GroupTitle/></div>\r\n                        <div className={styles.choiceSize}><ChoiceSize/></div>\r\n                        <div className={styles.choiceColor}><ChoiceColor/></div>\r\n                        <div className={styles.groupChoicePrice}>\r\n                            <h5 className={styles.h5}>PRICE:</h5>\r\n                            <div className={styles.price}>$50.00</div>\r\n                        </div>\r\n                        <button className={styles.button}>ADD TO CART</button>\r\n                        <p className={styles.description}>Description</p>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PDP"],"mappings":"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"},"metadata":{},"sourceType":"module"}