{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { apolloClient } from \"../../index\";\nimport { gql } from \"@apollo/client\";\nexport const fetchCategories = createAsyncThunk(\"fetch/Currencies\", async () => {\n  const {\n    data\n  } = await apolloClient.query({\n    query: gql`\n          query Query {\n              categories {\n                  name\n                  products {\n                      id\n                      name\n                      category\n                      prices {\n                          currency {\n                              symbol\n                              label\n                          }\n                          amount\n                      }\n                      brand\n                      attributes {\n                          items {\n                              id\n                              value\n                              displayValue\n                          }\n                          id\n                          name\n                          type\n                      }\n                      inStock\n                      gallery\n                      description\n                  }\n              }\n          }\n      `\n  }); // const categories = data.categories;\n\n  return data;\n}); // export const renderCards = async () => {\n//   try {\n//     const { data } = await apolloClient.query({\n//       query: gql`\n//           query Query {\n//               categories {\n//                   name\n//                   products {\n//                       id\n//                       name\n//                       category\n//                       prices {\n//                           currency {\n//                               symbol\n//                               label\n//                           }\n//                           amount\n//                       }\n//                       brand\n//                       attributes {\n//                           items {\n//                               id\n//                               value\n//                               displayValue\n//                           }\n//                           id\n//                           name\n//                           type\n//                       }\n//                       inStock\n//                       gallery\n//                       description\n//                   }\n//               }\n//           }\n//       `\n//     });\n//\n//     return data\n//     // const categories = result.data.categories;\n//     // const currenciesList =\n//     //   result.data.categories[this.state.activeCategory].products[0].prices;\n//\n//     // this.setState({\n//     //   productCards: categories,\n//     //   currencies: currenciesList\n//     // });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };","map":{"version":3,"names":["createAsyncThunk","apolloClient","gql","fetchCategories","data","query"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/curriencies/fetchCategories.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { apolloClient } from \"../../index\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  \"fetch/Currencies\",\r\n  async () => {\r\n\r\n    const { data } = await apolloClient.query({\r\n      query: gql`\r\n          query Query {\r\n              categories {\r\n                  name\r\n                  products {\r\n                      id\r\n                      name\r\n                      category\r\n                      prices {\r\n                          currency {\r\n                              symbol\r\n                              label\r\n                          }\r\n                          amount\r\n                      }\r\n                      brand\r\n                      attributes {\r\n                          items {\r\n                              id\r\n                              value\r\n                              displayValue\r\n                          }\r\n                          id\r\n                          name\r\n                          type\r\n                      }\r\n                      inStock\r\n                      gallery\r\n                      description\r\n                  }\r\n              }\r\n          }\r\n      `\r\n    });\r\n      // const categories = data.categories;\r\n    return data\r\n  }\r\n)\r\n\r\n// export const renderCards = async () => {\r\n//   try {\r\n//     const { data } = await apolloClient.query({\r\n//       query: gql`\r\n//           query Query {\r\n//               categories {\r\n//                   name\r\n//                   products {\r\n//                       id\r\n//                       name\r\n//                       category\r\n//                       prices {\r\n//                           currency {\r\n//                               symbol\r\n//                               label\r\n//                           }\r\n//                           amount\r\n//                       }\r\n//                       brand\r\n//                       attributes {\r\n//                           items {\r\n//                               id\r\n//                               value\r\n//                               displayValue\r\n//                           }\r\n//                           id\r\n//                           name\r\n//                           type\r\n//                       }\r\n//                       inStock\r\n//                       gallery\r\n//                       description\r\n//                   }\r\n//               }\r\n//           }\r\n//       `\r\n//     });\r\n//\r\n//     return data\r\n//     // const categories = result.data.categories;\r\n//     // const currenciesList =\r\n//     //   result.data.categories[this.state.activeCategory].products[0].prices;\r\n//\r\n//     // this.setState({\r\n//     //   productCards: categories,\r\n//     //   currencies: currenciesList\r\n//     // });\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,eAAe,GAAGH,gBAAgB,CAC7C,kBAD6C,EAE7C,YAAY;EAEV,MAAM;IAAEI;EAAF,IAAW,MAAMH,YAAY,CAACI,KAAb,CAAmB;IACxCA,KAAK,EAAEH,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAjC8C,CAAnB,CAAvB,CAFU,CAqCR;;EACF,OAAOE,IAAP;AACD,CAzC4C,CAAxC,C,CA4CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}