{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Pdp.js\";\nimport React from \"react\";\nimport styles from \"./Pdp.module.css\";\nimport GroupTitle from \"./GroupTitle\";\nimport ChoiceSize from \"./ChoiseSize\";\nimport ChoiceColor from \"./ChoiceColor\";\nimport { apolloClient } from \"../index\";\nimport { gql } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\"; // const GET_CARD = gql`\n//     query Product($productId: String!) {\n//         product(id: $productId) {\n//             id\n//             name\n//             inStock\n//             gallery\n//             description\n//             category\n//             prices {\n//                 amount\n//                 currency {\n//                     symbol\n//                     label\n//                 }\n//             }\n//             brand\n//             attributes {\n//                 id\n//                 name\n//                 type\n//                 items {\n//                     id\n//                     value\n//                     displayValue\n//                 }\n//             }\n//         }\n//     }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function withRouter(Children) {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    const match = {\n      params: useParams()\n    };\n    return /*#__PURE__*/_jsxDEV(Children, { ...props,\n      match: match\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n    return [useParams];\n  });\n}\n\nclass PDP extends React.Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         product: [this.renderPDP],\n  //\n  //         // product: []\n  //     }\n  // }\n  // renderPDP = async () => {\n  //     try {\n  //         const result = await apolloClient\n  //         .query({\n  //             query: gql`\n  //                 query Product($productId: String!) {\n  //                     product(id: $productId) {\n  //                         id\n  //                         name\n  //                         inStock\n  //                         gallery\n  //                         description\n  //                         category\n  //                         prices {\n  //                             amount\n  //                             currency {\n  //                                 symbol\n  //                                 label\n  //                             }\n  //                         }\n  //                         brand\n  //                         attributes {\n  //                             id\n  //                             name\n  //                             type\n  //                             items {\n  //                                 id\n  //                                 value\n  //                                 displayValue\n  //                             }\n  //                         }\n  //                     }\n  //                 }\n  //             `, variables: {productId: this.props.match.params['cardId'].substring(1)}\n  //         });\n  //         const product = result.data.product;\n  //         const attributes = result.data.product.attributes\n  //         const allAttributes = result.data.product.attributes\n  //         const prices = result.data.product.prices[0].amount\n  //\n  //         this.setState({\n  //             product: product,\n  //             attributes: attributes,\n  //             allAttributes: allAttributes,\n  //             prices: prices\n  //\n  //         });\n  //\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // };\n  //\n  // componentDidMount() {\n  //     this.renderPDP();\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //     if (prevState.product !== this.state.product) {\n  //         console.log('it was Changed')\n  //         // this.renderPDP();\n  //         // this.setState({\n  //         //     product: this.state.product\n  //         // })\n  //     }\n  // }\n  render() {\n    // console.log(this.props.updateData(this.state.prices))\n    // console.log(this.state.prices)\n    let description = `${this.props.product.description}`.replace(/(\\<(\\/?[^>]+)>)/g, '');\n    let attributes = this.props.attributes;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.blockImg,\n        children: this.props.product.gallery && this.props.product.gallery.map((img, id) => /*#__PURE__*/_jsxDEV(\"img\", {\n          id: id,\n          className: styles.blockImgItem,\n          src: img,\n          alt: \"imgGallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.blockGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.groupImg,\n          src: this.props.product.gallery,\n          alt: \"imgMain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.groupChoice,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(GroupTitle, {\n              product: this.props.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.choiceSize,\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ChoiceSize, {\n              product: this.props.product,\n              attributes: attributes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.groupChoicePrice,\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: styles.h5,\n              children: \"PRICE:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.price,\n              children: this.props.prices\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            children: \"ADD TO CART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.description,\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(PDP);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","styles","GroupTitle","ChoiceSize","ChoiceColor","apolloClient","gql","useParams","withRouter","Children","props","match","params","PDP","Component","render","description","product","replace","attributes","container","blockImg","gallery","map","img","id","blockImgItem","blockGroup","groupImg","groupChoice","choiceSize","groupChoicePrice","h5","price","prices","button"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Pdp.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Pdp.module.css\"\r\nimport GroupTitle from \"./GroupTitle\";\r\nimport ChoiceSize from \"./ChoiseSize\";\r\nimport ChoiceColor from \"./ChoiceColor\";\r\nimport {apolloClient} from \"../index\";\r\nimport {gql} from \"@apollo/client\"\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n// const GET_CARD = gql`\r\n//     query Product($productId: String!) {\r\n//         product(id: $productId) {\r\n//             id\r\n//             name\r\n//             inStock\r\n//             gallery\r\n//             description\r\n//             category\r\n//             prices {\r\n//                 amount\r\n//                 currency {\r\n//                     symbol\r\n//                     label\r\n//                 }\r\n//             }\r\n//             brand\r\n//             attributes {\r\n//                 id\r\n//                 name\r\n//                 type\r\n//                 items {\r\n//                     id\r\n//                     value\r\n//                     displayValue\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = {params: useParams()};\r\n        return <Children {...props} match={match}/>\r\n    }\r\n}\r\n\r\nclass PDP extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         product: [this.renderPDP],\r\n    //\r\n    //         // product: []\r\n    //     }\r\n    // }\r\n\r\n    // renderPDP = async () => {\r\n    //     try {\r\n    //         const result = await apolloClient\r\n    //         .query({\r\n    //             query: gql`\r\n    //                 query Product($productId: String!) {\r\n    //                     product(id: $productId) {\r\n    //                         id\r\n    //                         name\r\n    //                         inStock\r\n    //                         gallery\r\n    //                         description\r\n    //                         category\r\n    //                         prices {\r\n    //                             amount\r\n    //                             currency {\r\n    //                                 symbol\r\n    //                                 label\r\n    //                             }\r\n    //                         }\r\n    //                         brand\r\n    //                         attributes {\r\n    //                             id\r\n    //                             name\r\n    //                             type\r\n    //                             items {\r\n    //                                 id\r\n    //                                 value\r\n    //                                 displayValue\r\n    //                             }\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             `, variables: {productId: this.props.match.params['cardId'].substring(1)}\r\n    //         });\r\n    //         const product = result.data.product;\r\n    //         const attributes = result.data.product.attributes\r\n    //         const allAttributes = result.data.product.attributes\r\n    //         const prices = result.data.product.prices[0].amount\r\n    //\r\n    //         this.setState({\r\n    //             product: product,\r\n    //             attributes: attributes,\r\n    //             allAttributes: allAttributes,\r\n    //             prices: prices\r\n    //\r\n    //         });\r\n    //\r\n    //     } catch (err) {\r\n    //         console.log(err);\r\n    //     }\r\n    // };\r\n\r\n    //\r\n    // componentDidMount() {\r\n    //     this.renderPDP();\r\n    // }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevState.product !== this.state.product) {\r\n    //         console.log('it was Changed')\r\n    //         // this.renderPDP();\r\n    //         // this.setState({\r\n    //         //     product: this.state.product\r\n    //         // })\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        // console.log(this.props.updateData(this.state.prices))\r\n        // console.log(this.state.prices)\r\n        let description = `${this.props.product.description}`.replace(/(\\<(\\/?[^>]+)>)/g, '')\r\n        let attributes = this.props.attributes\r\n\r\n\r\n\r\n        return (\r\n            <main className={styles.container}>\r\n                <section className={styles.blockImg}>\r\n                    {this.props.product.gallery &&\r\n                        this.props.product.gallery.map((img, id) => (\r\n                            <img id={id} className={styles.blockImgItem} src={img} alt=\"imgGallery\"/>\r\n                        ))\r\n\r\n                    }\r\n                </section>\r\n                <section className={styles.blockGroup}>\r\n                    <img className={styles.groupImg} src={this.props.product.gallery} alt=\"imgMain\"/>\r\n                    <div className={styles.groupChoice}>\r\n                        <div><GroupTitle\r\n                            product={this.props.product}\r\n                        /></div>\r\n                        <div className={styles.choiceSize}>\r\n                            <ul>\r\n                                {/*{attributes &&*/}\r\n                                {/*    attributes.map((size, id) => (*/}\r\n                                {/*            <li key={id} className={styles.sizeItem}>{size.value}</li>*/}\r\n                                {/*        )*/}\r\n                                {/*    )*/}\r\n                                {/*}*/}\r\n                            </ul>\r\n                            <ChoiceSize product={this.props.product}\r\n                                        attributes={attributes}/>\r\n                        </div>\r\n                        {/*<div className={styles.choiceColor}><ChoiceColor/></div>*/}\r\n                        <div className={styles.groupChoicePrice}>\r\n                            <h5 className={styles.h5}>PRICE:</h5>\r\n                            <div className={styles.price}>\r\n                                {this.props.prices}\r\n                            </div>\r\n                        </div>\r\n                        <button className={styles.button}>ADD TO CART</button>\r\n                        <p className={styles.description}>\r\n                            {description}\r\n                        </p>\r\n                        {/*<div>{this.props.price}</div>*/}\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(PDP)"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;EAAA;;EACjC,UAAQC,KAAD,IAAW;IAAA;;IACd,MAAMC,KAAK,GAAG;MAACC,MAAM,EAAEL,SAAS;IAAlB,CAAd;IACA,oBAAO,QAAC,QAAD,OAAcG,KAAd;MAAqB,KAAK,EAAEC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAHD;IAAA,QAC2BJ,SAD3B;EAAA;AAIH;;AAED,MAAMM,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,MAAM,GAAG;IACL;IACA;IACA,IAAIC,WAAW,GAAI,GAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,WAAY,EAAlC,CAAoCE,OAApC,CAA4C,kBAA5C,EAAgE,EAAhE,CAAlB;IACA,IAAIC,UAAU,GAAG,KAAKT,KAAL,CAAWS,UAA5B;IAIA,oBACI;MAAM,SAAS,EAAElB,MAAM,CAACmB,SAAxB;MAAA,wBACI;QAAS,SAAS,EAAEnB,MAAM,CAACoB,QAA3B;QAAA,UACK,KAAKX,KAAL,CAAWO,OAAX,CAAmBK,OAAnB,IACG,KAAKZ,KAAL,CAAWO,OAAX,CAAmBK,OAAnB,CAA2BC,GAA3B,CAA+B,CAACC,GAAD,EAAMC,EAAN,kBAC3B;UAAK,EAAE,EAAEA,EAAT;UAAa,SAAS,EAAExB,MAAM,CAACyB,YAA/B;UAA6C,GAAG,EAAEF,GAAlD;UAAuD,GAAG,EAAC;QAA3D;UAAA;UAAA;UAAA;QAAA,QADJ;MAFR;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAS,SAAS,EAAEvB,MAAM,CAAC0B,UAA3B;QAAA,wBACI;UAAK,SAAS,EAAE1B,MAAM,CAAC2B,QAAvB;UAAiC,GAAG,EAAE,KAAKlB,KAAL,CAAWO,OAAX,CAAmBK,OAAzD;UAAkE,GAAG,EAAC;QAAtE;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAErB,MAAM,CAAC4B,WAAvB;UAAA,wBACI;YAAA,uBAAK,QAAC,UAAD;cACD,OAAO,EAAE,KAAKnB,KAAL,CAAWO;YADnB;cAAA;cAAA;cAAA;YAAA;UAAL;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAK,SAAS,EAAEhB,MAAM,CAAC6B,UAAvB;YAAA,wBACI;cAAA;cAAA;cAAA;YAAA,QADJ,eASI,QAAC,UAAD;cAAY,OAAO,EAAE,KAAKpB,KAAL,CAAWO,OAAhC;cACY,UAAU,EAAEE;YADxB;cAAA;cAAA;cAAA;YAAA,QATJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAiBI;YAAK,SAAS,EAAElB,MAAM,CAAC8B,gBAAvB;YAAA,wBACI;cAAI,SAAS,EAAE9B,MAAM,CAAC+B,EAAtB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAK,SAAS,EAAE/B,MAAM,CAACgC,KAAvB;cAAA,UACK,KAAKvB,KAAL,CAAWwB;YADhB;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBJ,eAuBI;YAAQ,SAAS,EAAEjC,MAAM,CAACkC,MAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAvBJ,eAwBI;YAAG,SAAS,EAAElC,MAAM,CAACe,WAArB;YAAA,UACKA;UADL;YAAA;YAAA;YAAA;UAAA,QAxBJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA4CH;;AAnI6B;;AAsIlC,oBAAeR,UAAU,CAACK,GAAD,CAAzB"},"metadata":{},"sourceType":"module"}