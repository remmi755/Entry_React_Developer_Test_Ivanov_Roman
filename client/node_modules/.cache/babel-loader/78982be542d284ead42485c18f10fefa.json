{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Header from \"../components/Header\";\nimport Headers from \"../components/navigator\";\nimport ProductCard from \"../components/ProductCard\";\nimport PDP from \"../components/Pdp\";\nimport BagItem from \"../components/BagItem\";\nimport CartOverlay from \"../components/CartOverlay\";\nimport Size from \"../components/ChoiseSize\";\nimport Category from \"../components/Category\";\nimport Cart from \"../components/Cart\";\nimport ChoiceSize from \"../components/ChoiseSize\";\nimport ChoiceColor from \"../components/ChoiceColor\";\nimport GroupOrder from \"../components/GroupOrder\";\nimport GroupTitle from \"../components/GroupTitle\";\nimport CartItem from \"../components/CartItem\";\nimport styles from \"./Cards.module.css\";\nimport category from \"../components/Category\";\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n// const TRACKS = gql`\n//     query GetTracks {\n//         tracksForHome {\n//             id\n//             title\n//             thumbnail\n//             length\n//             modulesCount\n//             author {\n//                 name\n//                 photo\n//             }\n//         }\n//     }\n// `;\n// const THINGS = gql`\n//     query GetCurrencies {\n//         currencies {\n//             label\n//             symbol\n//         }\n//     }\n// `\n// const PRODUCT = gql`\n//\n//         query Categories($productId: String!) {\n//         product(id: $productId) {\n//             id\n//             name\n//             inStock\n//             gallery\n//             description\n//             category\n//             attributes {\n//                 id\n//                 name\n//                 type\n//                 items {\n//                     displayValue\n//                     value\n//                     id\n//                 }\n//             }\n//             prices {\n//                 currency {\n//                     symbol\n//                     label\n//                 }\n//             }\n//             brand\n//         }\n//     }\n//\n//     `;\n//\n// const PRICES = gql`\n//     query GetPrices {\n//         category {\n//             name\n//             products {\n//                 id\n//                 name\n//                 inStock\n//                 gallery\n//                 description\n//                 category\n//                 attributes {\n//                     id\n//                     name\n//                     type\n//                     items {\n//                         displayValue\n//                         value\n//                         id\n//                     }\n//                 }\n//             }\n//         }\n//     }\n//\n// `;\n// const QUERYALL2 = gql`\n//     query Query($productId: String!) {\n//         categories {\n//             name\n//             products {\n//                 id\n//                 name\n//                 inStock\n//                 gallery\n//                 description\n//                 category\n//                 brand\n//             }\n//         }\n//         category {\n//             name\n//         }\n//         product(id: $productId) {\n//             id\n//             name\n//             inStock\n//             gallery\n//             description\n//             category\n//             attributes {\n//                 id\n//                 name\n//                 type\n//                 items {\n//                     displayValue\n//                     value\n//                     id\n//                 }\n//             }\n//             prices {\n//                 currency {\n//                     label\n//                     symbol\n//                 }\n//                 amount\n//             }\n//             brand\n//         }\n//         currencies {\n//             label\n//             symbol\n//         }\n//     }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERYALL2 = gql`\n    query Query($productId: String!) {\n        categories {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n            }\n        }\n        category {\n            name\n        }\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n                id\n                name\n                type\n                items {\n                    displayValue\n                    value\n                    id\n                }\n            }\n            prices {\n                currency {\n                    label\n                    symbol\n                }\n                amount\n            }\n            brand\n        }\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n\nconst productId = \"jacket-canada-goosee\";\n\nconst Cards = () => {\n  _s();\n\n  var _data$categories$0$pr;\n\n  // const { loading, error, data } = useQuery(THINGS);\n  // const { loading, error, data } = useQuery(PRICES);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERYALL2, {\n    variables: {\n      productId\n    }\n  }); // const { loading, error, data } = useQuery(QUERYALL, {variables: {productId}});\n  // const { loading, error, data } = useQuery(PRODUCT);\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(data); // return <div>{JSON.stringify(data)}</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.grid,\n    children: [data === null || data === void 0 ? void 0 : (_data$categories$0$pr = data.categories[0].products) === null || _data$categories$0$pr === void 0 ? void 0 : _data$categories$0$pr.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product,\n      category: category\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this)), \"// //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \", \", // //         \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cards, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useQuery","gql","Header","Headers","ProductCard","PDP","BagItem","CartOverlay","Size","Category","Cart","ChoiceSize","ChoiceColor","GroupOrder","GroupTitle","CartItem","styles","category","QUERYALL2","productId","Cards","loading","error","data","variables","message","console","log","grid","categories","products","map","product","id"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/Cards.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport Header from \"../components/Header\";\r\nimport Headers from \"../components/navigator\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport PDP from \"../components/Pdp\";\r\nimport BagItem from \"../components/BagItem\";\r\nimport CartOverlay from \"../components/CartOverlay\";\r\nimport Size from \"../components/ChoiseSize\";\r\nimport Category from \"../components/Category\";\r\nimport Cart from \"../components/Cart\";\r\nimport ChoiceSize from \"../components/ChoiseSize\";\r\nimport ChoiceColor from \"../components/ChoiceColor\";\r\nimport GroupOrder from \"../components/GroupOrder\";\r\nimport GroupTitle from \"../components/GroupTitle\";\r\nimport CartItem from \"../components/CartItem\";\r\nimport styles from \"./Cards.module.css\"\r\nimport category from \"../components/Category\";\r\n\r\n\r\n\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\n// const TRACKS = gql`\r\n//     query GetTracks {\r\n//         tracksForHome {\r\n//             id\r\n//             title\r\n//             thumbnail\r\n//             length\r\n//             modulesCount\r\n//             author {\r\n//                 name\r\n//                 photo\r\n//             }\r\n//         }\r\n//     }\r\n// `;\r\n\r\n// const THINGS = gql`\r\n//     query GetCurrencies {\r\n//         currencies {\r\n//             label\r\n//             symbol\r\n//         }\r\n//     }\r\n// `\r\n// const PRODUCT = gql`\r\n//\r\n//         query Categories($productId: String!) {\r\n//         product(id: $productId) {\r\n//             id\r\n//             name\r\n//             inStock\r\n//             gallery\r\n//             description\r\n//             category\r\n//             attributes {\r\n//                 id\r\n//                 name\r\n//                 type\r\n//                 items {\r\n//                     displayValue\r\n//                     value\r\n//                     id\r\n//                 }\r\n//             }\r\n//             prices {\r\n//                 currency {\r\n//                     symbol\r\n//                     label\r\n//                 }\r\n//             }\r\n//             brand\r\n//         }\r\n//     }\r\n//\r\n//     `;\r\n\r\n//\r\n// const PRICES = gql`\r\n//     query GetPrices {\r\n//         category {\r\n//             name\r\n//             products {\r\n//                 id\r\n//                 name\r\n//                 inStock\r\n//                 gallery\r\n//                 description\r\n//                 category\r\n//                 attributes {\r\n//                     id\r\n//                     name\r\n//                     type\r\n//                     items {\r\n//                         displayValue\r\n//                         value\r\n//                         id\r\n//                     }\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n//\r\n// `;\r\n\r\n// const QUERYALL2 = gql`\r\n//     query Query($productId: String!) {\r\n//         categories {\r\n//             name\r\n//             products {\r\n//                 id\r\n//                 name\r\n//                 inStock\r\n//                 gallery\r\n//                 description\r\n//                 category\r\n//                 brand\r\n//             }\r\n//         }\r\n//         category {\r\n//             name\r\n//         }\r\n//         product(id: $productId) {\r\n//             id\r\n//             name\r\n//             inStock\r\n//             gallery\r\n//             description\r\n//             category\r\n//             attributes {\r\n//                 id\r\n//                 name\r\n//                 type\r\n//                 items {\r\n//                     displayValue\r\n//                     value\r\n//                     id\r\n//                 }\r\n//             }\r\n//             prices {\r\n//                 currency {\r\n//                     label\r\n//                     symbol\r\n//                 }\r\n//                 amount\r\n//             }\r\n//             brand\r\n//         }\r\n//         currencies {\r\n//             label\r\n//             symbol\r\n//         }\r\n//     }\r\n// `;\r\n\r\nconst QUERYALL2 = gql`\r\n    query Query($productId: String!) {\r\n        categories {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                brand\r\n            }\r\n        }\r\n        category {\r\n            name\r\n        }\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    displayValue\r\n                    value\r\n                    id\r\n                }\r\n            }\r\n            prices {\r\n                currency {\r\n                    label\r\n                    symbol\r\n                }\r\n                amount\r\n            }\r\n            brand\r\n        }\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`;\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\n\r\nconst productId = \"jacket-canada-goosee\"\r\n\r\nconst Cards = () => {\r\n    // const { loading, error, data } = useQuery(THINGS);\r\n    // const { loading, error, data } = useQuery(PRICES);\r\n    const { loading, error, data } = useQuery(QUERYALL2, {variables: {productId}});\r\n\r\n    // const { loading, error, data } = useQuery(QUERYALL, {variables: {productId}});\r\n\r\n    // const { loading, error, data } = useQuery(PRODUCT);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\nconsole.log(data)\r\n    // return <div>{JSON.stringify(data)}</div>\r\n\r\n\r\n    return (\r\n        <div className={styles.grid}>\r\n            {data?.categories[0].products?.map(product => (\r\n                <ProductCard key={product.id} product={product} category={category}/>\r\n            ))}\r\n    {/*//         <ProductCard key={productId} product={product} />*/}\r\n    {/*               <Category />*/}\r\n    // //         {/*<Cart />*/},\r\n    // //         {/*<GroupOrder />*/},\r\n    // //         {/*<GroupTitle />*/},\r\n    // //         {/*<PDP />*/},\r\n    // //         {/*<BagItem />*/},\r\n    // //         {/*<CartItem />*/},\r\n    // //         {/*<Header />*/},\r\n    // //         {/*<CartOverlay />*/},\r\n    // //         {/*<ChoiceSize />*/},\r\n    // //         {/*<ChoiceColor />*/},\r\n    // //         {/*<Headers name={this.name} category={this.category}/>*/}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArjB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhDA;AAiDA;AACA;AACA;AACA;;AAEA,MAAMkB,SAAS,GAAG,sBAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAAA;;EAChB;EACA;EACA,MAAM;IAAEC,OAAF;IAAWC,KAAX;IAAkBC;EAAlB,IAA2BvB,QAAQ,CAACkB,SAAD,EAAY;IAACM,SAAS,EAAE;MAACL;IAAD;EAAZ,CAAZ,CAAzC,CAHgB,CAKhB;EAEA;;EACA,IAAIE,OAAJ,EAAa,OAAO,YAAP;EACb,IAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACG,OAAQ,EAA/B;EACfC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAVoB,CAWhB;;EAGA,oBACI;IAAK,SAAS,EAAEP,MAAM,CAACY,IAAvB;IAAA,WACKL,IADL,aACKA,IADL,gDACKA,IAAI,CAAEM,UAAN,CAAiB,CAAjB,EAAoBC,QADzB,0DACK,sBAA8BC,GAA9B,CAAkCC,OAAO,iBACtC,QAAC,WAAD;MAA8B,OAAO,EAAEA,OAAvC;MAAgD,QAAQ,EAAEf;IAA1D,GAAkBe,OAAO,CAACC,EAA1B;MAAA;MAAA;MAAA;IAAA,QADH,CADL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CAnCD;;GAAMb,K;UAG+BpB,Q;;;KAH/BoB,K;AAqCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}