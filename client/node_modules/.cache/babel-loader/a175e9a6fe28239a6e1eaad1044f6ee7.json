{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"./getCartFromLs\";\nconst initialState = {\n  cartList: getCartFromLS(),\n  count: 1\n};\nexport const cartListSlice = createSlice({\n  name: \"cartList\",\n  initialState,\n  reducers: {\n    setCartList: (state, action) => {\n      state.cartList = action.payload;\n    },\n    countDecrease: (state, action) => {\n      if (action.payload.count - 1 > 0) {\n        let newProductChanged = { ...action.payload,\n          count: action.payload.count - 1\n        };\n        state.cartList.forEach((el, index) => {\n          if (el.id === action.payload.id) {\n            state.cartList[index] = newProductChanged;\n          }\n        });\n        setCartList(state.cartList);\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\n      } else {\n        this.deleteCartItem(action.payload);\n      }\n\n      ;\n    }\n  }\n});\nexport const {\n  setCartList,\n  countDecrease\n} = cartListSlice.actions;\nexport default cartListSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLS","initialState","cartList","count","cartListSlice","name","reducers","setCartList","state","action","payload","countDecrease","newProductChanged","forEach","el","index","id","localStorage","setItem","JSON","stringify","deleteCartItem","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/cartList/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {getCartFromLS} from \"./getCartFromLs\";\r\n\r\nconst initialState = {\r\n  cartList: getCartFromLS(),\r\n  count: 1,\r\n};\r\n\r\nexport const cartListSlice = createSlice({\r\n  name: \"cartList\",\r\n  initialState,\r\n  reducers: {\r\n    setCartList: (state, action) => {\r\n      state.cartList =  action.payload;\r\n    },\r\n\r\n    countDecrease: (state, action) => {\r\n      if(action.payload.count - 1 > 0) {\r\n        let newProductChanged = { ...action.payload, count: action.payload.count - 1}\r\n        state.cartList.forEach((el, index) => {\r\n          if (el.id === action.payload.id) {\r\n            state.cartList[index] = newProductChanged;\r\n          }\r\n        });\r\n        setCartList(state.cartList);\r\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\r\n      } else {\r\n        this.deleteCartItem(action.payload)\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCartList, countDecrease } = cartListSlice.actions;\r\n\r\nexport default cartListSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAEF,aAAa,EADJ;EAEnBG,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCM,IAAI,EAAE,UADiC;EAEvCJ,YAFuC;EAGvCK,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACN,QAAN,GAAkBO,MAAM,CAACC,OAAzB;IACD,CAHO;IAKRC,aAAa,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAChC,IAAGA,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuB,CAAvB,GAA2B,CAA9B,EAAiC;QAC/B,IAAIS,iBAAiB,GAAG,EAAE,GAAGH,MAAM,CAACC,OAAZ;UAAqBP,KAAK,EAAEM,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuB;QAAnD,CAAxB;QACAK,KAAK,CAACN,QAAN,CAAeW,OAAf,CAAuB,CAACC,EAAD,EAAKC,KAAL,KAAe;UACpC,IAAID,EAAE,CAACE,EAAH,KAAUP,MAAM,CAACC,OAAP,CAAeM,EAA7B,EAAiC;YAC/BR,KAAK,CAACN,QAAN,CAAea,KAAf,IAAwBH,iBAAxB;UACD;QACF,CAJD;QAKAL,WAAW,CAACC,KAAK,CAACN,QAAP,CAAX;QACAe,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeZ,KAAK,CAACN,QAArB,CAA7B;MACD,CATD,MASO;QACL,KAAKmB,cAAL,CAAoBZ,MAAM,CAACC,OAA3B;MACD;;MAAA;IACF;EAlBO;AAH6B,CAAD,CAAjC;AAyBP,OAAO,MAAM;EAAEH,WAAF;EAAeI;AAAf,IAAiCP,aAAa,CAACkB,OAArD;AAEP,eAAelB,aAAa,CAACmB,OAA7B"},"metadata":{},"sourceType":"module"}