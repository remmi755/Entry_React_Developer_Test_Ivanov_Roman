{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { connect } from \"react-redux\";\nimport { setCurrencies } from \"./redux/currencies/slice\";\nimport { setProductCards } from \"./redux/categories/slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderProductCards = async () => {\n      try {\n        const result = await fetchCategories();\n        const productCardsItem = result.data.categories;\n        console.log(productCardsItem);\n        this.props.setProductCards(productCardsItem); // this.setState({\n        //   productCards: productCardsItem,\n        // });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getCartFromLSn = () => {\n      const data = localStorage.getItem(\"cart\");\n      return data ? JSON.parse(data) : [];\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeCategory: index\n      });\n    };\n\n    this.getCurrencies = async () => {\n      try {\n        const result = await fetchCategories();\n        const currenciesList = result.data.categories[this.state.activeCategory].products[0].prices;\n        this.props.setCurrencies(currenciesList);\n        console.log(currenciesList);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onSelectCurrencies = index => {\n      const {\n        currencies\n      } = this.props;\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onSelectAttribute = (attribute, el, index) => {\n      this.setState({\n        activeAttributeIndex: index,\n        activeAttribute: attribute,\n        activeAttributeItem: attribute.items[index]\n      });\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        activeAttribute,\n        activeAttributeItem,\n        activeAttributeIndex\n      } = this.state;\n      let newProduct;\n\n      if (!product.isInCart && product.inStock) {\n        newProduct = {\n          attributes: product.attributes,\n          activeAttribute: activeAttribute,\n          activeAttributeItem: activeAttributeItem,\n          activeAttributeIndex: activeAttributeIndex,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1,\n          isInCart: false\n        };\n      }\n\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          newProduct.isInCart = true;\n        }\n      });\n\n      if (!newProduct.isInCart && newProduct.inStock) {\n        newProduct.isInCart = true;\n        localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n        this.setState({\n          cartList: JSON.parse(localStorage.getItem(\"cart\"))\n        });\n      } else if (newProduct.isInCart) {\n        cartList.forEach((el, index, arr) => {\n          if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n            localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n          } else if (el.activeAttributeItem.id === newProduct.activeAttributeItem.id) {\n            this.setState({\n              count: ++newProduct.count\n            });\n            newProduct = { ...newProduct,\n              count: ++el.count\n            };\n            localStorage.setItem(\"cart\", JSON.stringify(cartList));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n            arr.length = index + 1;\n          }\n        });\n      }\n    };\n\n    this.deleteCartItem = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n      const index = cartList.findIndex(x => x.id === id && x.activeAttributeItem.id === product.activeAttributeItem.id);\n      cartList.splice(index, 1);\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countIncrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: ++this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(product, id)\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: --this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderProductCards],\n      activeCategory: 0,\n      products: [this.renderProductCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies();\n  }\n\n  render() {\n    console.log(this.props.productCards);\n    console.log(this.props.currencies);\n    const totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex\n    } = this.state; // const{productCards} = this.props\n\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        modalShow,\n        totalPrice,\n        productCards,\n        activeCurrency,\n        currencies,\n        openPopup,\n        activeAttributeIndex,\n        cartList,\n        count,\n        activeCategory,\n        selectedCurrency,\n        total,\n        activeAttributeItem,\n        activeAttribute,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        getCartFromLS,\n        onSelectCategories,\n        onOpenPopup,\n        onSelectCurrencies,\n        toggleModal,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: this.onOpenPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              activeCurrency: this.state.activeCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default App;\n\n\nconst mapStateToProps = state => ({\n  currencies: state.currencies.currencies,\n  productCards: state.categories.productCards // activeCurrency: state.currencies.activeCurrency,\n  // selectedCurrency: state.currencies.selectedCurrency,\n  // openPopup: state.currencies.openPopup,\n\n});\n\nconst mapDispatchToProps = {\n  fetchCategories,\n  setCurrencies,\n  setProductCards\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","PDP","AppContext","Modal","CartOverlay","fetchCategories","connect","setCurrencies","setProductCards","App","Component","constructor","props","renderProductCards","result","productCardsItem","data","categories","console","log","err","getCartFromLSn","localStorage","getItem","JSON","parse","onSelectCategories","index","setState","activeCategory","getCurrencies","currenciesList","state","products","prices","onSelectCurrencies","currencies","activeCurrency","selectedCurrency","currency","symbol","openPopup","onOpenPopup","onSelectAttribute","attribute","el","activeAttributeIndex","activeAttribute","activeAttributeItem","items","onAddToCart","product","cartList","newProduct","isInCart","inStock","attributes","brand","gallery","id","name","count","forEach","setItem","stringify","arr","length","deleteCartItem","findIndex","x","splice","countIncrease","newProductChanged","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","productCards","total","totalPrice","totalCount","componentDidMount","render","reduce","prev","curr","amount","toFixed","getCartFromLS","mapStateToProps","mapDispatchToProps"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\n\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\n\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { connect } from \"react-redux\";\n\nimport { setCurrencies } from \"./redux/currencies/slice\";\nimport { setProductCards} from \"./redux/categories/slice\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderProductCards],\n      activeCategory: 0,\n      products: [this.renderProductCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies()\n  }\n\n  renderProductCards = async () => {\n    try {\n      const result = await fetchCategories();\n      const productCardsItem = result.data.categories;\n      console.log(productCardsItem)\n      this.props.setProductCards(productCardsItem)\n\n      // this.setState({\n      //   productCards: productCardsItem,\n      // });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if(prevProps.productCards !== this.props.productCards) {\n  //     this.renderProductCards();\n  //   }\n  // }\n\n  getCartFromLSn = () => {\n    const data = localStorage.getItem(\"cart\");\n    return data ? JSON.parse(data) : [];\n  };\n\n  onSelectCategories = (index) => {\n    this.setState({\n      activeCategory: index,\n    });\n  };\n  //\n  getCurrencies = async () => {\n    try {\n      const result = await fetchCategories();\n      const currenciesList =\n        result.data.categories[this.state.activeCategory].products[0].prices;\n      this.props.setCurrencies(currenciesList);\n      console.log(currenciesList)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  onSelectCurrencies = (index) => {\n    const { currencies } = this.props;\n    this.setState({\n      activeCurrency: index,\n      selectedCurrency: currencies[index].currency.symbol,\n      openPopup: false,\n    });\n  };\n\n  onOpenPopup = () => {\n    this.setState({ openPopup: !this.state.openPopup });\n  };\n\n  onSelectAttribute = (attribute, el, index) => {\n    this.setState({\n      activeAttributeIndex: index,\n      activeAttribute: attribute,\n      activeAttributeItem: attribute.items[index],\n    });\n  };\n\n  onAddToCart = (product) => {\n    const {\n      cartList,\n      activeAttribute,\n      activeAttributeItem,\n      activeAttributeIndex,\n    } = this.state;\n    let newProduct;\n\n    if (!product.isInCart && product.inStock) {\n      newProduct = {\n        attributes: product.attributes,\n        activeAttribute: activeAttribute,\n        activeAttributeItem: activeAttributeItem,\n        activeAttributeIndex: activeAttributeIndex,\n        brand: product.brand,\n        prices: product.prices,\n        gallery: product.gallery,\n        id: product.id,\n        inStock: product.inStock,\n        name: product.name,\n        count: 1,\n        isInCart: false,\n      };\n    }\n\n    cartList.forEach((el) => {\n      if (el.id === newProduct.id) {\n        newProduct.isInCart = true;\n      }\n    });\n\n    if (!newProduct.isInCart && newProduct.inStock) {\n      newProduct.isInCart = true;\n      localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n      this.setState({\n        cartList: JSON.parse(localStorage.getItem(\"cart\")),\n      });\n    } else if (newProduct.isInCart) {\n      cartList.forEach((el, index, arr) => {\n        if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n          localStorage.setItem(\n            \"cart\",\n            JSON.stringify([...cartList, newProduct])\n          );\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          });\n        } else if (\n          el.activeAttributeItem.id === newProduct.activeAttributeItem.id\n        ) {\n          this.setState({\n            count: ++newProduct.count,\n          });\n          newProduct = { ...newProduct, count: ++el.count };\n          localStorage.setItem(\"cart\", JSON.stringify(cartList));\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          });\n          arr.length = index + 1;\n        }\n      });\n    }\n  };\n\n  deleteCartItem = (product, id) => {\n    const { cartList } = this.state;\n    const index = cartList.findIndex(\n      (x) =>\n        x.id === id &&\n        x.activeAttributeItem.id === product.activeAttributeItem.id\n    );\n    cartList.splice(index, 1);\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countIncrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count: ++product.count,\n      });\n    }\n\n    let newProductChanged = { ...product, count: ++this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countDecrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count:\n          product.count - 1 > 0\n            ? --product.count\n            : this.deleteCartItem(product, id),\n      });\n    }\n\n    let newProductChanged = { ...product, count: --this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  toggleModal = () => {\n    this.setState({\n      modalShow: !this.state.modalShow,\n    });\n  };\n\n  onHidePopup = () => {\n    document.body.style.overflow = \"\";\n    this.setState({\n      modalShow: false,\n    });\n  };\n\n  render() {\n\n    console.log(this.props.productCards)\n    console.log(this.props.currencies)\n\n\n\n\n    const totalPrice = this.state.cartList\n      .reduce((prev, curr) => {\n        return (\n          prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        );\n      }, 0)\n      .toFixed(2);\n\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex,\n    } = this.state;\n\n    // const{productCards} = this.props\n\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart,\n    } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          totalCount,\n          modalShow,\n          totalPrice,\n          productCards,\n          activeCurrency,\n          currencies,\n          openPopup,\n          activeAttributeIndex,\n          cartList,\n          count,\n          activeCategory,\n          selectedCurrency,\n          total,\n          activeAttributeItem,\n          activeAttribute,\n          deleteCartItem,\n          countIncrease,\n          countDecrease,\n          onHidePopup,\n          onSelectAttribute,\n          getCartFromLS,\n          onSelectCategories,\n          onOpenPopup,\n          onSelectCurrencies,\n          toggleModal,\n          onAddToCart,\n        }}\n      >\n        <div>\n          <Header onOpenPopup={this.onOpenPopup} />\n          <Routes>\n            <Route path=\"/\" element={<Category />} />\n            <Route\n              path=\"/cart\"\n              element={\n                <Cart\n                  activeCurrency={this.state.activeCurrency}\n                  cartList={this.state.cartList}\n                />\n              }\n            />\n            <Route\n              path=\"/:cardId\"\n              element={<PDP activeCurrency={this.state.activeCurrency} />}\n            />\n          </Routes>\n          <Modal\n            className={\n              modalShow\n                ? (document.body.style.overflow = \"hidden\")\n                : (document.body.style.overflow = \"\")\n            }\n            close={toggleModal}\n            shown={modalShow}\n          >\n            <CartOverlay />\n          </Modal>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\n// export default App;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies.currencies,\n  productCards: state.categories.productCards,\n  // activeCurrency: state.currencies.activeCurrency,\n  // selectedCurrency: state.currencies.selectedCurrency,\n  // openPopup: state.currencies.openPopup,\n});\n\nconst mapDispatchToProps = { fetchCategories, setCurrencies, setProductCards };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}