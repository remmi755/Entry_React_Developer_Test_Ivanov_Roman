{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { CategoryAll, Header } from \"./components\";\nimport Cart from \"./components/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport categories from \"./components/Categories\"; // import React from \"@types/react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        }); // const press = result.data.categories[0].products[0].prices[1].amount\n\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories // press: press\n\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    this.clickOnButton = () => {\n      alert(123);\n    };\n\n    this.state = {\n      productCards: [this.renderCards],\n      activeItem: 0 // press: [this.renderCards],\n      // // prices: [this.renderPrices]\n      // prices: this.renderPrices\n\n    };\n  }\n\n  // renderPrices = async () => {\n  //     try {\n  //         const result = await apolloClient\n  //         .query({\n  //             query: gql`\n  //                 query Product {\n  //                     category {\n  //                         name\n  //                         products {\n  //                             id\n  //                             name\n  //                             prices {\n  //                                 amount\n  //                                 currency {\n  //                                     label\n  //                                     symbol\n  //                                 }\n  //                             }\n  //                         }\n  //                     }\n  //                 }\n  //             `\n  //         });\n  //\n  //         const prices = result.data.category.products[0].prices[0].amount;\n  //\n  //         this.setState({\n  //             prices: prices\n  //\n  //         });\n  //\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  //     ;\n  // }\n  componentDidMount() {\n    this.renderCards(); // this.renderPrices()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.productCards !== this.state.productCards) {\n      console.log(this.state); // this.setState({\n      //     productCards: this.categories[2]\n      // });\n      // this.renderCards2()\n    }\n  }\n\n  render() {\n    console.log(this.state.productCards[0].products); // console.log(this.state.prices)\n    // console.log(this.state.press)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My first Apollo app \\uD83D\\uDE80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        onClick: this.clickOnButton,\n        productCard: this.state.productCards,\n        activeItem: this.state.activeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(CategoryAll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 46\n          }, this),\n          productCard: this.state.productCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            onClick: this.clickOnButton,\n            productCard: this.state.productCards,\n            activeItem: this.state.activeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","CategoryAll","Header","Cart","apolloClient","gql","categories","App","Component","constructor","props","renderCards","result","query","data","setState","productCards","err","console","log","clickOnButton","alert","state","activeItem","componentDidMount","componentDidUpdate","prevProps","prevState","render","products"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes} from \"react-router-dom\";\nimport {CategoryAll, Header} from \"./components\"\nimport Cart from \"./components/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\nimport categories from \"./components/Categories\";\n\n// import React from \"@types/react\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productCards: [this.renderCards],\n            activeItem: 0,\n            // press: [this.renderCards],\n            // // prices: [this.renderPrices]\n            // prices: this.renderPrices\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            // const press = result.data.categories[0].products[0].prices[1].amount\n            const categories = result.data.categories;\n\n            this.setState({\n                productCards: categories,\n                // press: press\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n        ;\n    }\n\n    // renderPrices = async () => {\n    //     try {\n    //         const result = await apolloClient\n    //         .query({\n    //             query: gql`\n    //                 query Product {\n    //                     category {\n    //                         name\n    //                         products {\n    //                             id\n    //                             name\n    //                             prices {\n    //                                 amount\n    //                                 currency {\n    //                                     label\n    //                                     symbol\n    //                                 }\n    //                             }\n    //                         }\n    //                     }\n    //                 }\n    //             `\n    //         });\n    //\n    //         const prices = result.data.category.products[0].prices[0].amount;\n    //\n    //         this.setState({\n    //             prices: prices\n    //\n    //         });\n    //\n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    //     ;\n    // }\n\n    componentDidMount() {\n        this.renderCards();\n        // this.renderPrices()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.productCards !== this.state.productCards) {\n            console.log(this.state)\n            // this.setState({\n            //     productCards: this.categories[2]\n            // });\n            // this.renderCards2()\n        }\n    }\n\n    clickOnButton = () => {\n        alert(123)\n    }\n\n    render() {\n        console.log(this.state.productCards[0].products)\n        // console.log(this.state.prices)\n        // console.log(this.state.press)\n        return (\n            <div>\n                <h2>My first Apollo app 🚀</h2>\n                <Header onClick={this.clickOnButton}\n                        productCard={this.state.productCards}\n                        activeItem={this.state.activeItem}\n                />\n                <Routes>\n                    <Route path=\"/\" element={<CategoryAll/>}\n                           productCard={this.state.productCards}\n                    />\n                    <Route path=\"cart\" element={<Cart onClick={this.clickOnButton}\n                                                      productCard={this.state.productCards}\n                                                      activeItem={this.state.activeItem}\n                    />}/>\n                </Routes>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}