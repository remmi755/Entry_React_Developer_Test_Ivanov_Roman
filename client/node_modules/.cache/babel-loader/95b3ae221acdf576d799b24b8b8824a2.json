{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Cart.js\";\nimport React from \"react\";\nimport styles from \"./Cart.module.css\";\nimport GroupOrder from \"./GroupOrder\";\nimport Header from \"./Header\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.countIncrease = (product, id) => {\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        deleteCartItem\n      } = this.props;\n\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : deleteCartItem(id)\n        });\n      }\n    };\n\n    this.state = {\n      // count: 1,\n      cart: [] // total:{\n      //     totalPrice: (this.props.cartList.reduce((prev, curr) => {\n      //         return prev + curr.prices[this.props.activeCurrency].amount * curr.count\n      //     }, 0)).toFixed(2),\n      //     totalCount: this.props.cartList.reduce((prev, curr) => {\n      //         return prev + curr.count\n      //     }, 0)\n      // }\n\n    };\n  } // componentDidUpdate(prevProps, prevState) {\n  //     if (prevState.count !== this.state.count ||\n  //     prevProps.activeCurrency !== this.props.activeCurrency) {\n  //         console.log(this.props.cartList)\n  //         this.setState({\n  //             total:{\n  //                 totalPrice: (this.props.cartList.reduce((prev, curr) => {\n  //                     return prev + curr.prices[this.props.activeCurrency].amount * curr.count\n  //                 }, 0)).toFixed(2),\n  //                 totalCount: this.props.cartList.reduce((prev, curr) => {\n  //                     return prev + curr.count\n  //                 }, 0)\n  //             }\n  //         })\n  //     }\n  // }\n\n\n  render() {\n    // console.log(this.props.cartList)\n    const {\n      cartList,\n      count,\n      productCards,\n      activeCurrency\n    } = this.props; // const symbol = productCards[0].products[0].prices[activeCurrency].currency.symbol\n    //  const {count} = this.state\n\n    console.log(count);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), cartList && cartList.map((orderItem, id) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.content,\n        children: /*#__PURE__*/_jsxDEV(CartItem, {\n          orderItem: orderItem,\n          count: count,\n          id: orderItem.id,\n          countIncrease: this.countIncrease,\n          countDecrease: this.countDecrease,\n          activeCurrency: this.props.activeCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.groupOrder,\n        children: /*#__PURE__*/_jsxDEV(GroupOrder, {\n          total: this.state.total,\n          activeCurrency: this.props.activeCurrency,\n          selectedCurrency: this.props.selectedCurrency,\n          total: this.props.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"names":["React","styles","GroupOrder","Header","CartItem","Cart","Component","constructor","props","countIncrease","product","id","setState","count","countDecrease","deleteCartItem","state","cart","render","cartList","productCards","activeCurrency","console","log","container","title","map","orderItem","content","groupOrder","total","selectedCurrency"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Cart.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Cart.module.css\"\r\nimport GroupOrder from \"./GroupOrder\";\r\nimport Header from \"./Header\";\r\nimport CartItem from \"./CartItem\"\r\n\r\nclass Cart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // count: 1,\r\n            cart : [],\r\n            // total:{\r\n            //     totalPrice: (this.props.cartList.reduce((prev, curr) => {\r\n            //         return prev + curr.prices[this.props.activeCurrency].amount * curr.count\r\n            //     }, 0)).toFixed(2),\r\n            //     totalCount: this.props.cartList.reduce((prev, curr) => {\r\n            //         return prev + curr.count\r\n            //     }, 0)\r\n            // }\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if (prevState.count !== this.state.count ||\r\n    //     prevProps.activeCurrency !== this.props.activeCurrency) {\r\n    //         console.log(this.props.cartList)\r\n    //         this.setState({\r\n    //             total:{\r\n    //                 totalPrice: (this.props.cartList.reduce((prev, curr) => {\r\n    //                     return prev + curr.prices[this.props.activeCurrency].amount * curr.count\r\n    //                 }, 0)).toFixed(2),\r\n    //                 totalCount: this.props.cartList.reduce((prev, curr) => {\r\n    //                     return prev + curr.count\r\n    //                 }, 0)\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n\r\n    countIncrease = (product, id) => {\r\n        if(product.id === id) {\r\n            this.setState({\r\n                count: ++product.count\r\n            })\r\n        }\r\n    }\r\n\r\n    countDecrease = (product, id) => {\r\n        const {deleteCartItem} = this.props;\r\n\r\n        if (product.id === id) {\r\n            this.setState({\r\n                count: product.count - 1 > 0 ? --product.count : deleteCartItem(id),\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.cartList)\r\n        const {cartList, count,productCards, activeCurrency} = this.props\r\n       // const symbol = productCards[0].products[0].prices[activeCurrency].currency.symbol\r\n       //  const {count} = this.state\r\n\r\nconsole.log(count)\r\n\r\n        return (\r\n            <main className={styles.container}>\r\n                <h1 className={styles.title}>Cart</h1>\r\n                {cartList &&\r\n                    cartList.map((orderItem, id) => (\r\n                        <section className={styles.content} key={id}>\r\n                            <CartItem\r\n                                orderItem={orderItem}\r\n                                count={count}\r\n                                id={orderItem.id}\r\n                                countIncrease={this.countIncrease}\r\n                                countDecrease={this.countDecrease}\r\n                                activeCurrency={this.props.activeCurrency}\r\n\r\n                            />\r\n                        </section>\r\n                    ))\r\n                }\r\n                <div className={styles.groupOrder}>\r\n                    <GroupOrder total={this.state.total}\r\n                                activeCurrency={this.props.activeCurrency}\r\n                                selectedCurrency={this.props.selectedCurrency}\r\n                                total={this.props.total}\r\n\r\n                    />\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;EAC/BC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAkCnBC,aAlCmB,GAkCH,CAACC,OAAD,EAAUC,EAAV,KAAiB;MAC7B,IAAGD,OAAO,CAACC,EAAR,KAAeA,EAAlB,EAAsB;QAClB,KAAKC,QAAL,CAAc;UACVC,KAAK,EAAE,EAAEH,OAAO,CAACG;QADP,CAAd;MAGH;IACJ,CAxCkB;;IAAA,KA0CnBC,aA1CmB,GA0CH,CAACJ,OAAD,EAAUC,EAAV,KAAiB;MAC7B,MAAM;QAACI;MAAD,IAAmB,KAAKP,KAA9B;;MAEA,IAAIE,OAAO,CAACC,EAAR,KAAeA,EAAnB,EAAuB;QACnB,KAAKC,QAAL,CAAc;UACVC,KAAK,EAAEH,OAAO,CAACG,KAAR,GAAgB,CAAhB,GAAoB,CAApB,GAAwB,EAAEH,OAAO,CAACG,KAAlC,GAA0CE,cAAc,CAACJ,EAAD;QADrD,CAAd;MAGH;IACJ,CAlDkB;;IAEf,KAAKK,KAAL,GAAa;MACT;MACAC,IAAI,EAAG,EAFE,CAGT;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAVS,CAAb;EAYH,CAf8B,CAiB/B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAqBAC,MAAM,GAAG;IACL;IACA,MAAM;MAACC,QAAD;MAAWN,KAAX;MAAiBO,YAAjB;MAA+BC;IAA/B,IAAiD,KAAKb,KAA5D,CAFK,CAGN;IACA;;IAEPc,OAAO,CAACC,GAAR,CAAYV,KAAZ;IAEQ,oBACI;MAAM,SAAS,EAAEZ,MAAM,CAACuB,SAAxB;MAAA,wBACI;QAAI,SAAS,EAAEvB,MAAM,CAACwB,KAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKN,QAAQ,IACLA,QAAQ,CAACO,GAAT,CAAa,CAACC,SAAD,EAAYhB,EAAZ,kBACT;QAAS,SAAS,EAAEV,MAAM,CAAC2B,OAA3B;QAAA,uBACI,QAAC,QAAD;UACI,SAAS,EAAED,SADf;UAEI,KAAK,EAAEd,KAFX;UAGI,EAAE,EAAEc,SAAS,CAAChB,EAHlB;UAII,aAAa,EAAE,KAAKF,aAJxB;UAKI,aAAa,EAAE,KAAKK,aALxB;UAMI,cAAc,EAAE,KAAKN,KAAL,CAAWa;QAN/B;UAAA;UAAA;UAAA;QAAA;MADJ,GAAyCV,EAAzC;QAAA;QAAA;QAAA;MAAA,QADJ,CAHR,eAiBI;QAAK,SAAS,EAAEV,MAAM,CAAC4B,UAAvB;QAAA,uBACI,QAAC,UAAD;UAAY,KAAK,EAAE,KAAKb,KAAL,CAAWc,KAA9B;UACY,cAAc,EAAE,KAAKtB,KAAL,CAAWa,cADvC;UAEY,gBAAgB,EAAE,KAAKb,KAAL,CAAWuB,gBAFzC;UAGY,KAAK,EAAE,KAAKvB,KAAL,CAAWsB;QAH9B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA4BH;;AAzF8B;;AA4FnC,eAAezB,IAAf"},"metadata":{},"sourceType":"module"}