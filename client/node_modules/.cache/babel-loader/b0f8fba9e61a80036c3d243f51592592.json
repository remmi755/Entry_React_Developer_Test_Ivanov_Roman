{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchProductItem } from \"../fetchProduct\";\nexport const fetchProduct = createAsyncThunk(\"currencies/fetchByStatus\", async () => {\n  const {\n    data\n  } = await fetchProductItem();\n  return data.categories;\n});\nconst initialState = {\n  status: \"loading\",\n  productCards: [fetchProduct]\n};\nexport const pdpSlice = createSlice({\n  name: \"pdp\",\n  initialState,\n  reducers: {\n    setProductCards: (state, action) => {\n      state.productCards = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProductCards.pending, state => {\n      console.log(\"Идет отправка\");\n      state.status = 'loading'; // state.productCards = []\n    });\n    builder.addCase(fetchProductCards.fulfilled, (state, action) => {\n      console.log(\"Получение\");\n      state.productCards = action.payload;\n      state.status = 'success';\n    });\n    builder.addCase(fetchProductCards.rejected, state => {\n      state.status = 'error';\n      state.productCards = [];\n    });\n  }\n});\nexport const {\n  setProductCards\n} = pdpSlice.actions;\nexport default pdpSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchProductItem","fetchProduct","data","categories","initialState","status","productCards","pdpSlice","name","reducers","setProductCards","state","action","payload","extraReducers","builder","addCase","fetchProductCards","pending","console","log","fulfilled","rejected","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/pdp/slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchProductItem } from \"../fetchProduct\";\r\n\r\nexport const fetchProduct = createAsyncThunk(\r\n  \"currencies/fetchByStatus\",\r\n  async () => {\r\n    const { data } = await fetchProductItem();\r\n    return data.categories;\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  status: \"loading\",\r\n  productCards: [fetchProduct],\r\n};\r\n\r\nexport const pdpSlice = createSlice({\r\n  name: \"pdp\",\r\n  initialState,\r\n  reducers: {\r\n    setProductCards: (state, action) => {\r\n      state.productCards = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProductCards.pending, (state) => {\r\n      console.log(\"Идет отправка\")\r\n      state.status = 'loading'\r\n      // state.productCards = []\r\n    })\r\n    builder.addCase(fetchProductCards.fulfilled, (state, action) => {\r\n      console.log(\"Получение\")\r\n      state.productCards = action.payload\r\n      state.status = 'success'\r\n    })\r\n    builder.addCase(fetchProductCards.rejected, (state) => {\r\n      state.status = 'error'\r\n      state.productCards = []\r\n    })\r\n  },\r\n});\r\n\r\nexport const { setProductCards } = pdpSlice.actions;\r\n\r\nexport default pdpSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAO,MAAMC,YAAY,GAAGH,gBAAgB,CAC1C,0BAD0C,EAE1C,YAAY;EACV,MAAM;IAAEI;EAAF,IAAW,MAAMF,gBAAgB,EAAvC;EACA,OAAOE,IAAI,CAACC,UAAZ;AACD,CALyC,CAArC;AAQP,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,SADW;EAEnBC,YAAY,EAAE,CAACL,YAAD;AAFK,CAArB;AAKA,OAAO,MAAMM,QAAQ,GAAGR,WAAW,CAAC;EAClCS,IAAI,EAAE,KAD4B;EAElCJ,YAFkC;EAGlCK,QAAQ,EAAE;IACRC,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;IACD;EAHO,CAHwB;EAQlCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBC,iBAAiB,CAACC,OAAlC,EAA4CP,KAAD,IAAW;MACpDQ,OAAO,CAACC,GAAR,CAAY,eAAZ;MACAT,KAAK,CAACN,MAAN,GAAe,SAAf,CAFoD,CAGpD;IACD,CAJD;IAKAU,OAAO,CAACC,OAAR,CAAgBC,iBAAiB,CAACI,SAAlC,EAA6C,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAC9DO,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAT,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;MACAF,KAAK,CAACN,MAAN,GAAe,SAAf;IACD,CAJD;IAKAU,OAAO,CAACC,OAAR,CAAgBC,iBAAiB,CAACK,QAAlC,EAA6CX,KAAD,IAAW;MACrDA,KAAK,CAACN,MAAN,GAAe,OAAf;MACAM,KAAK,CAACL,YAAN,GAAqB,EAArB;IACD,CAHD;EAID;AAvBiC,CAAD,CAA5B;AA0BP,OAAO,MAAM;EAAEI;AAAF,IAAsBH,QAAQ,CAACgB,OAArC;AAEP,eAAehB,QAAQ,CAACiB,OAAxB"},"metadata":{},"sourceType":"module"}