{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { AppContext } from \"../../components/AppContext\";\nimport Actions from \"../../components/Actions\";\nimport { fetchCategories } from \"./fetchCategories\"; // const {currencies} = this.context\n\nconst initialState = {\n  activeCurrency: 0,\n  selectedCurrency: \"$\",\n  openPopup: false,\n  currencies: [],\n  status: \"loading\",\n  value: 0\n};\nexport const currenciesSlice = createSlice({\n  name: 'currencies',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({ ...action.payload,\n          count: 1\n        });\n      } // state.totalPrice = calcTotalPrice(state.items)\n\n    },\n    increment: state => {\n      state.value += 1;\n    },\n    setItems: (state, action) => {\n      state.currencies = action.payload;\n    },\n    onSelectCurrencies: (state, action) => {\n      // const {currencies} = this.context\n      state.activeCurrency = action.payload;\n      state.selectedCurrency = state.currencies[action.payload].currency.symbol;\n      state.openPopup = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.status = 'loading';\n      state.currencies = [];\n    });\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      state.currencies = action.payload;\n      state.status = 'success';\n    });\n    builder.addCase(fetchCategories.rejected, state => {\n      state.status = 'error';\n      state.currencies = [];\n    });\n  }\n});\ncurrenciesSlice.contextType = AppContext;\nexport const {\n  setItems,\n  onSelectCurrencies\n} = currenciesSlice.actions;\nexport default currenciesSlice.reducer;","map":{"version":3,"names":["createSlice","AppContext","Actions","fetchCategories","initialState","activeCurrency","selectedCurrency","openPopup","currencies","status","value","currenciesSlice","name","reducers","addItem","state","action","findItem","items","find","obj","id","payload","count","push","increment","setItems","onSelectCurrencies","currency","symbol","extraReducers","builder","addCase","pending","fulfilled","rejected","contextType","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/currencies/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppContext } from \"../../components/AppContext\";\r\nimport Actions from \"../../components/Actions\";\r\nimport { fetchCategories } from \"./fetchCategories\";\r\n// const {currencies} = this.context\r\nconst initialState = {\r\n  activeCurrency: 0,\r\n  selectedCurrency: \"$\",\r\n  openPopup: false,\r\n  currencies:[],\r\n  status: \"loading\",\r\n  value: 0\r\n}\r\n\r\nexport const currenciesSlice = createSlice({\r\n  name: 'currencies',\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id)\r\n      if (findItem) {\r\n        findItem.count++\r\n      } else {\r\n        state.items.push({\r\n          ...action.payload,\r\n          count: 1,\r\n        })\r\n      }\r\n\r\n      // state.totalPrice = calcTotalPrice(state.items)\r\n    },\r\n\r\n    increment: state => {\r\n      state.value += 1;\r\n    },\r\n\r\n    setItems: (state, action) => {\r\n      state.currencies = action.payload\r\n    },\r\n\r\n    onSelectCurrencies: (state, action) => {\r\n      // const {currencies} = this.context\r\n      state.activeCurrency = action.payload\r\n      state.selectedCurrency = state.currencies[action.payload].currency.symbol\r\n      state.openPopup = false\r\n    }\r\n\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCategories.pending, (state) => {\r\n      state.status = 'loading'\r\n      state.currencies = []\r\n    })\r\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n      state.currencies = action.payload\r\n      state.status = 'success'\r\n    })\r\n    builder.addCase(fetchCategories.rejected, (state) => {\r\n      state.status = 'error'\r\n      state.currencies = []\r\n    })\r\n  },\r\n})\r\n\r\ncurrenciesSlice.contextType = AppContext;\r\n\r\nexport const { setItems, onSelectCurrencies } = currenciesSlice.actions\r\n\r\nexport default currenciesSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CACA;;AACA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,CADG;EAEnBC,gBAAgB,EAAE,GAFC;EAGnBC,SAAS,EAAE,KAHQ;EAInBC,UAAU,EAAC,EAJQ;EAKnBC,MAAM,EAAE,SALW;EAMnBC,KAAK,EAAE;AANY,CAArB;AASA,OAAO,MAAMC,eAAe,GAAGX,WAAW,CAAC;EACzCY,IAAI,EAAE,YADmC;EAEzCR,YAFyC;EAGzCS,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACM,OAAP,CAAeD,EAApD,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACZA,QAAQ,CAACM,KAAT;MACD,CAFD,MAEO;QACLR,KAAK,CAACG,KAAN,CAAYM,IAAZ,CAAiB,EACf,GAAGR,MAAM,CAACM,OADK;UAEfC,KAAK,EAAE;QAFQ,CAAjB;MAID,CATyB,CAW1B;;IACD,CAbO;IAeRE,SAAS,EAAEV,KAAK,IAAI;MAClBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAjBO;IAmBRgB,QAAQ,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACM,OAA1B;IACD,CArBO;IAuBRK,kBAAkB,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MACrC;MACAD,KAAK,CAACV,cAAN,GAAuBW,MAAM,CAACM,OAA9B;MACAP,KAAK,CAACT,gBAAN,GAAyBS,KAAK,CAACP,UAAN,CAAiBQ,MAAM,CAACM,OAAxB,EAAiCM,QAAjC,CAA0CC,MAAnE;MACAd,KAAK,CAACR,SAAN,GAAkB,KAAlB;IACD;EA5BO,CAH+B;EAkCzCuB,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgB7B,eAAe,CAAC8B,OAAhC,EAA0ClB,KAAD,IAAW;MAClDA,KAAK,CAACN,MAAN,GAAe,SAAf;MACAM,KAAK,CAACP,UAAN,GAAmB,EAAnB;IACD,CAHD;IAIAuB,OAAO,CAACC,OAAR,CAAgB7B,eAAe,CAAC+B,SAAhC,EAA2C,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MAC5DD,KAAK,CAACP,UAAN,GAAmBQ,MAAM,CAACM,OAA1B;MACAP,KAAK,CAACN,MAAN,GAAe,SAAf;IACD,CAHD;IAIAsB,OAAO,CAACC,OAAR,CAAgB7B,eAAe,CAACgC,QAAhC,EAA2CpB,KAAD,IAAW;MACnDA,KAAK,CAACN,MAAN,GAAe,OAAf;MACAM,KAAK,CAACP,UAAN,GAAmB,EAAnB;IACD,CAHD;EAID;AA/CwC,CAAD,CAAnC;AAkDPG,eAAe,CAACyB,WAAhB,GAA8BnC,UAA9B;AAEA,OAAO,MAAM;EAAEyB,QAAF;EAAYC;AAAZ,IAAmChB,eAAe,CAAC0B,OAAzD;AAEP,eAAe1B,eAAe,CAAC2B,OAA/B"},"metadata":{},"sourceType":"module"}