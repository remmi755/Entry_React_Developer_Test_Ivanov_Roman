{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\CategoryAll.js\";\nimport React from \"react\";\nimport { gql } from '@apollo/client';\nimport styles from \"./CategoryAll.module.css\";\nimport ProductCard from \"../components/ProductCard\";\nimport { apolloClient } from \"./../index\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryAll extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                inStock\n                                gallery\n                                description\n                                category\n                                brand\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories[0]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    this.renderCards2 = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                inStock\n                                gallery\n                                description\n                                category\n                                brand\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        this.setState({\n          productCards: categories[1]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    this.handleClick = e => {\n      // this.componentDidMount()\n      // this.setState((state) =>{state.productCards: this.renderCards2 });\n      // console.log(this.categories[2])\n      console.log('target'); // this.renderCards2()\n\n      console.log(e.target.tagName);\n    };\n\n    this.press = () => {\n      let productCard2 = this.state.productCards[1];\n      this.setState({\n        productCards: productCard2\n      });\n    };\n\n    this.state = {\n      productCards: this.renderCards\n    };\n  }\n\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.productCards !== this.state.productCards) {\n      console.log('this state has changed.');\n      console.log(this.state.productCards); // this.setState({\n      //     productCards: this.categories[2]\n      // });\n      // this.renderCards2()\n    }\n  }\n\n  render() {\n    var _this$state$productCa;\n\n    console.log(this.state.productCards.name);\n    const res = this.state.productCards[0];\n    console.log(res); // const {name} = productCards[0]\n    // console.log(name)\n    // console.log(productCards[0])\n    // console.log(cards1)\n\n    const cards = (_this$state$productCa = this.state.productCards.products) === null || _this$state$productCa === void 0 ? void 0 : _this$state$productCa.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        productCard: this.state.productCards,\n        func: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: this.state.productCards.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.productCards,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid,\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CategoryAll; // class CategoryAll extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productCards: [],\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.renderCards()\n//     }\n//\n//     renderCards = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const cards = result.data.categories[0];\n//\n//             this.setState({\n//                 productCards: cards\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     render() {\n//         const cards = this.state.productCards.products?.map(product => (\n//             <ProductCard key={product.id} product={product}/>\n//         ))\n//\n//         return (\n//             <main className={styles.container}>\n//                 <Header />\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\n//                 <section className={styles.productCards}>\n//                     <div className={styles.grid}>\n//                         {cards}\n//                     </div>\n//                 </section>\n//             </main>\n//         )\n//     }\n// }","map":{"version":3,"names":["React","gql","styles","ProductCard","apolloClient","Header","CategoryAll","Component","constructor","props","renderCards","result","query","categories","data","setState","productCards","err","console","log","renderCards2","handleClick","e","target","tagName","press","productCard2","state","componentDidMount","componentDidUpdate","prevProps","prevState","render","name","res","cards","products","map","product","id","container","title","grid"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/CategoryAll.js"],"sourcesContent":["import React from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport styles from \"./CategoryAll.module.css\"\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport {apolloClient} from \"./../index\"\r\nimport Header from \"../components/Header\";\r\n\r\nclass CategoryAll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productCards: this.renderCards,\r\n        }\r\n    }\r\n\r\n    renderCards = async () => {\r\n        try {\r\n            const result = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Query {\r\n                        categories {\r\n                            name\r\n                            products {\r\n                                id\r\n                                name\r\n                                inStock\r\n                                gallery\r\n                                description\r\n                                category\r\n                                brand\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            });\r\n\r\n            const categories = result.data.categories;\r\n\r\n\r\n            this.setState({\r\n                productCards: categories[0]\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderCards();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.productCards !== this.state.productCards) {\r\n            console.log('this state has changed.')\r\n            console.log(this.state.productCards)\r\n            // this.setState({\r\n            //     productCards: this.categories[2]\r\n            // });\r\n           // this.renderCards2()\r\n        }\r\n    }\r\n\r\n    renderCards2 = async () => {\r\n        try {\r\n            const result = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Query {\r\n                        categories {\r\n                            name\r\n                            products {\r\n                                id\r\n                                name\r\n                                inStock\r\n                                gallery\r\n                                description\r\n                                category\r\n                                brand\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            });\r\n\r\n            const categories = result.data.categories;\r\n\r\n            this.setState({\r\n                productCards: categories[1]\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        ;\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        // this.componentDidMount()\r\n        // this.setState((state) =>{state.productCards: this.renderCards2 });\r\n        // console.log(this.categories[2])\r\n        console.log('target')\r\n        // this.renderCards2()\r\n        console.log(e.target.tagName)\r\n    }\r\n    press = () => {\r\n        let productCard2 = this.state.productCards[1];\r\n        this.setState({productCards: productCard2});\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.productCards.name)\r\nconst res = this.state.productCards[0]\r\n        console.log(res)\r\n\r\n        // const {name} = productCards[0]\r\n        // console.log(name)\r\n        // console.log(productCards[0])\r\n        // console.log(cards1)\r\n\r\n        const cards = this.state.productCards.products?.map(product => (\r\n            <ProductCard key={product.id} product={product}/>\r\n        ))\r\n\r\n        return (\r\n            <main className={styles.container}>\r\n                <Header productCard={this.state.productCards} func={this.handleClick}/>\r\n                <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n                <section className={styles.productCards}>\r\n                    <div className={styles.grid}>\r\n                        {cards}\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryAll;\r\n\r\n// class CategoryAll extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productCards: [],\r\n//         }\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.renderCards()\r\n//     }\r\n//\r\n//     renderCards = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const cards = result.data.categories[0];\r\n//\r\n//             this.setState({\r\n//                 productCards: cards\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     render() {\r\n//         const cards = this.state.productCards.products?.map(product => (\r\n//             <ProductCard key={product.id} product={product}/>\r\n//         ))\r\n//\r\n//         return (\r\n//             <main className={styles.container}>\r\n//                 <Header />\r\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <div className={styles.grid}>\r\n//                         {cards}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}