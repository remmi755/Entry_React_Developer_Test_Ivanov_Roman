{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { renderCards } from \"./redux/curriencies/fetchCurrencies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCartFromLSn = () => {\n      const data = localStorage.getItem(\"cart\");\n      return data ? JSON.parse(data) : [];\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeCategory: index\n      });\n    };\n\n    this.onSelectCurrencies = index => {\n      const {\n        currencies\n      } = this.state;\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onSelectAttribute = (attribute, el, index) => {\n      this.setState({\n        activeAttributeIndex: index,\n        activeAttribute: attribute,\n        activeAttributeItem: attribute.items[index]\n      });\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        activeAttribute,\n        activeAttributeItem,\n        activeAttributeIndex\n      } = this.state;\n      let newProduct;\n\n      if (!product.isInCart && product.inStock) {\n        newProduct = {\n          attributes: product.attributes,\n          activeAttribute: activeAttribute,\n          activeAttributeItem: activeAttributeItem,\n          activeAttributeIndex: activeAttributeIndex,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1,\n          isInCart: false\n        };\n      }\n\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          newProduct.isInCart = true;\n        }\n      });\n\n      if (!newProduct.isInCart && newProduct.inStock) {\n        newProduct.isInCart = true;\n        localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n        this.setState({\n          cartList: JSON.parse(localStorage.getItem(\"cart\"))\n        });\n      } else if (newProduct.isInCart) {\n        cartList.forEach((el, index, arr) => {\n          if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n            localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n          } else if (el.activeAttributeItem.id === newProduct.activeAttributeItem.id) {\n            this.setState({\n              count: ++newProduct.count\n            });\n            newProduct = { ...newProduct,\n              count: ++el.count\n            };\n            localStorage.setItem(\"cart\", JSON.stringify(cartList));\n            this.setState({\n              cartList: JSON.parse(localStorage.getItem(\"cart\"))\n            });\n            arr.length = index + 1;\n          }\n        });\n      }\n    };\n\n    this.deleteCartItem = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n      const index = cartList.findIndex(x => x.id === id && x.activeAttributeItem.id === product.activeAttributeItem.id);\n      cartList.splice(index, 1);\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countIncrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: ++this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        cartList\n      } = this.state;\n\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(product, id)\n        });\n      }\n\n      let newProductChanged = { ...product,\n        count: --this.state.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderCards],\n      activeCategory: 0,\n      products: [this.renderCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n    const {\n      result\n    } = renderCards();\n    console.log(result);\n  } // renderCards = async () => {\n  //   try {\n  //     const result = await apolloClient.query({\n  //       query: gql`\n  //           query Query {\n  //               categories {\n  //                   name\n  //                   products {\n  //                       id\n  //                       name\n  //                       category\n  //                       prices {\n  //                           currency {\n  //                               symbol\n  //                               label\n  //                           }\n  //                           amount\n  //                       }\n  //                       brand\n  //                       attributes {\n  //                           items {\n  //                               id\n  //                               value\n  //                               displayValue\n  //                           }\n  //                           id\n  //                           name\n  //                           type\n  //                       }\n  //                       inStock\n  //                       gallery\n  //                       description\n  //                   }\n  //               }\n  //           }\n  //       `\n  //     });\n  //     const categories = result.data.categories;\n  //     const currenciesList =\n  //       result.data.categories[this.state.activeCategory].products[0].prices;\n  //\n  //     this.setState({\n  //       productCards: categories,\n  //       currencies: currenciesList\n  //     });\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  render() {\n    const totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex\n    } = this.state;\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        modalShow,\n        totalPrice,\n        productCards,\n        activeCurrency,\n        currencies,\n        openPopup,\n        activeAttributeIndex,\n        cartList,\n        count,\n        activeCategory,\n        selectedCurrency,\n        total,\n        activeAttributeItem,\n        activeAttribute,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        getCartFromLS,\n        onSelectCategories,\n        onOpenPopup,\n        onSelectCurrencies,\n        toggleModal,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: this.onOpenPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              activeCurrency: this.state.activeCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","apolloClient","gql","PDP","AppContext","Modal","CartOverlay","renderCards","App","Component","constructor","props","getCartFromLSn","data","localStorage","getItem","JSON","parse","onSelectCategories","index","setState","activeCategory","onSelectCurrencies","currencies","state","activeCurrency","selectedCurrency","currency","symbol","openPopup","onOpenPopup","onSelectAttribute","attribute","el","activeAttributeIndex","activeAttribute","activeAttributeItem","items","onAddToCart","product","cartList","newProduct","isInCart","inStock","attributes","brand","prices","gallery","id","name","count","forEach","setItem","stringify","arr","length","deleteCartItem","findIndex","x","splice","countIncrease","newProductChanged","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","productCards","products","total","totalPrice","totalCount","result","console","log","componentDidMount","render","reduce","prev","curr","amount","toFixed","getCartFromLS"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\n\nimport {renderCards} from \"./redux/curriencies/fetchCurrencies\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderCards],\n      activeCategory: 0,\n      products: [this.renderCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: \"$\",\n      cartList: this.getCartFromLSn(),\n      activeAttributeItem: 0,\n      activeAttributeIndex: 0,\n      activeAttribute: \"\",\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n    const {result} = renderCards()\n    console.log(result)\n  }\n\n\n  // renderCards = async () => {\n  //   try {\n  //     const result = await apolloClient.query({\n  //       query: gql`\n  //           query Query {\n  //               categories {\n  //                   name\n  //                   products {\n  //                       id\n  //                       name\n  //                       category\n  //                       prices {\n  //                           currency {\n  //                               symbol\n  //                               label\n  //                           }\n  //                           amount\n  //                       }\n  //                       brand\n  //                       attributes {\n  //                           items {\n  //                               id\n  //                               value\n  //                               displayValue\n  //                           }\n  //                           id\n  //                           name\n  //                           type\n  //                       }\n  //                       inStock\n  //                       gallery\n  //                       description\n  //                   }\n  //               }\n  //           }\n  //       `\n  //     });\n  //     const categories = result.data.categories;\n  //     const currenciesList =\n  //       result.data.categories[this.state.activeCategory].products[0].prices;\n  //\n  //     this.setState({\n  //       productCards: categories,\n  //       currencies: currenciesList\n  //     });\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  componentDidMount() {\n    this.renderCards();\n  }\n\n  getCartFromLSn = () => {\n    const data = localStorage.getItem(\"cart\");\n    return data ? JSON.parse(data) : [];\n  };\n\n  onSelectCategories = (index) => {\n    this.setState({\n      activeCategory: index\n    });\n  };\n\n  onSelectCurrencies = (index) => {\n    const { currencies } = this.state;\n    this.setState({\n      activeCurrency: index,\n      selectedCurrency: currencies[index].currency.symbol,\n      openPopup: false\n    });\n  };\n\n  onOpenPopup = () => {\n    this.setState({ openPopup: !this.state.openPopup });\n  };\n\n  onSelectAttribute = (attribute, el, index) => {\n    this.setState({\n      activeAttributeIndex: index,\n      activeAttribute: attribute,\n      activeAttributeItem: attribute.items[index]\n    });\n  };\n\n  onAddToCart = (product) => {\n    const {\n      cartList,\n      activeAttribute,\n      activeAttributeItem,\n      activeAttributeIndex\n    } = this.state;\n    let newProduct;\n\n    if (!product.isInCart && product.inStock) {\n      newProduct = {\n        attributes: product.attributes,\n        activeAttribute: activeAttribute,\n        activeAttributeItem: activeAttributeItem,\n        activeAttributeIndex: activeAttributeIndex,\n        brand: product.brand,\n        prices: product.prices,\n        gallery: product.gallery,\n        id: product.id,\n        inStock: product.inStock,\n        name: product.name,\n        count: 1,\n        isInCart: false\n      };\n    }\n\n    cartList.forEach((el) => {\n      if (el.id === newProduct.id) {\n        newProduct.isInCart = true;\n      }\n    });\n\n    if (!newProduct.isInCart && newProduct.inStock) {\n      newProduct.isInCart = true;\n      localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n      this.setState({\n        cartList: JSON.parse(localStorage.getItem(\"cart\"))\n      });\n    } else if (newProduct.isInCart) {\n      cartList.forEach((el, index, arr) => {\n        if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n          localStorage.setItem(\n            \"cart\",\n            JSON.stringify([...cartList, newProduct])\n          );\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\"))\n          });\n        } else if (\n          el.activeAttributeItem.id === newProduct.activeAttributeItem.id\n        ) {\n          this.setState({\n            count: ++newProduct.count\n          });\n          newProduct = { ...newProduct, count: ++el.count };\n          localStorage.setItem(\"cart\", JSON.stringify(cartList));\n          this.setState({\n            cartList: JSON.parse(localStorage.getItem(\"cart\"))\n          });\n          arr.length = index + 1;\n        }\n      });\n    }\n  };\n\n  deleteCartItem = (product, id) => {\n    const { cartList } = this.state;\n    const index = cartList.findIndex(\n      (x) =>\n        x.id === id &&\n        x.activeAttributeItem.id === product.activeAttributeItem.id\n    );\n    cartList.splice(index, 1);\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countIncrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count: ++product.count\n      });\n    }\n\n    let newProductChanged = { ...product, count: ++this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countDecrease = (product, id) => {\n    const { cartList } = this.state;\n\n    if (product.id === id) {\n      this.setState({\n        count:\n          product.count - 1 > 0\n            ? --product.count\n            : this.deleteCartItem(product, id)\n      });\n    }\n\n    let newProductChanged = { ...product, count: --this.state.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  toggleModal = () => {\n    this.setState({\n      modalShow: !this.state.modalShow\n    });\n  };\n\n  onHidePopup = () => {\n    document.body.style.overflow = \"\";\n    this.setState({\n      modalShow: false\n    });\n  };\n\n  render() {\n    const totalPrice = this.state.cartList\n      .reduce((prev, curr) => {\n        return (\n          prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        );\n      }, 0)\n      .toFixed(2);\n\n    const totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeCategory,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute,\n      activeAttributeIndex\n    } = this.state;\n\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      getCartFromLS,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          totalCount,\n          modalShow,\n          totalPrice,\n          productCards,\n          activeCurrency,\n          currencies,\n          openPopup,\n          activeAttributeIndex,\n          cartList,\n          count,\n          activeCategory,\n          selectedCurrency,\n          total,\n          activeAttributeItem,\n          activeAttribute,\n          deleteCartItem,\n          countIncrease,\n          countDecrease,\n          onHidePopup,\n          onSelectAttribute,\n          getCartFromLS,\n          onSelectCategories,\n          onOpenPopup,\n          onSelectCurrencies,\n          toggleModal,\n          onAddToCart\n        }}\n      >\n        <div>\n          <Header onOpenPopup={this.onOpenPopup} />\n          <Routes>\n            <Route path=\"/\" element={<Category />} />\n            <Route\n              path=\"/cart\"\n              element={\n                <Cart\n                  activeCurrency={this.state.activeCurrency}\n                  cartList={this.state.cartList}\n                />\n              }\n            />\n            <Route\n              path=\"/:cardId\"\n              element={<PDP activeCurrency={this.state.activeCurrency} />}\n            />\n          </Routes>\n          <Modal\n            className={\n              modalShow\n                ? (document.body.style.overflow = \"hidden\")\n                : (document.body.style.overflow = \"\")\n            }\n            close={toggleModal}\n            shown={modalShow}\n          >\n            <CartOverlay />\n          </Modal>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}