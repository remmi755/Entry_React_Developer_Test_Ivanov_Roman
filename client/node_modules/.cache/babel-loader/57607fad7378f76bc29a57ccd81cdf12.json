{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport { Category, Header } from \"./components\";\nimport Cart from \"./components/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./components/Pdp\";\nimport styles from \"./App.css\"; // import {useParams} from \"react-router-dom\";\n// export function withRouter(Children) {\n//     return (props) => {\n//         const match = {params: useParams()};\n//         return <Children {...props} match={match}/>\n//     }\n// }\n// export const AppContext = React.createContext(\"\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        const currenciesList = result.data.categories[this.state.activeItem].products[0].prices;\n        this.setState({\n          productCards: categories,\n          currencies: currenciesList\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeItem: index\n      });\n    };\n\n    this.onSelectCurrencies = (index, e) => {\n      const {\n        currencies\n      } = this.state; // console.log(index)\n\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onAddToCart = product => {\n      console.log(product);\n      const {\n        cartList\n      } = this.state;\n      const newProduct = { ...product,\n        count: 1\n      };\n      let isInCart = false;\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          isInCart = true;\n          this.setState({\n            count: ++el.count\n          });\n        }\n      });\n      if (!isInCart) this.setState({\n        cartList: [...cartList, newProduct]\n      });\n    };\n\n    this.deleteCartItem = id => {\n      const {\n        cartList\n      } = this.state;\n      this.setState({\n        cartList: cartList.filter(el => el.id !== id)\n      });\n    };\n\n    this.countIncrease = (product, id) => {\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n    };\n\n    this.countDecrease = (product, id) => {\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id)\n        });\n      }\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      isInCart: false,\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderCards],\n      activeItem: 0,\n      products: [this.renderCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: '$',\n      cartList: [],\n      activeAttribute: 0,\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.renderCards(); // window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  render() {\n    let totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    let totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0); // let inCart = this.state.cartList.inCart\n    // console.log(inCart)\n    // let newArr = this.state.productCards.slice()\n    // console.log(newArr)\n    // console.log(this.state.cartList)\n    // let {activeItem}= this.state\n    // console.log(this.state.productCards[activeItem].products)\n    // console.log(this.props.match.params['cardId'].substring(1))\n    // console.log(this.state.productCards[0].products[0])\n\n    return (\n      /*#__PURE__*/\n      // <AppContext.Provider\n      //     value={this.onSelectCategories}\n      // >\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onSelectCategories: this.onSelectCategories,\n          onOpenPopup: this.onOpenPopup,\n          productCards: this.state.productCards,\n          activeItem: this.state.activeItem,\n          currencies: this.state.currencies,\n          totalCount: totalCount,\n          openPopup: this.state.openPopup,\n          activeCurrency: this.state.activeCurrency,\n          selectedCurrency: this.state.selectedCurrency,\n          onSelectCurrencies: this.onSelectCurrencies,\n          toggleModal: this.toggleModal,\n          useClickOutside: this.useClickOutside\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {\n              productCards: this.state.productCards,\n              activeItem: this.state.activeItem,\n              activeCurrency: this.state.activeCurrency,\n              totalCount: totalCount,\n              totalPrice: totalPrice,\n              cartList: this.state.cartList,\n              countIncrease: this.countIncrease,\n              countDecrease: this.countDecrease,\n              modalShow: this.state.modalShow,\n              onHidePopup: this.onHidePopup,\n              toggleModal: this.toggleModal,\n              isInCart: this.state.isInCart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              productCards: this.state.productCards,\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList,\n              count: this.state.count,\n              activeItem: this.state.activeItem,\n              deleteCartItem: this.deleteCartItem,\n              selectedCurrency: this.state.selectedCurrency,\n              total: this.state.total,\n              countIncrease: this.countIncrease,\n              countDecrease: this.countDecrease,\n              totalCount: totalCount,\n              totalPrice: totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              productCards: this.state.productCards,\n              activeItem: this.state.activeItem,\n              activeCurrency: this.state.activeCurrency,\n              activeAttribute: this.state.activeAttribute,\n              onAddToCart: this.onAddToCart,\n              onSelectAttributes: this.onSelectAttributes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this) // </AppContext.Provider>\n\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","useParams","Category","Header","Cart","apolloClient","gql","PDP","styles","App","Component","constructor","props","renderCards","result","query","categories","data","currenciesList","state","activeItem","products","prices","setState","productCards","currencies","err","console","log","onSelectCategories","index","onSelectCurrencies","e","activeCurrency","selectedCurrency","currency","symbol","openPopup","onOpenPopup","onAddToCart","product","cartList","newProduct","count","isInCart","forEach","el","id","deleteCartItem","filter","countIncrease","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","activeAttribute","total","totalPrice","totalCount","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","reduce","prev","curr","amount","toFixed","useClickOutside","onSelectAttributes"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes, useParams} from \"react-router-dom\";\nimport {Category, Header} from \"./components\"\nimport Cart from \"./components/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\nimport PDP from \"./components/Pdp\";\nimport styles from \"./App.css\"\n// import {useParams} from \"react-router-dom\";\n\n// export function withRouter(Children) {\n//     return (props) => {\n//         const match = {params: useParams()};\n//         return <Children {...props} match={match}/>\n//     }\n// }\n\n// export const AppContext = React.createContext(\"\");\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInCart: false,\n            modalShow: false,\n            count: 1,\n            productCards: [this.renderCards],\n            activeItem: 0,\n            products: [this.renderCards],\n            openPopup: false,\n            activeCurrency: 0,\n            selectedCurrency: '$',\n            cartList: [],\n            activeAttribute: 0,\n            total: {\n                totalPrice: 0,\n                totalCount: 0\n            }\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            const categories = result.data.categories;\n            const currenciesList = result.data.categories[this.state.activeItem].products[0].prices\n\n            this.setState({\n                productCards: categories,\n                currencies: currenciesList\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentDidMount() {\n        this.renderCards();\n        // window.scrollTo(0, 0);\n    }\n\n    onSelectCategories = index => {\n        this.setState({\n            activeItem: index,\n        })\n    }\n\n    onSelectCurrencies = (index, e) => {\n        const{currencies}= this.state\n        // console.log(index)\n        this.setState({\n            activeCurrency: index,\n            selectedCurrency: currencies[index].currency.symbol,\n            openPopup: false,\n        })\n    }\n\n    onOpenPopup = () => {\n        this.setState({openPopup: !this.state.openPopup})\n    }\n\n    onAddToCart = (product) => {\n        console.log(product)\n        const {cartList} = this.state\n        const newProduct = {...product, count: 1};\n        let isInCart = false;\n\n        cartList.forEach((el) => {\n            if (el.id === newProduct.id) {\n                isInCart = true;\n\n                this.setState({\n                    count: ++el.count,\n                })\n            }\n        })\n        if (!isInCart)\n            this.setState({\n                cartList: [...cartList, newProduct]\n            })\n    }\n\n    deleteCartItem = (id) => {\n        const {cartList} = this.state\n\n        this.setState({\n            cartList: cartList.filter(el => el.id !== id)\n        })\n    }\n\n    countIncrease = (product, id) => {\n        if(product.id === id) {\n            this.setState({\n                count: ++product.count\n            })\n        }\n    }\n\n    countDecrease = (product, id) => {\n        if (product.id === id) {\n            this.setState({\n                count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id),\n            })\n        }\n    }\n\n    toggleModal = () => {\n        this.setState({\n            modalShow: !this.state.modalShow\n        })\n}\n\n    onHidePopup = () => {\n        document.body.style.overflow = \"\";\n        this.setState({\n            modalShow: false\n        })\n    }\ncomponentDidUpdate(prevProps, prevState, snapshot) {\n}\n\n    render() {\n        let totalPrice = (this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        }, 0)).toFixed(2)\n\n        let totalCount = this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.count\n        }, 0)\n\n        // let inCart = this.state.cartList.inCart\n        // console.log(inCart)\n\n        // let newArr = this.state.productCards.slice()\n        // console.log(newArr)\n        // console.log(this.state.cartList)\n        // let {activeItem}= this.state\n        // console.log(this.state.productCards[activeItem].products)\n        // console.log(this.props.match.params['cardId'].substring(1))\n        // console.log(this.state.productCards[0].products[0])\n        return (\n            // <AppContext.Provider\n            //     value={this.onSelectCategories}\n            // >\n                <div>\n                    <Header\n                        onSelectCategories={this.onSelectCategories}\n                        onOpenPopup={this.onOpenPopup}\n                        productCards={this.state.productCards}\n                        activeItem={this.state.activeItem}\n                        currencies={this.state.currencies}\n                        totalCount={totalCount}\n                        openPopup={this.state.openPopup}\n                        activeCurrency={this.state.activeCurrency}\n                        selectedCurrency={this.state.selectedCurrency}\n                        onSelectCurrencies={this.onSelectCurrencies}\n                        toggleModal={this.toggleModal}\n                        useClickOutside={this.useClickOutside}\n\n                    />\n                    <Routes>\n                        <Route path=\"/\" element={<Category\n                            productCards={this.state.productCards}\n                            activeItem={this.state.activeItem}\n                            activeCurrency={this.state.activeCurrency}\n                            totalCount={totalCount}\n                            totalPrice={totalPrice}\n                            cartList={this.state.cartList}\n                            countIncrease={this.countIncrease}\n                            countDecrease={this.countDecrease}\n                            modalShow={this.state.modalShow}\n                            onHidePopup={this.onHidePopup}\n                            toggleModal={this.toggleModal}\n                            isInCart={this.state.isInCart}\n                        />}\n                        />\n                        <Route path=\"/cart\" element={<Cart\n                            productCards={this.state.productCards}\n                            activeCurrency={this.state.activeCurrency}\n                            cartList={this.state.cartList}\n                            count={this.state.count}\n                            activeItem={this.state.activeItem}\n                            deleteCartItem={this.deleteCartItem}\n                            selectedCurrency={this.state.selectedCurrency}\n                            total={this.state.total}\n                            countIncrease={this.countIncrease}\n                            countDecrease={this.countDecrease}\n                            totalCount={totalCount}\n                            totalPrice={totalPrice}\n                        />}\n                        />\n                        <Route path=\"/:cardId\" element={<PDP\n                            productCards={this.state.productCards}\n                            activeItem={this.state.activeItem}\n                            activeCurrency={this.state.activeCurrency}\n                            activeAttribute={this.state.activeAttribute}\n                            onAddToCart={this.onAddToCart}\n                            onSelectAttributes={this.onSelectAttributes}\n                        />}\n                        />\n                    </Routes>\n                </div>\n            // </AppContext.Provider>\n\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}