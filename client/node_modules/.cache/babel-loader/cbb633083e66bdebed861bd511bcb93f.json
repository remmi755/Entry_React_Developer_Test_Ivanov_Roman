{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { AppContext } from \"../../components/AppContext\";\nimport Actions from \"../../components/Actions\";\nconst initialState = {\n  activeCurrency: 0,\n  selectedCurrency: \"$\",\n  openPopup: false // currencies:\"\"\n\n};\nexport const currenciesSlice = createSlice({\n  name: 'currencies',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({ ...action.payload,\n          count: 1\n        });\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    onSelectCurrencies: (state, action) => {\n      const {\n        currencies\n      } = this.context;\n      state.activeCurrency = action.payload;\n      state.selectedCurrency = currencies[action.payload].currency.symbol;\n      state.openPopup = false;\n    }\n  }\n});\ncurrenciesSlice.contextType = AppContext;\nexport const {\n  addItem,\n  onSelectCurrencies\n} = currenciesSlice.actions;\nexport default currenciesSlice.reducer;","map":{"version":3,"names":["createSlice","AppContext","Actions","initialState","activeCurrency","selectedCurrency","openPopup","currenciesSlice","name","reducers","addItem","state","action","findItem","items","find","obj","id","payload","count","push","totalPrice","calcTotalPrice","onSelectCurrencies","currencies","context","currency","symbol","contextType","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/curriencies/slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { AppContext } from \"../../components/AppContext\";\r\nimport Actions from \"../../components/Actions\";\r\n\r\nconst initialState = {\r\n  activeCurrency: 0,\r\n  selectedCurrency: \"$\",\r\n  openPopup: false,\r\n  // currencies:\"\"\r\n}\r\n\r\nexport const currenciesSlice = createSlice({\r\n  name: 'currencies',\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id)\r\n      if (findItem) {\r\n        findItem.count++\r\n      } else {\r\n        state.items.push({\r\n          ...action.payload,\r\n          count: 1,\r\n        })\r\n      }\r\n\r\n      state.totalPrice = calcTotalPrice(state.items)\r\n    },\r\n    onSelectCurrencies: (state, action) => {\r\n      const {currencies} = this.context\r\n      state.activeCurrency = action.payload\r\n      state.selectedCurrency = currencies[action.payload].currency.symbol\r\n      state.openPopup = false\r\n    }\r\n\r\n  },\r\n})\r\n\r\ncurrenciesSlice.contextType = AppContext;\r\n\r\nexport const { addItem, onSelectCurrencies } = currenciesSlice.actions\r\n\r\nexport default currenciesSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,CADG;EAEnBC,gBAAgB,EAAE,GAFC;EAGnBC,SAAS,EAAE,KAHQ,CAInB;;AAJmB,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAGP,WAAW,CAAC;EACzCQ,IAAI,EAAE,YADmC;EAEzCL,YAFyC;EAGzCM,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACM,OAAP,CAAeD,EAApD,CAAjB;;MACA,IAAIJ,QAAJ,EAAc;QACZA,QAAQ,CAACM,KAAT;MACD,CAFD,MAEO;QACLR,KAAK,CAACG,KAAN,CAAYM,IAAZ,CAAiB,EACf,GAAGR,MAAM,CAACM,OADK;UAEfC,KAAK,EAAE;QAFQ,CAAjB;MAID;;MAEDR,KAAK,CAACU,UAAN,GAAmBC,cAAc,CAACX,KAAK,CAACG,KAAP,CAAjC;IACD,CAbO;IAcRS,kBAAkB,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MACrC,MAAM;QAACY;MAAD,IAAe,KAAKC,OAA1B;MACAd,KAAK,CAACP,cAAN,GAAuBQ,MAAM,CAACM,OAA9B;MACAP,KAAK,CAACN,gBAAN,GAAyBmB,UAAU,CAACZ,MAAM,CAACM,OAAR,CAAV,CAA2BQ,QAA3B,CAAoCC,MAA7D;MACAhB,KAAK,CAACL,SAAN,GAAkB,KAAlB;IACD;EAnBO;AAH+B,CAAD,CAAnC;AA2BPC,eAAe,CAACqB,WAAhB,GAA8B3B,UAA9B;AAEA,OAAO,MAAM;EAAES,OAAF;EAAWa;AAAX,IAAkChB,eAAe,CAACsB,OAAxD;AAEP,eAAetB,eAAe,CAACuB,OAA/B"},"metadata":{},"sourceType":"module"}