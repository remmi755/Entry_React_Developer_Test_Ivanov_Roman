{"ast":null,"code":"import { apolloClient } from \"../../index\";\nimport { gql } from \"@apollo/client\";\nexport const renderCards = async () => {\n  try {\n    const result = await apolloClient.query({\n      query: gql`\n          query Query {\n              categories {\n                  name\n                  products {\n                      id\n                      name\n                      category\n                      prices {\n                          currency {\n                              symbol\n                              label\n                          }\n                          amount\n                      }\n                      brand\n                      attributes {\n                          items {\n                              id\n                              value\n                              displayValue\n                          }\n                          id\n                          name\n                          type\n                      }\n                      inStock\n                      gallery\n                      description\n                  }\n              }\n          }\n      `\n    });\n    console.log(result.data); // const categories = result.data.categories;\n    // const currenciesList =\n    //   result.data.categories[this.state.activeCategory].products[0].prices;\n    // this.setState({\n    //   productCards: categories,\n    //   currencies: currenciesList\n    // });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["apolloClient","gql","renderCards","result","query","console","log","data","err"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/curriencies/fetchCurrencies.js"],"sourcesContent":["import { apolloClient } from \"../../index\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nexport const renderCards = async () => {\r\n  try {\r\n    const result = await apolloClient.query({\r\n      query: gql`\r\n          query Query {\r\n              categories {\r\n                  name\r\n                  products {\r\n                      id\r\n                      name\r\n                      category\r\n                      prices {\r\n                          currency {\r\n                              symbol\r\n                              label\r\n                          }\r\n                          amount\r\n                      }\r\n                      brand\r\n                      attributes {\r\n                          items {\r\n                              id\r\n                              value\r\n                              displayValue\r\n                          }\r\n                          id\r\n                          name\r\n                          type\r\n                      }\r\n                      inStock\r\n                      gallery\r\n                      description\r\n                  }\r\n              }\r\n          }\r\n      `\r\n    });\r\n    console.log(result.data)\r\n    // const categories = result.data.categories;\r\n    // const currenciesList =\r\n    //   result.data.categories[this.state.activeCategory].products[0].prices;\r\n\r\n    // this.setState({\r\n    //   productCards: categories,\r\n    //   currencies: currenciesList\r\n    // });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};"],"mappings":"AAAA,SAASA,YAAT,QAA6B,aAA7B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;EACrC,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMH,YAAY,CAACI,KAAb,CAAmB;MACtCA,KAAK,EAAEH,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAjC4C,CAAnB,CAArB;IAmCAI,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB,EApCE,CAqCF;IACA;IACA;IAEA;IACA;IACA;IACA;EACD,CA7CD,CA6CE,OAAOC,GAAP,EAAY;IACZH,OAAO,CAACC,GAAR,CAAYE,GAAZ;EACD;AACF,CAjDM"},"metadata":{},"sourceType":"module"}