{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { connect } from \"react-redux\";\nimport { onOpenPopup, setCurrencies } from \"./redux/currencies/slice\";\nimport { setProductCards, fetchProductCards } from \"./redux/categories/slice\";\nimport { countPlus, setCartList } from \"./redux/cartList/slice\";\nimport { setModalShow, toggleModal } from \"./redux/modal/slice\";\nimport { setActiveAttribute, setActiveAttributeIndex, setActiveAttributeItem } from \"./redux/attributes/slice\";\nimport { getCartFromLS } from \"./redux/cartList/getCartFromLs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderProductCards = async () => {\n      //     const result = await fetchCategories();\n      //     const productCards = result.data.categories;\n      //     console.log(productCards)\n      // this.props.setProductCards(productCards)\n      await this.props.fetchProductCards(); // this.setState({\n      //   productCards: productCards,\n      // });\n      // }\n    };\n\n    this.getCurrencies = async () => {\n      const {\n        activeCategory,\n        setCurrencies\n      } = this.props;\n      const result = await fetchCategories();\n      const currenciesList = result.data.categories[activeCategory].products[0].prices;\n      setCurrencies(currenciesList);\n    };\n\n    this.onSelectAttribute = (attribute, el, index) => {\n      const {\n        setActiveAttributeItem,\n        setActiveAttributeIndex,\n        setActiveAttribute\n      } = this.props;\n      return setActiveAttributeIndex(index), setActiveAttribute(attribute), setActiveAttributeItem(attribute.items[index]);\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        getCartList\n      } = this.props;\n      const {\n        activeAttribute,\n        activeAttributeItem,\n        activeAttributeIndex\n      } = this.state;\n      let newProduct;\n\n      if (!product.isInCart && product.inStock) {\n        newProduct = {\n          attributes: product.attributes,\n          activeAttribute: activeAttribute,\n          activeAttributeItem: activeAttributeItem,\n          activeAttributeIndex: activeAttributeIndex,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1,\n          isInCart: false\n        };\n      }\n\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          newProduct.isInCart = true;\n        }\n      });\n\n      if (!newProduct.isInCart && newProduct.inStock) {\n        newProduct.isInCart = true;\n        localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n        getCartList(JSON.parse(localStorage.getItem(\"cart\"))); // this.setState({\n        //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n        // });\n      } else if (newProduct.isInCart) {\n        cartList.forEach((el, index, arr) => {\n          if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n            localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n            getCartList(JSON.parse(localStorage.getItem(\"cart\"))); // this.setState({\n            //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n            // });\n          } else if (el.activeAttributeItem.id === newProduct.activeAttributeItem.id) {\n            this.setState({\n              count: ++newProduct.count\n            });\n            newProduct = { ...newProduct,\n              count: ++el.count\n            };\n            localStorage.setItem(\"cart\", JSON.stringify(cartList));\n            getCartList(JSON.parse(localStorage.getItem(\"cart\"))); // this.setState({\n            //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n            // });\n\n            arr.length = index + 1;\n          }\n        });\n      }\n    };\n\n    this.deleteCartItem = product => {\n      const {\n        cartList\n      } = this.props;\n      const cartListNew = cartList.filter(obj => obj !== product);\n      console.log(cartListNew);\n      console.log(\"OK\"); // const index = cartList.findIndex(\n      //   (x) =>\n      //     x.id === id &&\n      //     x.activeAttributeItem.id === product.activeAttributeItem.id\n      // );\n      // console.log(index)\n      // cartList.splice(index, 1);\n\n      localStorage.setItem(\"cart\", JSON.stringify(cartListNew));\n      getCartList(JSON.parse(localStorage.getItem(\"cart\")));\n    };\n\n    this.countIncrease = (product, id) => {\n      const {\n        getCartList\n      } = this.props;\n      const cartList = getCartFromLS();\n\n      if (product.id === id) {// countPlus(product.count);\n        // this.setState({\n        //   count: ++product.count,\n        // });\n      }\n\n      console.log(this.props.count);\n      let newProductChanged = { ...product,\n        count: product.count + 1\n      }; // console.log(newProductChanged);\n\n      cartList.forEach((el, index) => {\n        if (el.id === product.id) {\n          console.log(cartList[index].count); // console.log(newProductChanged)\n\n          product = newProductChanged;\n          cartList[index] = newProductChanged;\n          console.log(cartList[index].count); // console.log(product)\n          // console.log(el)\n        }\n      });\n      setCartList(cartList);\n      localStorage.setItem(\"cart\", JSON.stringify(cartList)); // localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.countDecrease = (product, id) => {\n      const {\n        cartList,\n        setCount\n      } = this.props;\n\n      if (product.id === id) {\n        setCount(product.count - 1 > 0 ? --product.count : this.deleteCartItem(product)); // this.setState({\n        //   count:\n        //     product.count - 1 > 0\n        //       ? --product.count\n        //       : this.deleteCartItem(product),\n        // });\n      }\n\n      let newProductChanged = { ...product,\n        count: --this.props.count\n      };\n      cartList.forEach(el => {\n        if (el.id === product.id) {\n          product = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cartList));\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.props.setModalShow(false);\n    };\n\n    this.state = {// activeAttributeItem: 0,\n      // activeAttributeIndex: 0,\n      // activeAttribute: \"\",\n      // total: {\n      //   totalPrice: 0,\n      //   totalCount: 0,\n      // },\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies();\n  }\n\n  render() {\n    // console.log(this.props.count)\n    const totalPrice = this.props.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.props.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    const totalCount = this.props.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n    const {\n      toggleModal,\n      modalShow\n    } = this.props;\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      onAddToCart\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        totalPrice,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.currencies.currencies,\n  productCards: state.categories.productCards,\n  activeCurrency: state.currencies.activeCurrency,\n  cartList: state.cartList.cartList,\n  activeCategory: state.categories.activeCategory,\n  modalShow: state.modal.modalShow,\n  count: state.cartList.count,\n  activeAttributeItem: state.attributes.activeAttributeItem,\n  activeAttributeIndex: state.attributes.activeAttributeIndex,\n  activeAttribute: state.attributes.activeAttribute\n});\n\nconst mapDispatchToProps = {\n  fetchCategories,\n  setCurrencies,\n  setProductCards,\n  setCartList,\n  onOpenPopup,\n  fetchProductCards,\n  toggleModal,\n  setModalShow,\n  countPlus,\n  setActiveAttributeItem,\n  setActiveAttributeIndex,\n  setActiveAttribute\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","PDP","AppContext","Modal","CartOverlay","fetchCategories","connect","onOpenPopup","setCurrencies","setProductCards","fetchProductCards","countPlus","setCartList","setModalShow","toggleModal","setActiveAttribute","setActiveAttributeIndex","setActiveAttributeItem","getCartFromLS","App","Component","constructor","props","renderProductCards","getCurrencies","activeCategory","result","currenciesList","data","categories","products","prices","onSelectAttribute","attribute","el","index","items","onAddToCart","product","cartList","getCartList","activeAttribute","activeAttributeItem","activeAttributeIndex","state","newProduct","isInCart","inStock","attributes","brand","gallery","id","name","count","forEach","localStorage","setItem","JSON","stringify","parse","getItem","arr","setState","length","deleteCartItem","cartListNew","filter","obj","console","log","countIncrease","newProductChanged","countDecrease","setCount","onHidePopup","document","body","style","overflow","componentDidMount","render","totalPrice","reduce","prev","curr","activeCurrency","amount","toFixed","totalCount","modalShow","mapStateToProps","currencies","productCards","modal","mapDispatchToProps"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport PDP from \"./pages/Pdp\";\n\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\n\nimport { fetchCategories } from \"./redux/fetchCategories\";\nimport { connect } from \"react-redux\";\nimport { onOpenPopup, setCurrencies } from \"./redux/currencies/slice\";\nimport { setProductCards, fetchProductCards } from \"./redux/categories/slice\";\nimport { countPlus, setCartList } from \"./redux/cartList/slice\";\nimport { setModalShow, toggleModal } from \"./redux/modal/slice\";\nimport {\n  setActiveAttribute,\n  setActiveAttributeIndex,\n  setActiveAttributeItem,\n} from \"./redux/attributes/slice\";\nimport { getCartFromLS } from \"./redux/cartList/getCartFromLs\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // activeAttributeItem: 0,\n      // activeAttributeIndex: 0,\n      // activeAttribute: \"\",\n      // total: {\n      //   totalPrice: 0,\n      //   totalCount: 0,\n      // },\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductCards();\n    this.getCurrencies();\n  }\n\n  renderProductCards = async () => {\n    //     const result = await fetchCategories();\n    //     const productCards = result.data.categories;\n    //     console.log(productCards)\n    // this.props.setProductCards(productCards)\n    await this.props.fetchProductCards();\n    // this.setState({\n    //   productCards: productCards,\n    // });\n    // }\n  };\n\n  // getProductCards = () => {\n  //   this.renderProductCards()\n  // }\n\n  getCurrencies = async () => {\n    const { activeCategory, setCurrencies } = this.props;\n    const result = await fetchCategories();\n    const currenciesList =\n      result.data.categories[activeCategory].products[0].prices;\n    setCurrencies(currenciesList);\n  };\n\n  onSelectAttribute = (attribute, el, index) => {\n    const {\n      setActiveAttributeItem,\n      setActiveAttributeIndex,\n      setActiveAttribute,\n    } = this.props;\n\n    return (\n      setActiveAttributeIndex(index),\n      setActiveAttribute(attribute),\n      setActiveAttributeItem(attribute.items[index])\n    );\n  };\n\n  onAddToCart = (product) => {\n    const { cartList, getCartList } = this.props;\n    const { activeAttribute, activeAttributeItem, activeAttributeIndex } =\n      this.state;\n    let newProduct;\n\n    if (!product.isInCart && product.inStock) {\n      newProduct = {\n        attributes: product.attributes,\n        activeAttribute: activeAttribute,\n        activeAttributeItem: activeAttributeItem,\n        activeAttributeIndex: activeAttributeIndex,\n        brand: product.brand,\n        prices: product.prices,\n        gallery: product.gallery,\n        id: product.id,\n        inStock: product.inStock,\n        name: product.name,\n        count: 1,\n        isInCart: false,\n      };\n    }\n\n    cartList.forEach((el) => {\n      if (el.id === newProduct.id) {\n        newProduct.isInCart = true;\n      }\n    });\n\n    if (!newProduct.isInCart && newProduct.inStock) {\n      newProduct.isInCart = true;\n      localStorage.setItem(\"cart\", JSON.stringify([...cartList, newProduct]));\n      getCartList(JSON.parse(localStorage.getItem(\"cart\")));\n      // this.setState({\n      //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n      // });\n    } else if (newProduct.isInCart) {\n      cartList.forEach((el, index, arr) => {\n        if (el.activeAttributeItem.id !== newProduct.activeAttributeItem.id) {\n          localStorage.setItem(\n            \"cart\",\n            JSON.stringify([...cartList, newProduct])\n          );\n          getCartList(JSON.parse(localStorage.getItem(\"cart\")));\n          // this.setState({\n          //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          // });\n        } else if (\n          el.activeAttributeItem.id === newProduct.activeAttributeItem.id\n        ) {\n          this.setState({\n            count: ++newProduct.count,\n          });\n          newProduct = { ...newProduct, count: ++el.count };\n          localStorage.setItem(\"cart\", JSON.stringify(cartList));\n          getCartList(JSON.parse(localStorage.getItem(\"cart\")));\n          // this.setState({\n          //   cartList: JSON.parse(localStorage.getItem(\"cart\")),\n          // });\n          arr.length = index + 1;\n        }\n      });\n    }\n  };\n\n  deleteCartItem = (product) => {\n    const { cartList } = this.props;\n\n    const cartListNew = cartList.filter((obj) => obj !== product);\n    console.log(cartListNew);\n    console.log(\"OK\");\n\n    // const index = cartList.findIndex(\n    //   (x) =>\n    //     x.id === id &&\n    //     x.activeAttributeItem.id === product.activeAttributeItem.id\n    // );\n    // console.log(index)\n\n    // cartList.splice(index, 1);\n    localStorage.setItem(\"cart\", JSON.stringify(cartListNew));\n    getCartList(JSON.parse(localStorage.getItem(\"cart\")));\n  };\n\n  countIncrease = (product, id) => {\n    const {getCartList} = this.props;\n   const cartList = getCartFromLS()\n\n    if (product.id === id) {\n      // countPlus(product.count);\n\n      // this.setState({\n      //   count: ++product.count,\n      // });\n    }\n    console.log(this.props.count);\n\n    let newProductChanged = { ...product, count: product.count + 1};\n\n    // console.log(newProductChanged);\n\n    cartList.forEach((el, index) => {\n      if (el.id === product.id) {\n        console.log(cartList[index].count)\n        // console.log(newProductChanged)\n        product = newProductChanged;\n        cartList[index] = newProductChanged;\n        console.log(cartList[index].count)\n        // console.log(product)\n        // console.log(el)\n      }\n    });\n    setCartList(cartList);\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n\n    // localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  countDecrease = (product, id) => {\n    const { cartList, setCount } = this.props;\n\n    if (product.id === id) {\n      setCount(\n        product.count - 1 > 0 ? --product.count : this.deleteCartItem(product)\n      );\n\n      // this.setState({\n      //   count:\n      //     product.count - 1 > 0\n      //       ? --product.count\n      //       : this.deleteCartItem(product),\n      // });\n    }\n\n    let newProductChanged = { ...product, count: --this.props.count };\n\n    cartList.forEach((el) => {\n      if (el.id === product.id) {\n        product = newProductChanged;\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cartList));\n  };\n\n  onHidePopup = () => {\n    document.body.style.overflow = \"\";\n    this.props.setModalShow(false);\n  };\n\n  render() {\n    // console.log(this.props.count)\n\n    const totalPrice = this.props.cartList\n      .reduce((prev, curr) => {\n        return (\n          prev + curr.prices[this.props.activeCurrency].amount * curr.count\n        );\n      }, 0)\n      .toFixed(2);\n\n    const totalCount = this.props.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0);\n\n    const { toggleModal, modalShow } = this.props;\n\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      onAddToCart,\n    } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          totalCount,\n          totalPrice,\n          deleteCartItem,\n          countIncrease,\n          countDecrease,\n          onHidePopup,\n          onSelectAttribute,\n          onAddToCart,\n        }}\n      >\n        <div>\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<Category />} />\n            <Route path=\"/cart\" element={<Cart />} />\n            <Route path=\"/:cardId\" element={<PDP />} />\n          </Routes>\n          <Modal\n            className={\n              modalShow\n                ? (document.body.style.overflow = \"hidden\")\n                : (document.body.style.overflow = \"\")\n            }\n            close={toggleModal}\n            shown={modalShow}\n          >\n            <CartOverlay />\n          </Modal>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies.currencies,\n  productCards: state.categories.productCards,\n  activeCurrency: state.currencies.activeCurrency,\n  cartList: state.cartList.cartList,\n  activeCategory: state.categories.activeCategory,\n  modalShow: state.modal.modalShow,\n  count: state.cartList.count,\n  activeAttributeItem: state.attributes.activeAttributeItem,\n  activeAttributeIndex: state.attributes.activeAttributeIndex,\n  activeAttribute: state.attributes.activeAttribute,\n});\nconst mapDispatchToProps = {\n  fetchCategories,\n  setCurrencies,\n  setProductCards,\n  setCartList,\n  onOpenPopup,\n  fetchProductCards,\n  toggleModal,\n  setModalShow,\n  countPlus,\n  setActiveAttributeItem,\n  setActiveAttributeIndex,\n  setActiveAttribute,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}