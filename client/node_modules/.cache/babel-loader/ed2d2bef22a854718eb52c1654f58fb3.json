{"ast":null,"code":"import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n/** TRACKS gql query to retreive all tracks */\n\n/** TRACKS query to retrieve all tracks */\n\nconst QUERYALL2 = gql`\n    query Query($productId: String!) {\n        categories {\n            name\n            products {\n                id\n                name\n                inStock\n                gallery\n                description\n                category\n                brand\n            }\n        }\n        category {\n            name\n        }\n        product(id: $productId) {\n            id\n            name\n            inStock\n            gallery\n            description\n            category\n            attributes {\n                id\n                name\n                type\n                items {\n                    displayValue\n                    value\n                    id\n                }\n            }\n            prices {\n                currency {\n                    label\n                    symbol\n                }\n                amount\n            }\n            brand\n        }\n        currencies {\n            label\n            symbol\n        }\n    }\n`;\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\n\nconst productId = \"jacket-canada-goosee\"; // const Cards = () => {\n//\n//     const { loading, error, data } = useQuery(QUERYALL2, {variables: {productId}});\n//\n//     if (loading) return 'Loading...';\n//     if (error) return `Error! ${error.message}`;\n// console.log(data)\n//     // return <div>{JSON.stringify(data)}</div>\n//\n//\n//     return (\n//         <div className={styles.grid}>\n//             {data?.categories[0].products?.map(product => (\n//                 <ProductCard key={product.id} product={product} category={category}/>\n//             ))}\n//     {/*//         <ProductCard key={productId} product={product} />*/}\n//     {/*               <CategoryAll />*/}\n//     // //         {/*<Headers name={this.name} category={this.category}/>*/}\n//         </div>\n//     )\n//\n// };\n// export default Cards;","map":{"version":3,"names":["React","useQuery","gql","QUERYALL2","productId"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/Cards.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\n\r\n/** TRACKS gql query to retreive all tracks */\r\n/** TRACKS query to retrieve all tracks */\r\n\r\nconst QUERYALL2 = gql`\r\n    query Query($productId: String!) {\r\n        categories {\r\n            name\r\n            products {\r\n                id\r\n                name\r\n                inStock\r\n                gallery\r\n                description\r\n                category\r\n                brand\r\n            }\r\n        }\r\n        category {\r\n            name\r\n        }\r\n        product(id: $productId) {\r\n            id\r\n            name\r\n            inStock\r\n            gallery\r\n            description\r\n            category\r\n            attributes {\r\n                id\r\n                name\r\n                type\r\n                items {\r\n                    displayValue\r\n                    value\r\n                    id\r\n                }\r\n            }\r\n            prices {\r\n                currency {\r\n                    label\r\n                    symbol\r\n                }\r\n                amount\r\n            }\r\n            brand\r\n        }\r\n        currencies {\r\n            label\r\n            symbol\r\n        }\r\n    }\r\n`;\r\n/**\r\n * Tracks Page is the Catstronauts home page.\r\n * We display a grid of tracks fetched with useQuery with the TRACKS query\r\n */\r\n\r\nconst productId = \"jacket-canada-goosee\"\r\n\r\n// const Cards = () => {\r\n//\r\n//     const { loading, error, data } = useQuery(QUERYALL2, {variables: {productId}});\r\n//\r\n//     if (loading) return 'Loading...';\r\n//     if (error) return `Error! ${error.message}`;\r\n// console.log(data)\r\n//     // return <div>{JSON.stringify(data)}</div>\r\n//\r\n//\r\n//     return (\r\n//         <div className={styles.grid}>\r\n//             {data?.categories[0].products?.map(product => (\r\n//                 <ProductCard key={product.id} product={product} category={category}/>\r\n//             ))}\r\n//     {/*//         <ProductCard key={productId} product={product} />*/}\r\n//     {/*               <CategoryAll />*/}\r\n\r\n//     // //         {/*<Headers name={this.name} category={this.category}/>*/}\r\n//         </div>\r\n//     )\r\n//\r\n// };\r\n\r\n// export default Cards;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAGA;;AACA;;AAEA,MAAMC,SAAS,GAAGD,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhDA;AAiDA;AACA;AACA;AACA;;AAEA,MAAME,SAAS,GAAG,sBAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}