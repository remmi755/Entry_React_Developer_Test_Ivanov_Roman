{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchCategories } from \"./fetchCategories\";\nconst fetchUserById = createAsyncThunk('users/fetchByIdStatus', async (userId, thunkAPI) => {\n  const response = await userAPI.fetchById(userId);\n  return response.data;\n});\nconst initialState = {\n  // activeCurrency: 0,\n  // selectedCurrency: \"$\",\n  // openPopup: false,\n  // activeCategory: 0,\n  currencies: []\n};\nexport const currenciesSlice = createSlice({\n  name: 'currencies',\n  initialState,\n  reducers: {\n    setItems: (state, action) => {\n      state.items = action.payload.items;\n    },\n    setCurrencies: (state, action) => {\n      state.currencies = action.payload;\n    }\n  } // extraReducers: (builder) => {\n  //   builder.addCase(fetchCategories.pending, (state) => {\n  //     state.status = 'loading'\n  //     state.currencies = []\n  //   })\n  //   builder.addCase(fetchCategories.fulfilled, (state, action) => {\n  //     state.currencies = action.payload\n  //     state.status = 'success'\n  //   })\n  //   builder.addCase(fetchCategories.rejected, (state) => {\n  //     state.status = 'error'\n  //     state.currencies = []\n  //   })\n  // },\n\n});\nexport const {\n  setCurrencies\n} = currenciesSlice.actions;\nexport default currenciesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchCategories","fetchUserById","userId","thunkAPI","response","userAPI","fetchById","data","initialState","currencies","currenciesSlice","name","reducers","setItems","state","action","items","payload","setCurrencies","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/currencies/slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchCategories } from \"./fetchCategories\";\r\n\r\nconst fetchUserById = createAsyncThunk(\r\n  'users/fetchByIdStatus',\r\n  async (userId, thunkAPI) => {\r\n    const response = await userAPI.fetchById(userId)\r\n    return response.data\r\n  }\r\n)\r\n\r\nconst initialState = {\r\n  // activeCurrency: 0,\r\n  // selectedCurrency: \"$\",\r\n  // openPopup: false,\r\n  // activeCategory: 0,\r\n\r\n currencies: []\r\n}\r\n\r\nexport const currenciesSlice = createSlice({\r\n  name: 'currencies',\r\n  initialState,\r\n  reducers: {\r\n    setItems: (state, action) => {\r\n      state.items = action.payload.items\r\n    },\r\n\r\n    setCurrencies: (state, action) => {\r\n      state.currencies = action.payload\r\n    }\r\n\r\n  },\r\n  // extraReducers: (builder) => {\r\n  //   builder.addCase(fetchCategories.pending, (state) => {\r\n  //     state.status = 'loading'\r\n  //     state.currencies = []\r\n  //   })\r\n  //   builder.addCase(fetchCategories.fulfilled, (state, action) => {\r\n  //     state.currencies = action.payload\r\n  //     state.status = 'success'\r\n  //   })\r\n  //   builder.addCase(fetchCategories.rejected, (state) => {\r\n  //     state.status = 'error'\r\n  //     state.currencies = []\r\n  //   })\r\n  // },\r\n})\r\n\r\n\r\nexport const { setCurrencies } = currenciesSlice.actions\r\n\r\nexport default currenciesSlice.reducer\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,aAAa,GAAGH,gBAAgB,CACpC,uBADoC,EAEpC,OAAOI,MAAP,EAAeC,QAAf,KAA4B;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,SAAR,CAAkBJ,MAAlB,CAAvB;EACA,OAAOE,QAAQ,CAACG,IAAhB;AACD,CALmC,CAAtC;AAQA,MAAMC,YAAY,GAAG;EACnB;EACA;EACA;EACA;EAEDC,UAAU,EAAE;AANQ,CAArB;AASA,OAAO,MAAMC,eAAe,GAAGX,WAAW,CAAC;EACzCY,IAAI,EAAE,YADmC;EAEzCH,YAFyC;EAGzCI,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC3BD,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAAP,CAAeD,KAA7B;IACD,CAHO;IAKRE,aAAa,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAChCD,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACE,OAA1B;IACD;EAPO,CAH+B,CAazC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AA1ByC,CAAD,CAAnC;AA8BP,OAAO,MAAM;EAAEC;AAAF,IAAoBR,eAAe,CAACS,OAA1C;AAEP,eAAeT,eAAe,CAACU,OAA/B"},"metadata":{},"sourceType":"module"}