{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"./getCartFromLs\";\nconst initialState = {\n  cartList: getCartFromLS(),\n  count: 1\n};\nexport const cartListSlice = createSlice({\n  name: \"cartList\",\n  initialState,\n  reducers: {\n    setCartList: (state, action) => {\n      state.cartList = action.payload;\n    },\n    deleteCartItem: (state, action) => {\n      console.log(\"deleteItem\");\n      const cartListNew = state.cartList.filter(item => item.id !== action.payload.id);\n      state.cartList = cartListNew;\n      console.log(\"delete\");\n      localStorage.setItem(\"cart\", JSON.stringify(cartListNew));\n    },\n    countIncrease: (state, action) => {\n      const newProductChanged = { ...action.payload,\n        count: action.payload.count + 1\n      };\n      state.cartList.forEach((el, index) => {\n        if (el.id === action.payload.id) {\n          state.cartList[index] = newProductChanged;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\n    },\n    countDecrease: (state, action) => {\n      if (action.payload.count - 1 > 0) {\n        const newProductChanged = { ...action.payload,\n          count: action.payload.count - 1\n        };\n        state.cartList.forEach((el, index) => {\n          if (el.id === action.payload.id) {\n            state.cartList[index] = newProductChanged;\n          }\n        });\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\n      } else {\n        // state.cartList = state.cartList.filter((item) => item.id !== action.payload.id)\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\n        this.actions.deleteCartItem(action.payload);\n      }\n\n      ;\n    }\n  }\n});\nexport const {\n  setCartList,\n  countDecrease,\n  countIncrease,\n  deleteCartItem\n} = cartListSlice.actions;\nexport default cartListSlice.reducer;","map":{"version":3,"names":["createSlice","getCartFromLS","initialState","cartList","count","cartListSlice","name","reducers","setCartList","state","action","payload","deleteCartItem","console","log","cartListNew","filter","item","id","localStorage","setItem","JSON","stringify","countIncrease","newProductChanged","forEach","el","index","countDecrease","actions","reducer"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/client/src/redux/cartList/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {getCartFromLS} from \"./getCartFromLs\";\r\n\r\nconst initialState = {\r\n  cartList: getCartFromLS(),\r\n  count: 1,\r\n};\r\n\r\nexport const cartListSlice = createSlice({\r\n  name: \"cartList\",\r\n  initialState,\r\n  reducers: {\r\n    setCartList: (state, action) => {\r\n      state.cartList =  action.payload;\r\n    },\r\n\r\n    deleteCartItem: (state, action) => {\r\n      console.log(\"deleteItem\")\r\n      const cartListNew = state.cartList.filter((item) => item.id !== action.payload.id);\r\n      state.cartList = cartListNew\r\n      console.log(\"delete\")\r\n      localStorage.setItem(\"cart\", JSON.stringify(cartListNew));\r\n    },\r\n\r\n    countIncrease: (state, action) => {\r\n      const newProductChanged = { ...action.payload, count: action.payload.count + 1};\r\n\r\n      state.cartList.forEach((el, index) => {\r\n        if (el.id === action.payload.id) {\r\n          state.cartList[index] = newProductChanged;\r\n        }\r\n      });\r\n      localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\r\n    },\r\n\r\n    countDecrease: (state, action) => {\r\n      if(action.payload.count - 1 > 0) {\r\n        const newProductChanged = { ...action.payload, count: action.payload.count - 1}\r\n        state.cartList.forEach((el, index) => {\r\n          if (el.id === action.payload.id) {\r\n            state.cartList[index] = newProductChanged;\r\n          }\r\n        });\r\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList));\r\n      } else {\r\n        // state.cartList = state.cartList.filter((item) => item.id !== action.payload.id)\r\n        localStorage.setItem(\"cart\", JSON.stringify(state.cartList))\r\n        this.actions.deleteCartItem(action.payload)\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCartList, countDecrease, countIncrease, deleteCartItem } = cartListSlice.actions;\r\n\r\nexport default cartListSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAEF,aAAa,EADJ;EAEnBG,KAAK,EAAE;AAFY,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCM,IAAI,EAAE,UADiC;EAEvCJ,YAFuC;EAGvCK,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACN,QAAN,GAAkBO,MAAM,CAACC,OAAzB;IACD,CAHO;IAKRC,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MACjCG,OAAO,CAACC,GAAR,CAAY,YAAZ;MACA,MAAMC,WAAW,GAAGN,KAAK,CAACN,QAAN,CAAea,MAAf,CAAuBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACC,OAAP,CAAeO,EAA3D,CAApB;MACAT,KAAK,CAACN,QAAN,GAAiBY,WAAjB;MACAF,OAAO,CAACC,GAAR,CAAY,QAAZ;MACAK,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAA7B;IACD,CAXO;IAaRQ,aAAa,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB;MAChC,MAAMc,iBAAiB,GAAG,EAAE,GAAGd,MAAM,CAACC,OAAZ;QAAqBP,KAAK,EAAEM,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuB;MAAnD,CAA1B;MAEAK,KAAK,CAACN,QAAN,CAAesB,OAAf,CAAuB,CAACC,EAAD,EAAKC,KAAL,KAAe;QACpC,IAAID,EAAE,CAACR,EAAH,KAAUR,MAAM,CAACC,OAAP,CAAeO,EAA7B,EAAiC;UAC/BT,KAAK,CAACN,QAAN,CAAewB,KAAf,IAAwBH,iBAAxB;QACD;MACF,CAJD;MAKAL,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACN,QAArB,CAA7B;IACD,CAtBO;IAwBRyB,aAAa,EAAE,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MAChC,IAAGA,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuB,CAAvB,GAA2B,CAA9B,EAAiC;QAC/B,MAAMoB,iBAAiB,GAAG,EAAE,GAAGd,MAAM,CAACC,OAAZ;UAAqBP,KAAK,EAAEM,MAAM,CAACC,OAAP,CAAeP,KAAf,GAAuB;QAAnD,CAA1B;QACAK,KAAK,CAACN,QAAN,CAAesB,OAAf,CAAuB,CAACC,EAAD,EAAKC,KAAL,KAAe;UACpC,IAAID,EAAE,CAACR,EAAH,KAAUR,MAAM,CAACC,OAAP,CAAeO,EAA7B,EAAiC;YAC/BT,KAAK,CAACN,QAAN,CAAewB,KAAf,IAAwBH,iBAAxB;UACD;QACF,CAJD;QAKAL,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACN,QAArB,CAA7B;MACD,CARD,MAQO;QACL;QACAgB,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,KAAK,CAACN,QAArB,CAA7B;QACA,KAAK0B,OAAL,CAAajB,cAAb,CAA4BF,MAAM,CAACC,OAAnC;MACD;;MAAA;IACF;EAtCO;AAH6B,CAAD,CAAjC;AA6CP,OAAO,MAAM;EAAEH,WAAF;EAAeoB,aAAf;EAA8BL,aAA9B;EAA6CX;AAA7C,IAAgEP,aAAa,CAACwB,OAApF;AAEP,eAAexB,aAAa,CAACyB,OAA7B"},"metadata":{},"sourceType":"module"}