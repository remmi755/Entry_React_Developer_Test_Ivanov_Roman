{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\components\\\\Cart.js\";\nimport React from \"react\";\nimport styles from \"./Cart.module.css\";\nimport GroupOrder from \"./GroupOrder\";\nimport Header from \"./Header\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.countIncrease = id => {\n      console.log(id); // console.log(product.id)\n      // console.log(this.state.count)\n\n      const {\n        orders\n      } = this.props; // this.setState((orders) => {\n      //\n      //      orders.map((product) => {\n      //\n      //         if(product.id === id) {\n      //             return {\n      //                 ...product,\n      //                 count: this.state.count + 1,\n      //             }\n      //         }\n      //\n      //         return product\n      //     })\n      //\n      // })\n      // if (product.id === id) {\n      //     this.setState({\n      //         count: this.state.count + 1,\n      //     })\n      // }\n    };\n\n    this.state = {\n      count: 1,\n      cart: [],\n      total: {\n        totalPrice: this.props.orders.reduce((prev, curr) => {\n          return prev + curr.prices[this.props.activeCurrency].amount;\n        }, 0),\n        totalCount: 0\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.orders);\n    const {\n      orders\n    } = this.props;\n    const {\n      count\n    } = this.state;\n    console.log(count);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), orders && orders.map((orderItem, id) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.content,\n        children: /*#__PURE__*/_jsxDEV(CartItem, {\n          orderItem: orderItem,\n          count: count,\n          id: orderItem.id,\n          countIncrease: this.countIncrease,\n          countDecrease: this.props.countDecrease,\n          activeCurrency: this.props.activeCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.groupOrder,\n        children: /*#__PURE__*/_jsxDEV(GroupOrder, {\n          total: this.state.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Cart;","map":{"version":3,"names":["React","styles","GroupOrder","Header","CartItem","Cart","Component","constructor","props","countIncrease","id","console","log","orders","state","count","cart","total","totalPrice","reduce","prev","curr","prices","activeCurrency","amount","totalCount","render","container","title","map","orderItem","content","countDecrease","groupOrder"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/components/Cart.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"./Cart.module.css\"\r\nimport GroupOrder from \"./GroupOrder\";\r\nimport Header from \"./Header\";\r\nimport CartItem from \"./CartItem\"\r\n\r\nclass Cart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 1,\r\n            cart : [],\r\n            total:{\r\n                totalPrice: this.props.orders.reduce((prev, curr) => {\r\n                    return prev + curr.prices[this.props.activeCurrency].amount\r\n                }, 0),\r\n                totalCount: 0\r\n            }\r\n        }\r\n    }\r\n\r\n    countIncrease = ( id) => {\r\n        console.log(id)\r\n        // console.log(product.id)\r\n        // console.log(this.state.count)\r\n       const {orders} = this.props\r\n\r\n        // this.setState((orders) => {\r\n        //\r\n        //      orders.map((product) => {\r\n        //\r\n        //         if(product.id === id) {\r\n        //             return {\r\n        //                 ...product,\r\n        //                 count: this.state.count + 1,\r\n        //             }\r\n        //         }\r\n        //\r\n        //         return product\r\n        //     })\r\n        //\r\n        // })\r\n\r\n        // if (product.id === id) {\r\n        //     this.setState({\r\n        //         count: this.state.count + 1,\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.orders)\r\n        const {orders} = this.props\r\n        const {count} = this.state\r\n\r\nconsole.log(count)\r\n\r\n        return (\r\n            <main className={styles.container}>\r\n                <h1 className={styles.title}>Cart</h1>\r\n                {orders &&\r\n                    orders.map((orderItem, id) => (\r\n                        <section className={styles.content} key={id}>\r\n                            <CartItem\r\n                                orderItem={orderItem}\r\n                                count={count}\r\n                                id={orderItem.id}\r\n                                countIncrease={this.countIncrease}\r\n                                countDecrease={this.props.countDecrease}\r\n                                activeCurrency={this.props.activeCurrency}\r\n                            />\r\n                        </section>\r\n                    ))\r\n                }\r\n                <div className={styles.groupOrder}>\r\n                    <GroupOrder total={this.state.total}/>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;EAC/BC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAcnBC,aAdmB,GAcDC,EAAF,IAAS;MACrBC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EADqB,CAErB;MACA;;MACD,MAAM;QAACG;MAAD,IAAW,KAAKL,KAAtB,CAJsB,CAMrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;IACH,CAzCkB;;IAEf,KAAKM,KAAL,GAAa;MACTC,KAAK,EAAE,CADE;MAETC,IAAI,EAAG,EAFE;MAGTC,KAAK,EAAC;QACFC,UAAU,EAAE,KAAKV,KAAL,CAAWK,MAAX,CAAkBM,MAAlB,CAAyB,CAACC,IAAD,EAAOC,IAAP,KAAgB;UACjD,OAAOD,IAAI,GAAGC,IAAI,CAACC,MAAL,CAAY,KAAKd,KAAL,CAAWe,cAAvB,EAAuCC,MAArD;QACH,CAFW,EAET,CAFS,CADV;QAIFC,UAAU,EAAE;MAJV;IAHG,CAAb;EAUH;;EA+BDC,MAAM,GAAG;IACLf,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,MAAvB;IACA,MAAM;MAACA;IAAD,IAAW,KAAKL,KAAtB;IACA,MAAM;MAACO;IAAD,IAAU,KAAKD,KAArB;IAERH,OAAO,CAACC,GAAR,CAAYG,KAAZ;IAEQ,oBACI;MAAM,SAAS,EAAEd,MAAM,CAAC0B,SAAxB;MAAA,wBACI;QAAI,SAAS,EAAE1B,MAAM,CAAC2B,KAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKf,MAAM,IACHA,MAAM,CAACgB,GAAP,CAAW,CAACC,SAAD,EAAYpB,EAAZ,kBACP;QAAS,SAAS,EAAET,MAAM,CAAC8B,OAA3B;QAAA,uBACI,QAAC,QAAD;UACI,SAAS,EAAED,SADf;UAEI,KAAK,EAAEf,KAFX;UAGI,EAAE,EAAEe,SAAS,CAACpB,EAHlB;UAII,aAAa,EAAE,KAAKD,aAJxB;UAKI,aAAa,EAAE,KAAKD,KAAL,CAAWwB,aAL9B;UAMI,cAAc,EAAE,KAAKxB,KAAL,CAAWe;QAN/B;UAAA;UAAA;UAAA;QAAA;MADJ,GAAyCb,EAAzC;QAAA;QAAA;QAAA;MAAA,QADJ,CAHR,eAgBI;QAAK,SAAS,EAAET,MAAM,CAACgC,UAAvB;QAAA,uBACI,QAAC,UAAD;UAAY,KAAK,EAAE,KAAKnB,KAAL,CAAWG;QAA9B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAhBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAsBH;;AAzE8B;;AA4EnC,eAAeZ,IAAf"},"metadata":{},"sourceType":"module"}