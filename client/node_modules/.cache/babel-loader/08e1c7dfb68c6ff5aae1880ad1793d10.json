{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\Entry_React_Developer_Test_Ivanov_Roman\\\\test\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Category from \"./pages/Category\";\nimport Header from \"./pages/Header\";\nimport Cart from \"./pages/Cart\";\nimport { apolloClient } from \"./index\";\nimport { gql } from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport { AppContext } from \"./components/AppContext\";\nimport Modal from \"./components/Modal\";\nimport CartOverlay from \"./components/CartOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCards = async () => {\n      try {\n        const result = await apolloClient.query({\n          query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n        });\n        const categories = result.data.categories;\n        const currenciesList = result.data.categories[this.state.activeItem].products[0].prices;\n        this.setState({\n          productCards: categories,\n          currencies: currenciesList\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onSelectCategories = index => {\n      this.setState({\n        activeItem: index\n      });\n    };\n\n    this.onSelectCurrencies = index => {\n      const {\n        currencies\n      } = this.state;\n      this.setState({\n        activeCurrency: index,\n        selectedCurrency: currencies[index].currency.symbol,\n        openPopup: false\n      });\n    };\n\n    this.onOpenPopup = () => {\n      this.setState({\n        openPopup: !this.state.openPopup\n      });\n    };\n\n    this.onAddToCart = product => {\n      const {\n        cartList,\n        activeAttributes,\n        activeAttributesItem\n      } = this.state;\n      let newProduct = {}; // console.log(activeAttributes)\n      // console.log(activeAttributesItem)\n\n      if (product.inStock) {\n        newProduct = {\n          activeAttributes: activeAttributes,\n          activeAttributesItem: activeAttributesItem,\n          attributes: product.attributes,\n          brand: product.brand,\n          prices: product.prices,\n          gallery: product.gallery,\n          id: product.id,\n          inStock: product.inStock,\n          name: product.name,\n          count: 1\n        };\n      }\n\n      console.log(newProduct);\n      let isInCart = false;\n      cartList.forEach(el => {\n        if (el.id === newProduct.id) {\n          isInCart = true;\n          this.setState({\n            count: ++el.count\n          });\n        }\n      });\n\n      if (!isInCart && product.inStock) {\n        localStorage.setItem('cart', JSON.stringify([...cartList, newProduct]));\n        this.setState({\n          cartList: JSON.parse(localStorage.getItem('cart'))\n        }); // localStorage.setItem('res', JSON.stringify(cartList) )\n      } // let res = [...cartList, newProduct]\n      // let res = this.state.cartList\n      // console.log(res)\n      // localStorage.setItem('res', JSON.stringify(cartList) )\n      // console.log(this.state.cartList)\n\n    };\n\n    this.deleteCartItem = id => {\n      const {\n        cartList\n      } = this.state;\n      this.setState({\n        cartList: cartList.filter(el => el.id !== id)\n      });\n    };\n\n    this.countIncrease = (product, id) => {\n      if (product.id === id) {\n        this.setState({\n          count: ++product.count\n        });\n      }\n    };\n\n    this.countDecrease = (product, id) => {\n      if (product.id === id) {\n        this.setState({\n          count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id)\n        });\n      }\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n\n    this.onHidePopup = () => {\n      document.body.style.overflow = \"\";\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    this.state = {\n      isInCart: false,\n      modalShow: false,\n      count: 1,\n      productCards: [this.renderCards],\n      activeItem: 0,\n      products: [this.renderCards],\n      openPopup: false,\n      activeCurrency: 0,\n      selectedCurrency: '$',\n      cartList: [],\n      activeAttributeItem: 0,\n      activeAttribute: '',\n      total: {\n        totalPrice: 0,\n        totalCount: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.renderCards(); // let cartList = localStorage.getItem('cartList');\n    // let cartList = JSON.parse(localStorage.getItem(\"cart\"));\n    //   this.setState({ cartList });\n  }\n\n  render() {\n    let totalPrice = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.prices[this.state.activeCurrency].amount * curr.count;\n    }, 0).toFixed(2);\n    let totalCount = this.state.cartList.reduce((prev, curr) => {\n      return prev + curr.count;\n    }, 0); // localStorage.setItem('cart', JSON.stringify(this.state.cartList) )\n\n    console.log(this.state.cartList); // console.log(this.state.activeAttribute)\n\n    const {\n      productCards,\n      activeCurrency,\n      cartList,\n      count,\n      currencies,\n      activeItem,\n      selectedCurrency,\n      total,\n      openPopup,\n      modalShow,\n      activeAttributeItem,\n      activeAttribute\n    } = this.state;\n    const {\n      deleteCartItem,\n      countIncrease,\n      countDecrease,\n      onHidePopup,\n      onSelectAttribute,\n      onSelectCategories,\n      onOpenPopup,\n      onSelectCurrencies,\n      toggleModal,\n      onAddToCart\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        totalCount,\n        modalShow,\n        totalPrice,\n        productCards,\n        activeCurrency,\n        currencies,\n        openPopup,\n        cartList,\n        count,\n        activeItem,\n        selectedCurrency,\n        total,\n        activeAttributeItem,\n        activeAttribute,\n        deleteCartItem,\n        countIncrease,\n        countDecrease,\n        onHidePopup,\n        onSelectAttribute,\n        onSelectCategories,\n        onOpenPopup,\n        onSelectCurrencies,\n        toggleModal,\n        onAddToCart\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onOpenPopup: this.onOpenPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Category, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cart\",\n            element: /*#__PURE__*/_jsxDEV(Cart, {\n              activeCurrency: this.state.activeCurrency,\n              cartList: this.state.cartList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:cardId\",\n            element: /*#__PURE__*/_jsxDEV(PDP, {\n              activeCurrency: this.state.activeCurrency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          className: modalShow ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"\",\n          close: toggleModal,\n          shown: modalShow,\n          children: /*#__PURE__*/_jsxDEV(CartOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Route","Routes","Category","Header","Cart","apolloClient","gql","PDP","AppContext","Modal","CartOverlay","App","Component","constructor","props","renderCards","result","query","categories","data","currenciesList","state","activeItem","products","prices","setState","productCards","currencies","err","console","log","onSelectCategories","index","onSelectCurrencies","activeCurrency","selectedCurrency","currency","symbol","openPopup","onOpenPopup","onAddToCart","product","cartList","activeAttributes","activeAttributesItem","newProduct","inStock","attributes","brand","gallery","id","name","count","isInCart","forEach","el","localStorage","setItem","JSON","stringify","parse","getItem","deleteCartItem","filter","countIncrease","countDecrease","toggleModal","modalShow","onHidePopup","document","body","style","overflow","activeAttributeItem","activeAttribute","total","totalPrice","totalCount","componentDidMount","render","reduce","prev","curr","amount","toFixed","onSelectAttribute"],"sources":["D:/Downloads/Computer-science/MyProject/Entry_React_Developer_Test_Ivanov_Roman/test/client/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {Route, Routes} from \"react-router-dom\";\nimport Category from \"./pages/Category\"\nimport Header from \"./pages/Header\"\nimport Cart from \"./pages/Cart\";\nimport {apolloClient} from \"./index\";\nimport {gql} from \"@apollo/client\";\nimport PDP from \"./pages/Pdp\";\nimport {AppContext} from \"./components/AppContext\"\nimport Modal from \"./components/Modal\"\nimport CartOverlay from \"./components/CartOverlay\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isInCart: false,\n            modalShow: false,\n            count: 1,\n            productCards: [this.renderCards],\n            activeItem: 0,\n            products: [this.renderCards],\n            openPopup: false,\n            activeCurrency: 0,\n            selectedCurrency: '$',\n            cartList: [],\n            activeAttributeItem: 0,\n            activeAttribute: '',\n            total: {\n                totalPrice: 0,\n                totalCount: 0\n            }\n        }\n    }\n\n    renderCards = async () => {\n        try {\n            const result = await apolloClient\n            .query({\n                query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                category\n                                prices {\n                                    currency {\n                                        symbol\n                                        label\n                                    }\n                                    amount\n                                }\n                                brand\n                                attributes {\n                                    items {\n                                        id\n                                        value\n                                        displayValue\n                                    }\n                                    id\n                                    name\n                                    type\n                                }\n                                inStock\n                                gallery\n                                description\n                            }\n                        }\n                    }\n                `\n            });\n            const categories = result.data.categories;\n            const currenciesList = result.data.categories[this.state.activeItem].products[0].prices\n\n            this.setState({\n                productCards: categories,\n                currencies: currenciesList\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    componentDidMount() {\n        this.renderCards();\n        // let cartList = localStorage.getItem('cartList');\n      // let cartList = JSON.parse(localStorage.getItem(\"cart\"));\n      //   this.setState({ cartList });\n    }\n\n    onSelectCategories = index => {\n        this.setState({\n            activeItem: index,\n        })\n    }\n\n    onSelectCurrencies = (index) => {\n        const {currencies} = this.state\n        this.setState({\n            activeCurrency: index,\n            selectedCurrency: currencies[index].currency.symbol,\n            openPopup: false,\n        })\n    }\n\n    onOpenPopup = () => {\n        this.setState({openPopup: !this.state.openPopup})\n    }\n\n    // onSelectAttribute = (attribute, id,  el, index) => {\n    //     // const {attribute} = this.props\n    //\n    //     console.log(attribute)\n    //\n    //     console.log(id)\n    //\n    //     if (attribute.items[index] === el) {\n    //         this.setState({\n    //             activeAttributeItem: attribute.items[index],\n    //             activeAttribute: attribute\n    //         })\n    //     }\n    //\n    //\n    // }\n\n    onAddToCart = (product) => {\n        const {cartList, activeAttributes, activeAttributesItem} = this.state;\n        let newProduct = {}\n// console.log(activeAttributes)\n// console.log(activeAttributesItem)\n\n        if (product.inStock ) {\n            newProduct = {\n                activeAttributes: activeAttributes,\n                activeAttributesItem: activeAttributesItem,\n                attributes: product.attributes,\n                brand: product.brand,\n                prices: product.prices,\n                gallery: product.gallery,\n                id: product.id,\n                inStock: product.inStock,\n                name: product.name,\n                count: 1}\n        }\n        console.log(newProduct)\n        let isInCart = false;\n\n        cartList.forEach((el) => {\n            if (el.id === newProduct.id) {\n                isInCart = true;\n                this.setState({\n                    count: ++el.count,\n                })\n            }\n        })\n\n        if (!isInCart && product.inStock) {\n            localStorage.setItem('cart', JSON.stringify([...cartList, newProduct]) )\n            this.setState({\n                cartList: JSON.parse(localStorage.getItem('cart')),\n            })\n\n            // localStorage.setItem('res', JSON.stringify(cartList) )\n        }\n        // let res = [...cartList, newProduct]\n        // let res = this.state.cartList\n        // console.log(res)\n        // localStorage.setItem('res', JSON.stringify(cartList) )\n        // console.log(this.state.cartList)\n\n    }\n\n    deleteCartItem = (id) => {\n        const {cartList} = this.state\n\n        this.setState({\n            cartList: cartList.filter(el => el.id !== id)\n        })\n    }\n\n    countIncrease = (product, id) => {\n        if (product.id === id) {\n            this.setState({\n                count: ++product.count\n            })\n        }\n    }\n\n    countDecrease = (product, id) => {\n        if (product.id === id) {\n            this.setState({\n                count: product.count - 1 > 0 ? --product.count : this.deleteCartItem(id),\n            })\n        }\n    }\n\n    toggleModal = () => {\n        this.setState({\n            modalShow: !this.state.modalShow\n        })\n    }\n\n    onHidePopup = () => {\n        document.body.style.overflow = \"\";\n        this.setState({\n            modalShow: false\n        })\n    }\n\n    render() {\n        let totalPrice = (this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.prices[this.state.activeCurrency].amount * curr.count\n        }, 0)).toFixed(2)\n\n        let totalCount = this.state.cartList.reduce((prev, curr) => {\n            return prev + curr.count\n        }, 0)\n        // localStorage.setItem('cart', JSON.stringify(this.state.cartList) )\n        console.log(this.state.cartList)\n        // console.log(this.state.activeAttribute)\n\n        const {\n            productCards,\n            activeCurrency,\n            cartList,\n            count,\n            currencies,\n            activeItem,\n            selectedCurrency,\n            total,\n            openPopup,\n            modalShow,\n            activeAttributeItem,\n            activeAttribute\n        } = this.state\n        const {deleteCartItem, countIncrease, countDecrease, onHidePopup,onSelectAttribute,\n            onSelectCategories, onOpenPopup, onSelectCurrencies, toggleModal, onAddToCart} = this;\n\n        return (\n            <AppContext.Provider\n                value={{\n                    totalCount, modalShow,\n                    totalPrice, productCards, activeCurrency, currencies, openPopup,\n                    cartList, count, activeItem, selectedCurrency, total, activeAttributeItem,  activeAttribute,\n                    deleteCartItem, countIncrease, countDecrease, onHidePopup, onSelectAttribute,\n                    onSelectCategories, onOpenPopup, onSelectCurrencies, toggleModal, onAddToCart\n                }}\n            >\n                <div>\n                    <Header onOpenPopup={this.onOpenPopup}/>\n                    <Routes>\n                        <Route path=\"/\" element={<Category/>}/>\n                        <Route path=\"/cart\" element={<Cart\n                            activeCurrency={this.state.activeCurrency}\n                            cartList={this.state.cartList}\n                        />}\n                        />\n                        <Route path=\"/:cardId\" element={<PDP\n                            activeCurrency={this.state.activeCurrency}\n                        />}\n                        />\n                    </Routes>\n                    <Modal\n                        className={modalShow ? document.body.style.overflow = \"hidden\" :\n                            document.body.style.overflow = \"\"}\n                        close={toggleModal}\n                        shown={modalShow}\n                    >\n                        <CartOverlay/>\n                    </Modal>\n                </div>\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}