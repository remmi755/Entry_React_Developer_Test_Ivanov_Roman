{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Computer-science\\\\MyProject\\\\NNN\\\\test\\\\client\\\\src\\\\pages\\\\CategoryAll.js\";\nimport React from \"react\";\nimport { gql } from '@apollo/client';\nimport styles from \"./CategoryAll.module.css\";\nimport ProductCard from \"../components/ProductCard\";\nimport { apolloClient } from \"./../index\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CategoryAll extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const renderCards = async () => {\n      const result = await apolloClient.query({\n        query: gql`\n                    query Query {\n                        categories {\n                            name\n                            products {\n                                id\n                                name\n                                inStock\n                                gallery\n                                description\n                                category\n                                brand\n                            }\n                        }\n                    }\n                `\n      }); // const categories = result.data.categories;\n\n      this.setState({\n        isLoaded: true,\n        items: result.data.items\n      });\n    };\n  }\n\n  render() {\n    var _items$products;\n\n    console.log(items);\n    const cards = (_items$products = items.products) === null || _items$products === void 0 ? void 0 : _items$products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this));\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    } else {\n      // return (\n      //     <ul>\n      //         {items.map(item => (\n      //             <li key={item.id}>\n      //                 {item.name} {item.price}\n      //             </li>\n      //         ))}\n      //     </ul>\n      console.log(items);\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          productCard: this.state.productCards,\n          func: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.title,\n          children: this.state.productCards.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: styles.productCards,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.grid,\n            children: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this); //             );\n    }\n  }\n\n} // class CategoryAll extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productCards: this.renderCards,\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.renderCards();\n//\n//     }\n//\n//\n//     componentDidUpdate(prevProps, prevState) {\n//         if (prevState.productCards !== this.state.productCards) {\n//             console.log('pokemons state has changed.')\n//            // this.handleClick()\n//         }\n//     }\n//\n//     renderCards = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const categories = result.data.categories;\n//\n//\n//             this.setState({\n//                 productCards: categories[0]\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     renderCards2 = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const categories = result.data.categories;\n//\n//             this.setState({\n//                 productCards: categories[2]\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     handleClick = () => {\n//         this.setState({productCards: this.renderCards2 });\n//         // console.log(this.categories[2])\n//         console.log('target')\n//     }\n//     press = () => {\n//         let productCard2 = this.state.productCards[1];\n//         this.setState({productCards: productCard2});\n//     }\n//\n//     render() {\n//         console.log(this.state.productCards.name)\n// const res = this.state.productCards[0]\n//         console.log(res)\n//\n//         // const {name} = productCards[0]\n//         // console.log(name)\n//         // console.log(productCards[0])\n//         // console.log(cards1)\n//\n//         const cards = this.state.productCards.products?.map(product => (\n//             <ProductCard key={product.id} product={product}/>\n//         ))\n//\n//         return (\n//             <main className={styles.container}>\n//                 <Header productCard={this.state.productCards} func={this.handleClick}/>\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\n//                 <section className={styles.productCards}>\n//                     <div className={styles.grid}>\n//                         {cards}\n//                     </div>\n//                 </section>\n//             </main>\n//         )\n//     }\n// }\n\n\nexport default CategoryAll; // class CategoryAll extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productCards: [],\n//         }\n//     }\n//\n//     componentDidMount() {\n//         this.renderCards()\n//     }\n//\n//     renderCards = async () => {\n//         try {\n//             const result = await apolloClient\n//             .query({\n//                 query: gql`\n//                     query Query {\n//                         categories {\n//                             name\n//                             products {\n//                                 id\n//                                 name\n//                                 inStock\n//                                 gallery\n//                                 description\n//                                 category\n//                                 brand\n//                             }\n//                         }\n//                     }\n//                 `\n//             });\n//\n//             const cards = result.data.categories[0];\n//\n//             this.setState({\n//                 productCards: cards\n//             });\n//\n//         } catch (err) {\n//             console.log(err);\n//         }\n//         ;\n//     }\n//\n//     render() {\n//         const cards = this.state.productCards.products?.map(product => (\n//             <ProductCard key={product.id} product={product}/>\n//         ))\n//\n//         return (\n//             <main className={styles.container}>\n//                 <Header />\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\n//                 <section className={styles.productCards}>\n//                     <div className={styles.grid}>\n//                         {cards}\n//                     </div>\n//                 </section>\n//             </main>\n//         )\n//     }\n// }","map":{"version":3,"names":["React","gql","styles","ProductCard","apolloClient","Header","CategoryAll","Component","constructor","props","state","error","isLoaded","items","componentDidMount","renderCards","result","query","setState","data","render","console","log","cards","products","map","product","id","message","container","productCards","handleClick","title","name","grid"],"sources":["D:/Downloads/Computer-science/MyProject/NNN/test/client/src/pages/CategoryAll.js"],"sourcesContent":["import React from \"react\";\r\nimport {gql} from '@apollo/client';\r\nimport styles from \"./CategoryAll.module.css\"\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport {apolloClient} from \"./../index\"\r\nimport Header from \"../components/Header\";\r\n\r\nclass CategoryAll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const renderCards = async () => {\r\n\r\n            const result = await apolloClient\r\n            .query({\r\n                query: gql`\r\n                    query Query {\r\n                        categories {\r\n                            name\r\n                            products {\r\n                                id\r\n                                name\r\n                                inStock\r\n                                gallery\r\n                                description\r\n                                category\r\n                                brand\r\n                            }\r\n                        }\r\n                    }\r\n                `\r\n            });\r\n\r\n            // const categories = result.data.categories;\r\n\r\n\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.data.items\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(items)\r\n        const cards = items.products?.map(product => (\r\n            <ProductCard key={product.id} product={product}/>\r\n        ))\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Ошибка: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Загрузка...</div>;\r\n        } else {\r\n            // return (\r\n            //     <ul>\r\n            //         {items.map(item => (\r\n            //             <li key={item.id}>\r\n            //                 {item.name} {item.price}\r\n            //             </li>\r\n            //         ))}\r\n            //     </ul>\r\n            console.log(items)\r\n            return (\r\n                <main className={styles.container}>\r\n                    <Header productCard={this.state.productCards} func={this.handleClick}/>\r\n                    <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n                    <section className={styles.productCards}>\r\n                        <div className={styles.grid}>\r\n                            {cards}\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n        )\r\n//             );\r\n        }\r\n    }\r\n}\r\n// class CategoryAll extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productCards: this.renderCards,\r\n//         }\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.renderCards();\r\n//\r\n//     }\r\n//\r\n//\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevState.productCards !== this.state.productCards) {\r\n//             console.log('pokemons state has changed.')\r\n//            // this.handleClick()\r\n//         }\r\n//     }\r\n//\r\n//     renderCards = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const categories = result.data.categories;\r\n//\r\n//\r\n//             this.setState({\r\n//                 productCards: categories[0]\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     renderCards2 = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const categories = result.data.categories;\r\n//\r\n//             this.setState({\r\n//                 productCards: categories[2]\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     handleClick = () => {\r\n//         this.setState({productCards: this.renderCards2 });\r\n//         // console.log(this.categories[2])\r\n//         console.log('target')\r\n//     }\r\n//     press = () => {\r\n//         let productCard2 = this.state.productCards[1];\r\n//         this.setState({productCards: productCard2});\r\n//     }\r\n//\r\n//     render() {\r\n//         console.log(this.state.productCards.name)\r\n// const res = this.state.productCards[0]\r\n//         console.log(res)\r\n//\r\n//         // const {name} = productCards[0]\r\n//         // console.log(name)\r\n//         // console.log(productCards[0])\r\n//         // console.log(cards1)\r\n//\r\n//         const cards = this.state.productCards.products?.map(product => (\r\n//             <ProductCard key={product.id} product={product}/>\r\n//         ))\r\n//\r\n//         return (\r\n//             <main className={styles.container}>\r\n//                 <Header productCard={this.state.productCards} func={this.handleClick}/>\r\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <div className={styles.grid}>\r\n//                         {cards}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default CategoryAll;\r\n\r\n// class CategoryAll extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productCards: [],\r\n//         }\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.renderCards()\r\n//     }\r\n//\r\n//     renderCards = async () => {\r\n//         try {\r\n//             const result = await apolloClient\r\n//             .query({\r\n//                 query: gql`\r\n//                     query Query {\r\n//                         categories {\r\n//                             name\r\n//                             products {\r\n//                                 id\r\n//                                 name\r\n//                                 inStock\r\n//                                 gallery\r\n//                                 description\r\n//                                 category\r\n//                                 brand\r\n//                             }\r\n//                         }\r\n//                     }\r\n//                 `\r\n//             });\r\n//\r\n//             const cards = result.data.categories[0];\r\n//\r\n//             this.setState({\r\n//                 productCards: cards\r\n//             });\r\n//\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//         }\r\n//         ;\r\n//     }\r\n//\r\n//     render() {\r\n//         const cards = this.state.productCards.products?.map(product => (\r\n//             <ProductCard key={product.id} product={product}/>\r\n//         ))\r\n//\r\n//         return (\r\n//             <main className={styles.container}>\r\n//                 <Header />\r\n//                 <h1 className={styles.title}>{this.state.productCards.name}</h1>\r\n//                 <section className={styles.productCards}>\r\n//                     <div className={styles.grid}>\r\n//                         {cards}\r\n//                     </div>\r\n//                 </section>\r\n//             </main>\r\n//         )\r\n//     }\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}